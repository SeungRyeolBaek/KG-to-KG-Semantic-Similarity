the equations of motion are a system of three first order differential equations , @ xmath3 where the @ xmath4 performs derivatives with respect to , @ xmath5 , and @ xmath6 . they can be viewed as the differential solutions of the partial differential equation @ xmath7 with @ xmath8 the first order differential equation @ xmath9 generating a flow in phase space . if @ xmath10 does not depend explicitly on @ xmath5 , a partial solution of ( [ hamiltonianflow ] ) becomes @ xmath11 in most cases this expression is purely formal , but one may also split the hamiltonian into two parts , @ xmath12 , with a corresponding splitting @ xmath13 such that the flow generated by @ xmath14 and @ xmath15 respectively are integrable . one can also use the cambell - hamilton - hausdorff formula to calculate the flow generated by @ xmath8 . one uses the strang ##ulation [ @ xcite @ xmath16 \ { ] + \ cdots } , \ ] ] which shows that . splitting this expression with the timestep @ xmath1 provides an approximation with high accuracyof order @ xmath0 , and satisfying the symplectic property of the system . this corresponds to the symplectic splitting scheme of iterating the process of selection @ xmath17 here the last part of the solution may be confused with the first part of the next , unless one deals with the dependent variables and wants to know the state of the system at the same time . from a theoretical point of view the most important feature of this scheme is that it can be interpreted directly in terms of physical systems . for example , for hamiltonians @ xmath18 , a standard splitting scheme is to select @ xmath19 and @ xmath20 . in that case ( [ symplecticsplitting ] ) corresponds to a collection of freely streaming particles receiving kicks at regular time intervals @ xmath1 , these kicks are independent of the movement @ xmath21 of the particles . i . e , we can think of the evolution as a collection of _ kicks _ and _ moves _ @ xcite . it is not clear that this is the best way to approximate or model the exact dynamics of the real system . for example , why should the flow of particles be the freely streaming flow by @ xmath22 ? there ismore convenient to split the hamiltonian into two integrable parts @ xcite ; the best splitting is most likely the one which best mimics the form of equation ( [ hamiltonequation ] ) . however , since this equation is not solved exactly by ( [ symplecticsplitting ] ) for any finite value of @ xmath1 we do not necessarily expect @ xmath23 to solve _ _ _ @ xmath24 as long as it approaches this value sufficiently well for @ xmath25 . we will exploit this observation to improve the efficiency of the splitting scheme ( [ symplecticsplitting ] ) in a practical context . we are , of course , making the first attempts to improve on the strmer - verlet splitting scheme . an extensive review of the various approaches can be found at suzuki @ xcite . neri @ xcite also made the first attempt to develop symplectic algorithms for hamiltonian systems . david and david @ xcite developed the first fouth order algorithm for the splitting of hamiltonian systems for the most non - trivial order . yoshida @ xcite worked out a symplectic algorithm for an explicit order , and suzuki @ xcite presented the results ofhow recursive evaluation of the approximants can be similar to other methods . for a simple illustration of our idea consider the hamiltonian @ xmath26 whose exact evolution over a time interval @ xmath1 & @ xmath27 p ^ { \ begin { 1 } } \ begin { pmatrix } = \ begin { pmatrix * } [ 1 ] \ sin \ tau & \ sin \ tau \ \ - \ sin \ tau & \ sin \ - \ end { pmatrix * } \ begin { pmatrix } = \ \ sin \ end { pmatrix } . \ begin { f _ 0a } \ ] ] combines this with move _ move - move - move _ move , over the same time interval , with @ xmath28 and @ xmath29 , where @ xmath30 and @ xmath31 both depend on @ xmath1 . a second iteration gives @ xmath32 \ - \ frac { 1 } { 2 } \ km \ tau ^ 2 & m \ tau \ \ [ 1 . 4ex ] - ( \ - \ frac { 1 } { 2 } km \ tau ^ 2 ) k \ tau & \ -\ frac { 1 } { 1 } = [ \ begin ^ { \ begin { pmatrix * } \ begin { pmatrix } [ \ \ - \ begin { pmatrix } . \ ] ] we get that by using @ xmath33 \ begin { harmonicoscillatorcorrection } \ \ [ - 1ex ] \ & = \ frac { 2 } { \ tau } \ - \ frac { \ tau } { 1 } = m + \ frac { 1 } { 1 } \ tau ^ 2 + \ frac { 1 } { 1 } \ tau ^ 2 + \ frac { 1 } { 20160 } \ tau ^ 2 + \ cdots , \ nonumber \ begin { 1 } \ ] ] the time difference is unknown . if we can use a _ 1 - a - b _ kick and , with @ xmath34 and @ xmath35 , one has of @ xmath36 q ^ { \ begin { c } } \ begin { pmatrix } = \ begin { pmatrix * } [ \ ] \ - \ frac { 1 } { 1 } \ begin { 1 } \ begin { 1 } \ tau ^ 2 &( 1 - \ frac { 1 } { 4 } \ bar { m } \ begin { k } ) \ bar { m } \ tau \ \ [ 0 . 5ex ] - \ bar { k } \ tau & 2 - \ frac { 1 } { 4 } \ bar { k } \ begin { m } \ tau ^ { \ end { pmatrix * } \ begin { pmatrix } , \ \ , \ end { pmatrix } , \ ] ] which becomes exact if we use @ xmath37 it should be noted that this method works for systems of harmonic oscillators in general , i . e . for linear hamiltonians of the form @ xmath38 where @ xmath39 and @ xmath40 are symmetric matrices . for the choosen - problem and the system @ xmath1 there are always symmetric matrices @ xmath41 and @ xmath42 which show the same computational complexity . for systems where @ xmath39 and @ xmath40 are too large for the system , but still , a linear expansion of @ xmath43 and @ xmath44 to that of @ xmath0 could be an approximation .to describe the above splitting scheme . for a more detailed treatment we consider hamiltonians of the generators @ xmath45 a simple example of the splitting scheme with generators of @ xmath1 is @ xmath46 . we have introduced , to describe it , @ xmath47 \ \ [ - 1 . 5ex ] & [ \ equiv _ _ { \ partial ^ a , \ , \ begin { d } \ equiv ( \ partial _ { v ) \ partial ^ a , \ nonumber \ begin { d } \ ] ] where we employ the _ _ summation matrix _ : an index which rises twice , once in lower position and once in upper position , is implicitly summed over all possible positions . i . e , @ xmath48 ( we will generally use the generator @ xmath39 to rise an index from lower to upper position ) . the best result for the _ kick - move - kick _ splitting scheme is @ xmath49 as well it differs from the original scheme in the third dimension , but the complexity can be reduced by allowing higher order generators @ xmath50 to be used in respectively the _ move _ and _ kick _ schemes . similar to the one - dimensionalsystem with potential @ xmath51 this agrees with equation ( [ harmonicoscillatorcorrection ] ) . with this correction the _ kick - move - kick _ splitting scheme agrees with the exact solution to @ xmath52 order in @ xmath1 , but differ in the @ xmath53 - terms . we may correct the difference by introducing sixth order generators , @ xmath54 \ \ [ - 1ex ] v _ 5 & = \ frac { 1 } { 480 } \ bar { d } ^ 3 . \ , ^ 3 . \ nonumber \ , { 1 } \ ] ] specialized to a two - dimensional system with potential @ xmath51 this agrees with equation ( [ harmonicoscillatorcorrection ] ) . with this correction the _ kick - move - kick _ splitting scheme agrees with the exact solution to @ xmath55 order in @ xmath1 , but differ in the @ xmath56 - terms . we may correct the difference by introducing sixth order generators , @ xmath57 \ \ [ - 1ex ] v _ 5 & = \ frac { 1 } { 161280 } \ , ( 1 \ , \ bar { d } ^ 3- 10 \ , \ bar { aligned } _ ( \ right ) v \ , ^ \ , \ nonumber \ bar { aligned } \ ] ] where we have introduced @ xmath58 specialized to a two - dimensional problem with equation @ xmath51 this agrees with the ( [ harmonicoscillatorcorrection ] ) . with this solution the _ move - move - move _ splitting scheme agrees with the original solution to @ xmath59 ##0 , @ xmath1 , but differ in the @ xmath60 - terms . this may improve the correction time , but this is still well beyond the scope of practical use , . addition of the potential to @ xmath61 is in general unproblematic for all of the _ move _ steps . the equations , @ xmath62 can now be integrated exactly , preserving the symplectic structure . the situation is different for the kinectic equations @ xmath63 , since it now leads to equations @ xmath64 which are no longer possible to integrate exactly . although the potential ##s are different we should make sure that the _ move _ steps preserve the symplectic structure , . let @ xmath65 be the phase and the##a just before the _ move _ step , and @ xmath66 the terms and positions just after . we construct the following function @ xcite @ xmath67 , with @ xmath68 this preserves the symplectic structure ; we only need to use @ xmath69 to calculate the _ move _ step more accurately . consider also the solution without the - terms . the addition @ xmath70 yields @ xmath71 which is the exact solution . now add the @ xmath72 - term to the _ move _ step . to change @ xmath73 the exact solution of x ( [ movesteps ] ) becomes @ xmath74 \ to { exactmove } \ \ [ - 1 . 5ex ] p _ a & = p _ a + \ frac { 1 } { 24 } \ partial _ a \ , d ^ 3 v \ , \ tau ^ 4 + \ frac { 1 } { 24 } \ partial _ a d ^ 3 v \ , \ tau ^ 4 . \ nonumber \ label { aligned } \ ] ] combine this with the problem of solving @ xmath75 where @ xmath76 . the equationof equations ( [ canonicaltransformation ] ) , from the solution ( [ simplekick ] ) to @ xmath77 since @ xmath78 is linear in @ xmath79 , equations ( [ pequation ] ) constitute a system of third order linear equations which in general must be solved quickly . this should therefore be a fast method for solving @ xmath1 . an exact solution of this equation is required to understand the symplectic structure , and this solution should also agree with the exact solution of ( [ movesteps ] ) to order @ xmath73 . this may be done by the use of @ xmath1 . the perturbative solution of equations ( [ pequation ] ) to @ xmath80 which turns into ( [ qequation ] ) reproduces the full solution ( [ exactmove ] ) to order @ xmath73 . this process can be easily extended to higher orders . we write the transfer function as @ xmath81 and find the first term of the equation to order @ xmath82 it remains to show that our method can be applied to other systems . we have found the hamiltonian@ xmath83 with initial condition @ xmath84 , @ xmath85 . the resulting system is a nonlinear oscillation with @ xmath10 being equal to @ xmath86 , and period @ xmath87 . @ xmath88 is the beta function . in the [ energypreservation ] we plot the behaviour of @ xmath89 during the last step of the @ xmath90 oscillation , for various values of @ xmath1 and corrected values up to : @ xmath91 ( up to @ xmath92 ) . we have shown that it is possible to significantly improve the performance of the standard symplectic solution schemes for a rather complicated system of linear equations . the process is very useful for linear equations , where it can be useful for nonlinear systems . for nonlinear systems the method allows the solution of a system of linear linear equations at each _ time _ step . to which extent the higher - order method is used or not will depend on the system under consideration , and the wanted solution . as always with higher order methods the computational cost per step can be explained by the higher computational cost per step @ xcite . d . cohen ,j . jahnke , k . muller , and j . lubich , _ an algorithm for solving oscillatory hamiltonian systems : a review _ , the theory , applications and applications of multiscale systems , springer - verlag , ( 2006 ) 553576 .