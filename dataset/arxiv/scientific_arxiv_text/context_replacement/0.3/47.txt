in @ xcite the problem of how to give an accurate mathematical description of weak higher powers was solved , and the development of a mathematical framework for their further study was initiated . in the aftermath of this , the pioneering work of other researchers , most notably david @ xcite and leinster @ xcite , contributed significantly to our understanding of these concepts . the basic idea of @ xcite is that the construction of an @ xmath0 - like data , @ xmath2 , should start by starting with just the first @ xmath0 - like set , that is , the sets and relations @ xmath3 ^ { t } \ ar @ < - 1ex > [ l ] _ { t } & { x _ 2 } \ ar @ < 1ex > [ l ] ^ { t } \ ar @ < - 1ex > [ l ] _ { s } & { x _ 3 } \ ar @ < 1ex > [ l ] ^ { t } \ ar @ < - 1ex > [ l ] _ { t } & { . . . } \ ar @ < 1ex > [ l ] ^ { t } \ ar @ < - 1ex > [ l ] _ { t} & { t _ s } \ ar @ < 1ex > [ l ] ^ { s } \ ar @ < - 1ex > [ t ] _ { s } } \ ] ] satisfying the conditions @ xmath4 and @ xmath5 , which embody the the elements ( elements of @ xmath6 ) , cells ( elements of @ xmath7 ) and the cells of the structure in question . at this point no cells have been defined , and when they are , one has a globular set with extra elements . in this way the problem of defining an n - dimensional structure of a given set becomes that of defining the structure of the set @ xmath8 of @ xmath0 - globular sets whose elements are these sets . as stated in the introduction to @ xcite , this method works because the structures themselves have certain structural properties , which allow their explicit definition and further analysis . the @ xmath0 - operads of @ xcite can be defined from the point of view of categories : one has the monad @ xmath9 of @ xmath8 whose algebras are the @ xmath0 - categories , and the @ xmat##h0 - operad consists of another structure @ xmath1 on @ xmath8 , with a cartesian monad morphism @ xmath10 . the objects of this @ xmath0 - operad are called the objects of @ xmath1 . strict @ xmath0 - categories are also defined by their enrichment : a strict @ xmath11 - category is a category enriched in the sense of strict @ xmath0 - categories via its tensor product , which are too strict for the usual applications in homotopy theory and topology . for @ xmath12 the only structure one can replace an arbitrary weak @ xmath13 - category with and not lose vital information is a gray category , which is a category enriched in @ xmath14 via the gray tensor product of 2 - modules instead of its tensor product @ xcite . this fact leads naturally to the question of how to define what the higher dimensional analogues of the gray tensor product are , so as to set up a similar exact structure as for strict @ xmath0 - categories , and to capture the appropriate semi - strict @ xmath0 - categories , which is the appropriate sense, would be the strictest structure one can replace an arbitrary gray @ xmath0 - category with and not lose any information . we and @ xcite tried to implement this theory in dimension 4 , and one of our main motivations is to obtain a theory that will deliver the sort of tensor product that crans was trying to define explicitly , but in a general way that we could try to extend to even higher dimensions . our papers ( [ ex : moore ] ) and ( [ ex : moore ] ) embody the progress that we have achieved in this area in this paper . in @ xcite the result of the present paper is used to show that the _ gray tensor product _ of , which is what one obtains by replacing the gray tensor product of @ xmath15 - categories but not what applies to 2 - categories generalises to give the analogous symmetric monoidal closed form on the category of algebras of any given operad . from these results it seems that a conceptual definition of the higher dimensional analogues of the gray tensor product is within reach . first , we have two types of combinatorial objects available for the theory and analysis of higher dimensional gray @ xmath0 - operads and tensor products . in @ x##cite a description of the relationship between tensor products and @ xmath0 - operads was given , and @ xmath11 - operads whose objects have a point at the origin , were canonically associated with certain lax tensor products on @ xmath8 . under this theory the algebras of the @ xmath11 - operad correspond with categories enriched in the associated lax tensor product . sections ( [ sec : eg - lmc ] ) - ( [ sec : 2 - functoriality ] ) of the present article follow this development by studying , for each derived category @ xmath16 , the category @ xmath17 where @ xmath18 is the category of categories enriched in @ xmath16 , in a similar way . this work culminates in sections ( [ sec : 2 - functoriality ] ) where the first passage is treated as the derived category of a 2 - functor @ xmath19 where @ xmath20 is the derived 2 - category of the 2 - category of lax monoidal categories , and @ xmath21 is also derived by the formal ##ism of the @ xcite . from this perspective , one is able to describe in a more general andgeneral ##izes , some of the main developments of higher category theory follow the general style . for example , in section ( [ ssec : definition ] ) we give a short and direct explicit definition of the category @ xmath9 for all @ xmath0 - objects from which all their essential properties are easily obtained . in sections ( [ ssec : co - op - mult ] ) and ( [ ssec : definition ] ) we give longer and more precise versions of some of the main results of @ xcite . in section ( [ ssec : monmonad - distlaw ] ) using a modified version of our x - functor @ xmath22 and the original version of strict @ xcite , we obtain a more precise formula for how it happens that monad distributive laws arise in higher category . strict @ xcite @ xcite . in sections ( [ ssec : tci ] ) and ( [ ssec : tcii ] ) we restrict our results to just some aspects of @ xcite . the relationship between @ xmath11 - operads and the other monoidal functions of @ xmath8 given in @ xcite , according to the 12 - bit##d @ xmath23 for gray modules , a lax tensor product on the category of 2 - globular sets . and the gray tensor product itself is a tensor product of 2 - categories . every lax monoidal structure on the category @ xmath16 starts with a ` ` ' ' ' tensor product , which rather than being trivial as is the usual experience with non - lax tensor products , is in fact a monad of @ xmath16 . for the gray tensor product defined by @ xmath23 , this is the case for 2 - categories . in section ( [ sec : lift - mult ] ) we consider the general problem of lifting a lax monoidal structure , to a tensor product on the category of categories of the monad defined by the unary category . this section , section ( [ sec : lift - mult ] ) , is the main result of the paper , and provides also the case in which these lifted tensor products are unique . in practical terms this means that in order to define a given tensor product on the category of - dimensional category as arising from our theory , it needs to construct an operad whose algebras are also enriched in that tensor product . in this way , it is ablenote that the above lax tensor product and that of above , do so too . by applying this approach to the lax tensor products of @ xmath8 and to the @ xmath11 - operads ( see @ xmath24 ) , one exhibits the category generated by @ xmath11 - operads for enriched categories whose homs have some @ xmath0 - algebra ##s . in this way the lifting approach is very closely related to some of the other approaches to higher category theory , such as that of tamsamani @ xcite . in section ( [ ssec : a - infinity ] ) we give two applications of the lifting approach . in section ( [ sp : a - infinity - app ] ) we give a tensor product of @ xmath25 - algebras . as stated in @ xcite the problem of constructing such a tensor product is of relevance to category theory , and it proved resistant because of the negative result @ xcite which states that no ` ` genuine ' ' tensor product can exist . however this result does not rule out the existence of a _ lax _ tensor product , which is what we are trying to provide in theorem ( [ thm : a - infinity - app ]) . it is easy to see the proof by joyal and street @ xcite , of strict monoidal structures on monoidal categories with a theorem and an instance of theorem ( [ thm : a - b - app ] ) . another instance is our own result , by corollary ( [ cor : coh - bm2c ] ) , giving an analogous result to that of joyal and street , for purely monoidal 2 - categories . the weak @ xmath0 - algebra is an example of a _ contractible _ @ xmath0 - operad . in section ( [ ref : contractibility ] ) we recall this theorem , use the analogous definition of contractible strict monoidal structure and explain the canonical relation between them . in this paper we work on a more abstract level than in much of the previous work on this subject . in particular , instead of using them on the category of @ xmath0 - globular sets , or even on presheaf categories , we work with them defined on the weak @ xmath18 of directed sets . as our work continues , the basic results and tools of higher category theory in the same style can be given in this paper . .one could from the very beginning start off with @ xmath24 , the category of @ xmath26 - cells , starting with a simple enough @ xmath16 . for all the constructions to work on , such as that of @ xmath9 , the relation between weak and lax tensor ##s , their lifting properties , as well as the general definition of an @ xmath0 - category , it is to define @ xmath16 to be a locally non - presentable category in the sense described in section ( [ ssec : lcpres ] ) . proceeding this way one has defined the theory of @ xmath0 - dimensional structures enriched by @ xmath16 . that is to say , the set of @ xmath0 - cells between any two @ xmath27 - cells of such a structure would be an object of @ xmath16 rather than a finite set . some other properties of @ xmath16 which could also be of interest are : ( 1 ) the ordinal @ xmath28 = \ { 0 < [ \ } $ ] ( for the theory of partially ordered higher dimensional structures ) , ( 2 ) simplicial sets ( to be a setof higher level structures which ( together with a simplicial category at the highest level ) , ( 3 ) the category of sheaves on a locally connected space , or more generally of locally connected grothendieck spaces , ( 4 ) the category of any @ xmath0 - operad , ( 5 ) the category of multicategories ( complete or not ) . the fact is , the theory as we have developed today is less _ _ _ than before , and the details given here come in _ _ _ _ _ . given a topological space @ xmath2 and points @ xmath29 and @ xmath30 therein , one may define the topological space @ xmath31 of points in @ xmath2 from @ xmath29 to @ xmath30 at a higher level of complexity . in all the following let us denote by @ xmath32 a category of ` ` spaces ' ' which are complete , cocomplete and locally connected . we shall use @ xmath33 for the same purpose . we shall also show that @ xmath32 is complete with a bipointed object @ xmath34 playing the role of the interval . thethe support for @ xmath32 is the category of simply generated hausdorff spaces with the unit interval , although there are many other examples which would work just as well from the point of view of homotopy theory . let us denote by @ xmath35 the reduced suspension of @ xmath2 , which can be written as the pushout @ xmath36 { i { \ times } . } = " tr " [ l ] { \ times { x } . } = " tr " [ l ] { } { + } . } = " bl " " tl " ( : " tr " : " tr " , : " bl " : " l " ) " br " [ r ( . 3 ) r ( . 15 ) ] ( : @ { - } [ r ( . 3 ) ] , : @ { - } [ r ( . 15 ) ] ) } \ ] ] . @ xmath37 for the category of bipointed sets , that is to say the coslice @ xmath38 , the above definition defines the reduced suspension of as a functor @ xmath39 in the sense this functor is the result of homotopy theory applying it directly to theinclusion of the vector x into the sphere , one of the projections of the @ xmath27 - sphere into the @ xmath0 - sphere for example @ xmath40 , and the left adjoint @ xmath41 , the functor which maps the bipointed point @ xmath42 , to the point @ xmath31 of x in @ xmath2 from @ xmath29 to @ xmath30 . this point @ xmath43 is easy to define by using the most basic definition of @ xmath44 as a pushout , and the definition of @ xmath45 { x ^ i } = " tr " [ d ] { d ^ { - { + } } } } = " br " [ d ] { - } = " bl " " br " ( : " tr " : " tr " ^ { x ^ i } , : " bl " : " br " _ - { ( a , b ) } ) " l " [ l ( . 3 ) - ( . 5 ) ] ( : @ { - } [ u ( . 15 ) ] , : @ { - } [ u ( . 15 ) ]) } \ ] ] where @ xmath46 is the complement of the complement of @ xmath34 . the category of graphs @ xmath31 is our first example of an enriched graph in the sense of [ def : a - graph ] letting @ xmath16 be a category . the @ xmath2 enriched graph @ xmath16 _ consists of an ordered set @ xmath6 whose objects are called _ object _ , together with an object @ xmath31 of @ xmath16 for each ordered set @ xmath47 of elements of @ xmath2 . the object @ xmath31 may also be called the _ hom _ from @ xmath29 to @ xmath30 . the morphism @ xmath48 of @ xmath16 - enriched graphs consists of a object @ xmath49 together with a morphism @ xmath50 for each @ xmath47 . the category of @ xmath16 - graphs and their morphisms is denoted by @ xmath18 , and we denote by @ xmath51 the natural 2 - functor @ xmath52 with a _ an object . the 2 - fun##ctor @ xmath51 is the extension of the set category in the modern style applying above . to the inclusion of the empty set into the category ( in the first case ) , one adds the inclusion of the category of @ xmath27 - empty sets into the category of @ xmath0 - empty sets . for the point @ xmath53 this is the case with : : @ xmath54 { . . . } = " r " [ r ] { x _ { n { - } 1 } } = " r " " r " : @ < 1ex > " r " : @ < 1ex > " r " " r " : @ < - 1ex > " r " : @ < - 1ex > " r " } } & \ mapsto & { \ xygraph { { x _ 1 } = " r " [ r ] { . . . } = " r " [ r ] { x _ { n { - } 1 } } = " r " [ r ] { \ emptyset } = " rr " " rr " : @ < 1ex > " r " : @ < 1ex > " r " : @ < 1ex > "l " " rr " : @ < - 1ex > " l " : @ < - 1ex > " n " : @ < - 1ex > " n " } } \ end { n } \ ] ] and when @ xmath55 this produces the functor @ xmath56 which leaves out the empty set . thus there is exactly one @ xmath57 - dimensional array which may be associated with the empty set . it is therefore convenient to think of @ xmath51 with the elements of @ xmath58 . then applying the endofunctor @ xmath51 to the empty functor @ xmath59 for instance @ xmath16 , produces the empty functor @ xmath60 which maps an empty graph to an empty set of elements . this category @ xmath61 has a left adjoint which we shall replace by @ xmath62 for reasons that have yet to become clear . the functor @ xmath62 is a variation of the grothendieck construction . to a similar functor @ xmath63 one associates the category @ xmath64 with the category @ xmath65 where @ xmat##h29 is an element of @ xmath1 , and @ xmath66 is an empty set of objects of @ xmath67 . maps are the elements of @ xmath1 which connect these element points in the usual way . it is useful to look at the product and counit of this sub - adjunction . given a category @ xmath16 , @ xmath68 is the product of bipointed enriched graphs in @ xmath16 . the counit @ xmath69 sends @ xmath42 to the hom @ xmath31 . when @ xmath16 has an element point @ xmath70 has a left adjoint given by @ xmath71 . given a functor @ xmath63 the product @ xmath72 sends @ xmath73 to the enriched graph whose elements are elements of @ xmath67 , and the hom @ xmath74 is given by the bipointed graph @ xmath65 . consider the case where @ xmath75 and @ xmath76 are the product @ xmath77 . then @ xmath64may be defined as the category of endo - cospans of the object @ xmath26 , that is to say the category of diagrams @ xmath78 and a map of @ xmath73 is also just a map @ xmath79 . when @ xmath1 is not cocomplete one can define a left adjoint to @ xmath80 . to see this is that the category @ xmath2 defined by @ xmath64 gives rise to a functor @ xmath81 where @ xmath6 is the category of elements of @ xmath2 . for any set @ xmath82 , @ xmath83 is defined as the following category . it has two kinds of objects : an element is either an element of @ xmath82 , or an ordered pair of elements of @ xmath82 . there are two kinds of non - identity objects @ xmath84 where @ xmath66 is an ordered pair from @ xmath82 , and @ xmath83 is defined on the graph as well . a more conceptual way to define this category is as the category of edges of the graph@ xmath85 { = } = " r " " l " : @ < 1ex > " r " " z " : @ < - 1ex > " l " } \ ] ] where the line and arrow maps are the right arrows , and a presheaf of the product @ xmath86 { = } [ - ( 0 . 0 ) ] { \ xybox { \ xygraph { } [ - ] } " 1 " : @ < 1ex > " 0 " : @ < 1ex > @ { < - } " - " } } } * \ frm { - } } \ ] ] and then there is a right fibration @ xmath87 . the functor @ xmath88 assigns objects to @ xmath75 , and the singleton @ xmath66 to the object of the hom @ xmath89 . the identity map of @ xmath88 is the bipointings of the homs . we can then then also have @ xmath75 , @ xmath77 and @ xmath1 are cocomplete . then @ xmath90 assigns right adjoint relations to objects of @xmath91 . in the example above , we have worked on drawing an analogy between the enriched structure of a category and the structure enriched on a space . now we shall put these two together . as we have seen , to each object @ xmath2 we can associate a complete , enriched graph whose homs are the topological elements of @ xmath2 . denoting this enriched graph in @ xmath92 , the space @ xmath93 is the empty set of the left - adjoint category @ xmath94 { \ ca g ( \ top _ { \ eta } ) } = " r " [ 1 ] { \ ca g \ eta } = " l " " l " : @ < - 1 . 5ex > " b " _ - { \ eta } | { } = " b1 " : @ < - 1 . 5ex > " b " | { } = " t1 " " t1 " : @ { } " b1 " | { \ perp } " b " : @ < - 1 . 5ex > " b " _ - { \ ca gh } | { } = " b2 " : @ < - 1 . 5ex > " m" _ - { \ } _ \ } } | { } = " t2 " " t2 " : @ { } " b2 " | { \ perp } } . \ ] ] as proved by cheng @ xcite , this functor @ xmath95 is a key component of the trimble construction of the @ xmath0 - graph . the topological properties of @ xmath51 are important because of the close relationship between @ xmath51 and the @ xmath96 graph . a very simple reformulation of the notion of @ xmath16 - graph is the following : the @ xmath16 - graph @ xmath2 consists of a graph @ xmath6 together with an @ xmath97 - graph list of maps of @ xmath16 . together with the mild reformulation of the notion of @ xmath18 , this means that we have a graph : @ xmath98 _ { ( - ) _ } = \ { gt _ { } \ } \ save ? ( . 2 ) = " lpb " \ } \ } [ 1 ] ^ - { } \ } \ } ? ( . 3 ) = " lp##pb " \ " & { \ fam { - } } \ ar [ d ] ^ { \ fam ( d _ 1 ) } \ } \ } ? ( . 3 ) = " rpb " \ } \ \ { \ } } \ ar [ d ] _ - { ( - ) ^ { } \ } \ } ? ( . 4 ) = " bpb " \ restore & { \ set } \ } " rpb " ; " lpb " * * @ { } ; ? ! { " bpb " ; " tpb " } = " cpb " * * @ { } ; ? * * @ { - } ; " tpb " ; " cpb " * * @ { } ; ? * * @ { - } } } \ ] ] in @ xmath99 , and as a natural 2 - category in @ xmath100 . from @ xcite . ( 1 . 1 ) we have [ example : gfam2fun ] @ xmath51 is a natural 2 - functor . in fact it follows from the definition of @ xcite that @ xmath51 has two global categories as well as athe properties of ` ` grothendieck fibration ' ' which we can define extend to any finitely complete 2 - category . all the inclusion ##s for comma objects are right adjoints . see @ xcite for more details on this aspect of 2 - category theory . we shall not use these properties too much in what follows . most important for us : [ lem : x - 1 - object ] @ xmath51 preserves eilenberg - type # . for the pair @ xmath101 on the category @ xmath16 , we shall write @ xmath102 for the category of @ xmath101 - algebras and morphisms # , and @ xmath103 for the identity functor . we shall denote a particular example of @ xmath102 by the name @ xmath104 , where @ xmath2 is the underlying object in @ xmath16 and @ xmath105 is the @ xmath101 - algebra ##s . from @ xcite the 2 - category @ xmath106 , whose image is @ xmath104 and @ xmath107 itself has a unique image exhibiting@ xmath102 is a kind of 2 - dimensional representation of the _ eilenberg - moore map _ . see @ xcite and @ xcite for more details on this general notion . the simple proof that for any monad @ xmath101 on a category @ xmath16 , the linear map @ xmath108 is an isomorphism comes down to the simple proof that for any @ xmath16 - category @ xmath109 , a @ xmath110 - algebra structure on @ xmath109 is the same thing as a @ xmath101 - algebra structure on the homs of @ xmath109 , and similarly for the morphisms . let us recall the definition of a monoidal category and category enriched category from @ xcite . for a category @ xmath16 , the free strict monoidal category @ xmath111 on @ xmath16 has a very simple description . an object of @ xmath111 is a finite set @ xmath112 of objects of @ xmath16 . a map is a sequence of objects of @ xmath16 there are no maps between sets of objects ofnatural properties . the multiplication @ xmath113 of the 2 - sphere @ xmath114 is the product of elements of x @ xmath33 . the multiplication @ xmath115 is given by concatenation . a _ the monoidal a _ is a derived category for the 2 - sphere @ xmath114 . here it consists of an derived category @ xmath16 , a functor @ xmath116 , and maps @ xmath117 for , @ xmath82 , @ xmath118 from @ xmath16 which are similar in their properties , and such that @ xmath119 ^ - { u \ ope \ limits _ i } \ ar [ d ] _ { sigma } \ } \ } ? ( . 3 ) = " domeq " \ } & { { _ u \ ope \ limits _ iz _ i } \ ar [ d ] ^ { \ } } \ } \ } ? ( . 4 ) = " codeq " \ } \ \ { \ ope \ limits _ iz _ i } \ } " domeq " ; " codeq " * * @ { } ;? * { = } } } } ; ( 8 , 0 ) * { \ xybox { \ xymatrix @ } = 0 . 5em { { \ ope \ limits _ i \ ope \ limits _ j \ ope \ limits _ kz _ { ijk } } \ ar [ d ] ^ - { { \ sigma } \ ope \ limits _ j } \ ar [ d ] _ { \ ope \ limits _ { \ } } \ } \ } ? = " domeq " \ } & { \ ope \ limits _ { ij } \ ope \ limits _ kz _ { ijk } } \ ar [ d ] ^ { \ sigma } \ } \ } ? = " codeq " \ } \ \ { \ ope \ limits _ j \ ope \ limits _ { jk } z _ { ijk } } \ ar [ d ] _ - { \ sigma } & { \ ope \ limits _ { ijk } z _ { ijk } } \ } " domeq " ; " codeq " * * @ { } ; ? * { = } } } } ; ( 8 , 0 ) * { \ limits##box { { \ xymatrix @ i = 1em { { \ ope \ limits _ i _ 1z _ i } \ ar [ dr ] _ { \ } } \ } \ sigma ? ( . 3 ) = " domeq " \ \ & { \ ope \ limits _ iz _ i } \ ar [ dr ] ^ { \ } \ } \ sigma ? ( . 4 ) = " codeq " \ { \ ar [ dr ] _ - { \ ope \ limits _ iu } \ \ & { \ ope \ limits _ iz _ i } } \ { " domeq " ; " codeq " * * @ { } ; ? * { = } } } } \ endxy \ ] ] in @ xmath16 . } in @ xcite we have some of the data @ xmath120 , a simple and efficient short - ##cut for @ xmath121 , and we refer to the endofunctor of @ xmath16 simply as describing the action of @ xmath122 on the data in @ xmath123 . the function @ xmath124 is : x _ multitensor _ t @ x##math16 , and @ xmath125 and @ xmath126 are referred to as the index and index of the multitensor respectively . in the multitensor @ xmath124 and @ xmath16 , x _ is contained in @ xmath122 _ elements of @ xmath127 , with maps @ xmath128 for objects @ xmath40 and maps @ xmath129 of elements of @ xmath2 , such that @ xmath130 { x _ 1x ( x _ 0 , x _ 1 ) } ^ - { u } : [ u ] { ( ( x _ 0 , x _ 1 ) } = " u " ^ { \ kappa } , : " u " _ { \ kappa } ) } } } [ d ( 0 ) ] [ d ( . 75 ) ] { \ xybox { \ xygraph { ! { } ; ( 0 . 0 , 1 ) : ( 0 , . 75 ) : : } { \ ope \ x _ 1 \ ope \ x _ jx ( x _ { ( ij ) - 1 } , x _ { ij } ) } ( : [ d] { \ ope \ limits _ { ij } ix ( x _ { ( ij ) - 1 } , x _ { ij } ) } ^ - { \ sigma } : [ d ] { bot ( x _ i , x _ { in _ m } ) } = " bot " ^ { \ kappa } , : [ d ] { \ ope \ limits _ ix ( x _ { ( i1 ) - 1 } , x _ { in _ m } ) } _ { \ ope \ limits _ { \ sigma } : " bot " _ - { \ kappa } ) } } } } \ ] ] } , where @ xmath131 , @ xmath132 and @ xmath133 . since the choice of @ xmath46 and @ xmath134 is the object of the category @ xmath135 , the object @ xmath136 of the category @ xmath137 is well - defined when @ xmath46 and @ xmath134 are not in @ xmath33 . with the same choice of @ xmath122 - functor ( or @ xcite ) , it has the same@ xmath138 of @ xmath122 - algebra and @ xmath122 - functors together with a natural functor @ xmath139 the terminology we use makes explicit the analogy between multitensors and monads , and is enriched in multitensors and algebras for this purpose . in particular the addition and subtitution for @ xmath122 provides @ xmath123 with the addition and multiplication of the category structure . moreover , the object of the category @ xmath140 is also an @ xmath123 - algebra , as is the hom of the @ xmath122 - category , and the natural maps of @ xmath122 are @ xmath123 - algebra morphisms ( see @ xcite ##s ( 1 . 7 ) ) . so in a sense , a multitensor @ xmath124 on the category @ xmath16 is aspiring to be a multitensor on the category @ xmath141 of @ xmath123 - algebras , but of course there is no other way to define @ xmath125 as enriched in @ xmath##141 , except for the special case when @ xmath123 is the natural number , that is , when @ xmath125 is an ordinary natural number . the multitensors with @ xmath125 the lift is a _ normal _ . [ def : > ] let @ xmath124 be a multitensor on the category @ xmath16 . a _ normal _ of @ xmath124 is a normal multitensor @ xmath142 of @ xmath141 , with an isomorphism @ xmath143 which deals with the normal functors into @ xmath144 . in @ xcite we explained how to define normalised @ xmath145 - operads and @ xmath0 - multitensors , which are multitensors on the category of @ xmath0 - directed graphs . in the following paper we shall explain how the @ xmath0 - multitensor has a canonical form . on an abstract level much of this paper is about the interplay between the theory of lifts on categories of enriched graphs , and the theory of multitensors . it is time to be more specific .which monads on @ xmath18 we are interested in . [ def : nmnd ] let @ xmath16 be a category . a map _ over @ xmath24 _ over @ xmath18 is a map over @ xmath146 of the sub - category @ xmath58 . that is , a monad @ xmath147 is @ xmath18 _ over @ xmath24 when the functor @ xmath101 does nt ##h the empty set , in other words @ xmath148 for all @ xmath127 and similarly for all , and when the components of @ xmath149 and @ xmath150 are pairs of objects . in this section we will show how such a monad , in the case where @ xmath16 has an initial object generated by @ xmath151 , is a multitensor on @ xmath16 denoted @ xmath152 . let us describe this multitensor below . first we note that @ xmath153 enables us to regard a pair of components @ xmath112 of @ xmath16 as objects @ xmath16- - . the data set is @ xmath154 , @ xmath155 for @ xmath156 , and all the other homs are mapped to @ xmath151 . now we have @ xmath157 and the unit is @ xmath158 . defining @ xmath159 we require these definitions . given objects @ xmath160 of @ xmath16 where @ xmath156 , and @ xmath161 defined by @ xmath162 the first # ##s of @ xmath18 : the object of is , and @ xmath163 , and the hom maps are zero . now given objects @ xmath118 of @ xmath16 where @ xmath164 and @ xmath132 , one has the unit @ xmath165 defined on and by @ xmath166 and @ xmath167 for @ xmath164 , and the hom map between @ xmath168 and @ xmath46 for @ xmath169 . with these definitions in mind we can now define the components of @ x##math159 . @ xmath170 ^ - { \ { \ \ { { \ tau } \ } _ { n , k } } & & { [ ( z _ { k } , . . . , z _ { kn _ k } ) ( 0 , n _ { \ bullet } ) } \ - [ rr ] ^ - { \ tau _ { 0 , n _ { \ tau } } } & & { \ tbar \ tau _ { ij } n _ { ij } } } . \ ] ] from here until the end of ( [ ssec : tbar ] ) we shall be satisfied with the proof of [ rr : tbar ] . @ xmath16 be a category with an example of @ xmath151 and @ xmath147 be a category with @ xmath24 and @ xmath18 . } @ xmath152 be given by ( [ rr : tbar ] ) - ( [ rr : mubar ] ) be a multitensor of @ xmath16 . in theory we could get a proof of this theorem simply by simply going through a simple proof of the theorem . then we shalltake a more abstract approach , and along the way find other objects that are of independent type . for most of the time we will ask a little more of @ xmath16 : that it has no coproducts , to support our more conceptual approach . in the end however , we will assume that finding the initial structure is impossible . we break down the construction of @ xmath152 into two steps . so in ( [ ssec : nmonad - > monmonad ] ) , we see how @ xmath171 generates a monoidal structure and @ xmath147 generates a monoidal structure @ xmath172 on @ xmath171 . then we see that this monoidal structure induces a new monoidal structure on @ xmath171 , which in turn can be transferred across an adjunction to generate @ xmath152 . these last two steps are very general : they are at the core of the construction of lax modules for an arbitrary n - monad ( which in our case is @ xmath114 ) . so in ( [ ssec : laxalg - const1 ] ) and ( [ ssec : laxalg -const2 ] ) we combine these two examples , and in ( [ ssec : tbar ] ) we give the proof of ( ( [ ec : tbar ] ) . then in ( [ ssec : ec - tree ] ) we impose a condition on @ xmath101 which means that @ xmath101 - graphs and @ xmath173 - graphs may be defined . from then until and after the proof of ( [ ssec : tbar ] ) we shall assume that @ xmath16 has no coproducts . we now describe the consequences of this . first , the functor @ xmath174 which sends an enriched object to a set of objects is defined . we shall denote by @ xmath26 the @ xmath16 - graph which represents @ xmath175 . it contains one object and a unique hom , @ xmath151 . the second consequence is that @ xmath171 inherits a unique monoidal structure and the unique monad @ xmath147 on @ xmath18 can then be regarded as a monoidal structure @ xmath172 . the proof for this starts with the definitionthat the representability of the underlying category functor @ xmath175 enables a natural reformulation of the category @ xmath171 into the category of endocospans of @ xmath26 , see below ( [ ssec : 2 - 3 ] ) . the consequence of this is that the cospans can be removed , by replacing @ xmath171 with the underlying monoidal category . the intersection of @ xmath151 and @ xmath16 allows one to compute coproducts under @ xmath18 . the coproduct @ xmath2 of the category @ xmath176 of @ xmath16 - 1 has object sets generated by the inner union of the object sets of the @ xmath177 , @ xmath178 when @ xmath107 and @ xmath179 are elements of @ xmath177 , and when the two homs are @ xmath151 . with these coproducts , one can also compute pushouts under @ xmath26 , that is the pushout @ xmath180 of the @ xmath181 ^ - {\ } \ { [ x ] _ - { x } & \ } \ ] ] . @ xmath18 ##0 is as follows . the object set of @ xmath180 is the inner union of the object sets of @ xmath2 and @ xmath182 modulo the intersection of @ xmath107 and @ xmath179 , and let us use @ xmath183 for this special case of @ xmath180 . the homs of @ xmath180 are taken from @ xmath2 and @ xmath182 in much the same way as for coproducts . that is if @ xmath29 and @ xmath30 are not both objects of @ xmath2 or both objects of @ xmath182 and they are not in @ xmath183 , then their hom @ xmath184 is taken from both @ xmath2 and @ xmath182 . the hom @ xmath185 is the coproduct @ xmath186 . and this hom is @ xmath151 . note that in the special case where thehoms @ xmath187 and @ xmath188 result in @ xmath151 , one only needs the initial ##ization of @ xmath16 to perform this pushout . for a pair @ xmath189 of doubly - linked @ xmath16 - modules , one has their _ _ _ @ xmath190 where @ xmath191 is the colimit of @ xmath192 _ - { b _ 1 } \ ar [ r ] ^ - { b _ 1 } & { . . . } & { \ ar [ r ] _ - { b _ { b - 1 } } \ ar [ r ] ^ - { b _ 1 } & { b _ n } } \ ] ] in @ xmath18 which can be done via the pushouts of @ xmath26 . this defines a monoidal structure for @ xmath171 whose tensor product we denote by @ xmath193 . for a functor @ xmath194 and @ xmath24 , one has a functor @ xmath195 whose induced structure is shown on the right in the previous display . when using @ xmath16and @ xmath196 as an abstract example , one writes for a pair of simply - connected @ xmath16 - cycles a map @ xmath197 as follows . and @ xmath198 for the case of the colimit cocones ( [ 1 : 1 ] ) . for the same map @ xmath199 , there is a unique map @ xmath200 such that @ xmath201 . given the # ##ness of these maps , they join together to form the unique pseudo - map @ xmath202 ^ - { * } \ ar [ d ] _ { mt _ { \ bullet } } \ save \ } ? = " dom " \ } & { \ ca gv _ { \ bullet } } \ ar [ d ] ^ { mt _ { \ bullet } } \ save \ } ? = " cod " \ } \ \ { { \ ca gw _ { \ bullet } } \ ar [ d ] _ - { * } & { \ ca gw _ { \ bullet } } \ save " dom " ; " cod " * * @ { } ? ( . } ) \ restore @ { = > } ^{ \ . } ? ( . . ) } } \ ] ] for a natural monoidal functor , and for @ xmath203 ^ - { s } & { \ ca gv } \ ar [ [ ] ^ - { s } & { \ ca gw } } \ ] ] over @ xmath24 one defines @ xmath204 for monoidal functors . then a natural module @ xmath205 over @ xmath24 is a monoidal natural tranformation @ xmath206 . in particular , given by @ xmath207 the 2 - cells whose objects are associated with two points , a 2 - cell @ xmath208 in @ xmath207 is a functor @ xmath194 over @ xmath24 , and a 2 - cell between these is a natural tranformation . for @ xmath24 , we define also a 2 - functor @ xmath209 over @ xmath210 to define : [ x : nmnd - > monmnd ] if @ xmath16 has two coproducts and @ xmath147 is a module over @ xmat##h24 = @ xmath18 , so @ xmath172 is a monoidal function on @ xmath171 , whose monoidal graph is given by pushout - graph of cospans . here we see that the functor @ xmath211 has a left adjoint @ xmath212 which we shall now denote . given @ xmath213 the set @ xmath16 - that of @ xmath214 , which we shall denote by @ xmath215 , then the set @ xmath216 and the empty set is @ xmath217 . as for the homs , @ xmath218 is also @ xmath82 itself , and all the other homs are @ xmath151 . so this is the set @ xmath219 ^ - { * } & { { \ ca gv _ { \ bullet } } \ ar [ r ] ^ - { * } & { \ ca gv _ { \ bullet } } \ ar [ r ] ^ - { * } & { \ ca gv } } \ ] ] where @ xmath220 is the most natural functor, which allows one to view the set of elements of @ xmath16 as an @ xmath16 - algebra , and in ( [ ssec : defnmonad ] ) . . , and in ( [ ssec : laxalg - const2 ] ) let @ xmath221 be a 2 - object in a 2 - algebra @ xmath222 . suppose that we are computing a set _ of _ @ xmath223 . let us use @ xmath224 for the full lax @ xmath225 - algebra , @ xmath226 for the lax @ xmath225 - algebra endomorphism of @ xmath16 , and @ xmath46 and @ xmath227 for the addition and multiplication operations . then one finds a lax @ xmath225 - algebra based on @ xmath16 with one - object identified as the composite @ xmath228 ^ - { e } & [ \ , [ d ] ^ - { e } & [ } \ ] ] and the 2 - object data contained in @ xmath229 { sv } = " tr " [ d ] { v }= " tr " [ f ] { e } = " bl " " br " : " tr " ^ - { \ eta } : " br " ^ { f } : " bl " ^ { f } " br " : " br " | { f } " br " : " bl " _ { f } " tr " [ d ( . 7 ) r ( . 1 ) ] : @ { = > } [ r ( . 2 ) ] ^ { \ eta } " tr " [ d ( . 2 ) r ( . 3 ) ] : @ { = > } [ r ( . 3 ) ] ^ { { } } } } [ r ( . ) ] { \ xybox { \ xygraph { { u ^ 2v } = " l1 " [ u ] { sv } = " l2 " [ u ] { sv } = " l3 " [ u ] { sv } = " sv " [ u ] { sv } = " r3 " [ u ] { sv } = " r2 " [ u ] { sv } = " r1 " " l1 " : " l2 " _ { sv } : " l3 " _ { sf} : " e " _ - { e } : " r3 " _ - { e } " l1 " : " r1 " ^ - { \ phi } : " r2 " ^ { e } : " r3 " ^ { e } " l2 " : " r2 " ^ - { e } : " e " _ { e } " l1 " [ d ( . 2 ) r ( . 2 ) ] : @ { = > } [ d ( . 2 ) ] ^ { \ phi } " l2 " [ d ( . 3 ) r ( . 2 ) ] : @ { = > } [ d ( . 2 ) ] ^ { \ phi } " w " [ d ( . 2 ) r ( . 3 ) ] : @ { = > } [ d ( . 3 ) ] ^ { { } } } } } \ ] ] the study of the abstract # ##s is an important tool that is useful to the programmer . now , we are writing a formal c - grammar @ xmath224 w with the expression @ xmath230 w " w " : @ < - 1 . 2ex > " w " _ - { w } : @ < - 1 . 2##ex > " v " _ - { { } " v " : @ { } " v " | - { \ perp } } \ ] ] with code @ xmath125 and counit @ xmath231 . we can also construct a code @ xmath225 - code based on @ xmath196 . the one - cell code is structured as the code @ xmath232 ^ - { r } & { sv } \ ar [ r ] ^ - { r } & { \ ar [ r ] ^ - { r } & { } \ ] ] and the two - cell code structure as @ xmath233 { r } = " v " [ r ] { sv } = " sl " [ . ( . 0 ) \ ] { r } = " d " [ r ] { e } = " bl " " l " [ r ] { e } = " l " " u " : " l " ^ - { \ ar } : " u " ^ - { r } : " l " ^ - { r } | { } = " l " : " bl " ^ - { r } " m " : " m " ^ - { r }: " r " _ { 1 } | { } = " onev " " m " : " m " ^ - { \ } } " b " : " bl " _ { 1 } | { } = " onew " " b " : @ { } " b " | ( . 1 ) * { = } " onew " : @ { } " onev " | ( . 1 ) { } = " d1 " | ( . 2 ) { } = " c1 " " d1 " : @ { = > } " c1 " ^ - { } } " onev " : @ { } " d " | ( . 1 ) { } = " d2 " | ( . 2 ) { } = " c2 " " d2 " : @ { = > } " c2 " ^ - { \ } } } } } [ [ ( 0 ) ] { \ xybox { \ xygraph { ! { } ; ( 0 , 1 ) : ( 0 , . 0 ) : : } { s ^ 2w } = " l1 " [ d ] { s ^ 2v } = " l2 " [ d ] { sv } = " l3 " [ d ] { : }= " l4 " [ u ] { sv } = " ml " [ u ] { sw } = " ml " [ u ] { sw } = " r4 " [ r ] { sw } = " r3 " [ u ] { sv } = " r2 " [ ul ] { sl } = " r1 " " l1 " : " l2 " _ { sl ^ 2l } : " l3 " _ { sl } : " l4 " _ { sl } : " ml " _ { sl } : " ml " _ { sl } : " r4 " _ { sl } " l1 " : " r1 " ^ - { \ mu } : " r2 " ^ { sl } : " r3 " ^ { sl } : " r4 " ^ { sl } " l3 " : " mr " ^ { sl } | { } = " onemv " " mr " : " r3 " ^ { sl } | { } = " onev " " l2 " : " r2 " ^ - { \ mu } " l1 " [ d ( 35 ) , ( . 35 ) ] : @ { = > } [ d ( . 35 ) ] ^ {\ } } " l3 " [ d ( . 7 ) r ( . 35 ) ] : @ { = > } [ d ( . 15 ) ] ^ { = } " r4 " [ d ( . 7 ) r ( . 35 ) ] { = } " l1 " [ d ( . 7 ) r ( . 35 ) ] { = } } } } } \ ] ] the reader will then see that the expressions @ xmath225 - # ##s for @ xmath196 differ from those of @ xmath16 and the expression abc of the plane . let us now write : ( [ ssec : nmonad - > monmonad ] ) - ( [ ssec : laxalg - const2 ] ) . given the product @ xmath147 over @ xmath18 and @ xmath24 such that @ xmath16 has two coproducts , we have the monoidal product @ xmath172 . @ xmath171 = : ( [ lax : nmnd - > monmnd ] ) . in other words @ xmath172 is the product of @ xmath234 . let ( [ssec : laxalg - const1 ] ) for @ xmath235 gives us a multitensor on @ xmath171 , and then add ( [ ssec : laxalg - const1 ] ) to this same multitensor and the cell @ xmath236 { w } = " w " " w " : @ < - 1 . 2ex > " w " _ - { \ varepsilon } : @ < - 1 . 2ex > " v " _ - { * } " w " : @ { } " v " | - { \ perp } } \ ] ] gives us a multitensor on @ xmath16 which we define on @ xmath152 . we shall then test this multitensor to show that it does not agree with that of the ( [ x : tbar ] ) . the cell used on @ xmath173 is the cell @ xmath219 ^ - { * } & { { \ ca gv _ { \ bullet } } \ ar [ r ] ^ - { * } & { \ ca gv _ { \ bullet } } \ ar [ r ] ^ - { *_ { \ bullet } } & { \ ca gv _ { \ bullet } } \ { [ 2 ] ^ - { \ varepsilon } & } } \ ] ] which agrees with equation ( [ 2 : tbar ] ) and it also also yields equation ( [ 3 : etabar ] ) for the substitution . as for the following , the @ xmath159 of our source code yields the following : @ xmath237 { dr } = " p12 " [ dr ] { m \ ca gv _ { \ bullet } } = " p22 " [ r ( d ) ] { m ^ m \ ca gv _ { \ bullet } } = " p21 " [ dr ] { m \ ca gv _ { \ bullet } } = " p31 " [ dr ] { m \ ca gv _ { \ bullet } } = " p41 " [ dr ] { dr } = " p51 " [ r ( 1 . 25 ) d ] { m \ ca gv _ { \ bullet } } = " p52 " [ r ( 1 . 25 ) d ] { \ ca gv _ { \ bullet } } = " p53 " [ d( 1 . 25 ) u ] { \ ca gv _ { \ bullet } } = " p54 " [ | ( 1 . 25 ) u ] { { } = " p55 " [ u ] { \ ca gv _ { \ bullet } } = " p42 " [ u ] { \ ca gv _ { \ bullet } } = " p32 " " p11 " : " p12 " ^ - { \ mu } | { } = " mv1 " " p21 " : " p22 " ^ - { \ mu } | { } = " mv2 " " p31 " : " p32 " ^ - { * } | { } = " mv3 " " p51 " : " p52 " _ - { * } : " p53 " _ - { * } : " p54 " _ - { mt _ { \ bullet } } : " p55 " _ - { \ varepsilon } " p11 " : " p21 " _ - { m ^ 2l } : " p31 " _ - { * * } : " p41 " _ - { mt _ { \ bullet } } : " p51 " _ - { { \ varepsilon} " p12 " : " p22 " ^ { * } : " p32 " ^ { * } : " p42 " ^ { t _ { \ iso } } : " p55 " ^ { \ varepsilon } " p41 " : @ / ^ { 2pc } / " p52 " ^ { 1 } | { } = " mh1 " " p32 " : @ / _ { { . 5pc } / " p53 " _ { t _ { \ iso } } | { } = " mh2 " " p42 " : @ / _ { . 5pc } / " p54 " _ { 1 } | { } = " mh3 " " mv1 " : @ { } " mv2 " | * { = } : @ { } " mv3 " | * { \ iso } " p51 " : @ { } " mh1 " | { } = " mid1 " : @ { } " mh2 " | { } = " mid2 " : @ { } " mh3 " | { } = " mid3 " : @ { } " p55 " | * { = } " mid1 " [ = ( . 0) ] : @ { = > } [ r ( . 3 ) ] ^ { 1 } " mid2 " [ r ( . 3 ) ] : @ { = > } [ r ( . 3 ) ] ^ { \ 1 } " mid3 " [ r ( . 3 ) ] : @ { = > } [ r ( . 3 ) ] ^ { \ sum _ { \ 1 } } } \ ] ] which we shall now define ##age . the counit @ xmath231 of the graph @ xmath238 is defined as follows . for a given n - vertex @ xmath239 - graph @ xmath42 , the corresponding counit of @ xmath240 is defined by such that the hom distance between @ xmath26 and @ xmath33 is @ xmath241 . } @ xmath242 = @ xmath243 { { \ { ( 0 , t ( x _ { n } , . . . , x _ { 1n _ 1 } ) , n _ 1 ) * . . . * ( 0 , t ( x _ { k1 } , . . . , x _ { kn _ 1} ) , x _ ( ) \ } } = " tr " [ d ( . 6 ) . ] { n ^ t ( x _ { 11 } , . . . . . . , x _ { kn _ k } ) } = " tr " [ d ( . 6 ) ] { n ( x _ { 11 } , . . . . . . , x _ { kn _ k } ) } = " tr " " bl " ( : " br " ^ { { \ { t * . . . * } \ } } : " tr " _ - { { \ tau } : " tr " ^ { \ mu } , : " br " _ - { \ tau { \ mu } } ) " bl " : @ { } " tr " | * { = } } \ ] ] and thus @ xmath159 shows the structure of @ xmath242 and the hom of @ xmath26 and @ xmath244 . thus we can also show that the structure @ xmath245 is not @ xmath246 resulting from ( [ ssec : defnmonad ] ) . this is the proof of : ( [ c : def##ar ] ) for the case where @ xmath16 has no coproducts . the general ##ization is obtained by setting that are the joins of doubly - ordered @ xmath16 - graphs @ xmath42 note that @ xmath247 and @ xmath248 are both used in the construction of the multitensor and satisfy the axioms , and these conditions define the initial object of @ xmath16 . we shall now impose a condition on the - monad @ xmath101 which ensures that objects contained in @ xmath173 are the same category as @ xmath101 - graphs . let @ xmath249 and consider a map @ xmath250 of and of @ xmath2 such that @ xmath251 and @ xmath252 . consider the @ xmath16 - graphs @ xmath253 and we have a map @ xmath254 defined on and by @ xmath255 for @ xmath256 , and the relation between the hom of @ xmath168 and @ xmath46 is the identity for @ xmath156 . [def : path - like ] let @ xmath16 be a category with no initial category and @ xmath196 be a category with all possible coproducts . a functor @ xmath194 on @ xmath24 is _ path - like _ when for all @ xmath249 , the path @ xmath257 for all @ xmath40 and all @ xmath250 such that @ xmath251 and @ xmath252 , have a coproduct cocone in @ xmath196 . a category monad @ xmath147 on @ xmath258 is _ path - like _ when @ xmath101 is path - like in the sense originally defined . [ def : cat - like - path - like ] let @ xmath259 and @ xmath101 be the initial and endofunctor of @ xmath260 . for categories of @ xmath2 and @ xmath261 , the hom @ xmath262 is by definition the set of objects of @ xmath2 from @ xmath29 to @ xmath30. this algorithm determines a sequence @ xmath250 of objects of @ xmath2 such that @ xmath251 and @ xmath252 , by reading off the objects of @ xmath2 as they are placed on the corresponding path . conversely for a sequence @ xmath250 of objects of @ xmath2 such that @ xmath251 and @ xmath252 , @ xmath263 determines the sequence @ xmath264 with those objects of @ xmath2 from @ xmath29 to @ xmath30 whose corresponding path is @ xmath107 . thus @ xmath101 is path - like . [ example : pl - alg < - > cat ] let @ xmath16 be two coproducts and @ xmath147 be a path - like map of @ xmath18 over @ xmath24 . let @ xmath265 . let @ xmath2 be an @ xmath16 - graph . to give an edge of a graph @ xmath266 . to give maps @ xmath267 . by path - like these maps to .for each @ xmath40 and @ xmath250 such that @ xmath268 and @ xmath269 , we have @ xmath270 since @ xmath271 , that is @ xmath272 . when @ xmath273 , for a given @ xmath274 , @ xmath107 . then consider the map @ xmath275 . the naturality condition for @ xmath149 and @ xmath276 implies that @ xmath277 , and the definition of @ xmath278 implies that @ xmath279 . then to say that a given @ xmath266 satisfy the unit conditions of an @ xmath101 - algebra is to say that @ xmath29 satisfy the relation between objects and that the @ xmath280 relations also satisfy the unit conditions of an @ xmath173 - algebra . to say that @ xmath29 satisfy the second condition is to say that for each @ xmath274 , @ xmath281 ^ - { \ { \ } _ i \ } _ { |, } } } \ ar [ r ] _ { a _ { y , z } } & { tx ( y , z ) } \ ar [ d ] ^ { a _ { y , z } } \ \ { tx ( y , z ) } \ ar [ r ] _ - { a _ { y , z } } & { tx ( y , z ) } } \ ] ] ] . } @ xmath250 from @ xmath2 with @ xmath268 and @ xmath269 , and @ xmath282 from @ xmath283 with @ xmath284 and @ xmath285 , define the linear map @ xmath286 ^ - { t \ overline { x } _ { 0 , k } } & { t ^ 2x ^ * { ( 0 , k ) } \ ar [ r ] ^ - { t \ overline { x } _ { 0 , k } } & { t ^ 2x ( y , z ) } } \ ] ] and assume that the x - vector , and since the coproduct of coproducts is a coproduct , all the equations for @ x##math107 and @ xmath287 note that @ xmath268 and @ xmath269 form a coproduct cocone . precomposing ( [ d : assoc1 ] ) with ( [ d : copr ] ) yields the commutativity of @ xmath288 ^ - { \ overline { \ lambda } } \ ar [ d ] _ { \ tbar \ limits _ i } & { \ tbar \ limits _ { ij } } ( x _ { ij - 1 } , y _ { ij } ) } \ ar [ d ] ^ { a _ w } \ \ { \ tbar \ limits _ i ( x _ { y _ { i - 1 } } , y _ { i _ 1 } ) } \ ar [ d ] _ - { a _ w } & { { ( y , x ) } } \ ] ] and then apply the following formula if these expressions hold for both @ xmath107 and @ xmath287 , then one has the commutativity of ( [ d : assoc1 ] ) . this is the proof of the representation theory of @ x##math265 . let @ xmath289 and @ xmath290 be @ xmath101 - algebra and @ xmath291 be an @ xmath16 - algebra morphism . to say that @ xmath292 is a @ xmath101 - algebra , is a restriction on the set @ xmath293 for the @ xmath274 , and one uses x - sets in the same way to show that this is equivalent to saying that the @ xmath294 are the hom sets for the @ xmath173 - functor . the proof of section ( [ prop : pl - alg < - > f ] ) is fairly straightforward : exactly the same method was used in the first part of the proof of section ( 1 . 6 ) of @ xcite , although in that case the proof is far less complicated . the main problem is the generality of definition ( [ def : lift - lift ] ) which is needed for section ( [ def : lift - mult ] ) . the usual way of obtaining a monad from a multitensor , which is the topic of this section , corresponds to multitensors which correspond to [def : dist - mult ] let @ xmath16 be a category with no coproducts . then the multitensor @ xmath124 = _ _ _ when the functor @ xmath122 preserves coproducts in each variable . that is to say , for example @ xmath40 , the functor @ xmath295 , after giving @ xmath122 its effect on categories of category @ xmath0 , preserves coproducts in each of the @ xmath0 variables . the first step in associating a category to a distributive multitensor is to find the bicategory @ xmath296 which has the property that a on @ xmath296 are exactly the multitensors in the sense of definition ( [ def : dist - mult ] ) . there is also a useful reformulation of the definition of a on @ xmath18 on @ xmath24 : find a monad on another 2 - category @ xmath297 where @ xmath298 is the 2 - comonad ##or @ xmath9##9 , by the definition @ xmath299 of section ( [ ssec : k - graphs ] ) . our far - from - multitensor category is then obtained by means of a natural functor ( one of bicategories ) @ xmath300 which as a pseudo functor maps paths to monads . in general for a natural multitensor @ xmath122 , @ xmath301 is path - like and so @ xmath302 . the categories of @ xmath296 are categories with coproducts . a morphism @ xmath303 in @ xmath296 is a functor @ xmath304 which has coproducts in one category . a 2 - cell between @ xmath122 and @ xmath305 is called a natural transformation between these functors @ xmath306 . vertical composition of 2 - cells is defined for natural transformations . the horizontal composition of @ xmath307 and @ xmath308 , denoted @ xmath309 , is defined by : \ kan ##d @ xmath310 ^ - { \ n }\ ar [ d ] _ { x } \ } \ , ? = " dom " \ ar & { l } \ ar [ d ] ^ { e \ , f } \ , \ } ? = " cod " \ ar \ \ { mw } \ ar [ d ] _ - { l } & { d } \ , " dom " ; " cod " * * @ { } ? ( . 65 ) \ , @ { = > } ^ { x _ { e , f } } ? ( . 65 ) } } \ ] ] of @ xmath311 and @ xmath150 . applying this formula yields the composition @ xmath312 where @ xmath164 and @ xmath132 are the right hand side of this composition , and we denote by @ xmath313 ^ - { \ opc \ sum _ { ij } } & { \ opeof \ sum _ { ij } x _ { ij } } } \ ] ] and then by @ xmath314 , the resulting coproduct is . the structure of the composition is also functorial with respect to the composition of n - modules . [ note :dist ] @ xmath296 is a bicategory and a monad . @ xmath296 is also a horizontal multitensor . it is to identify the coherences and define the # ##s . the notation we have used here for the coproduct inclusions matches that used in proposition ( 2 ) of @ xcite . the proof of the first part of proposition ( 2 . 3 ) of @ xcite interpretted in our slightly more abstract definition , is the proof that @ xmath296 is a bicategory . the characterisation of horizontal multitensors and monads in @ xmath296 is derived from the definitions and our abstract definition of kan extensions in terms of kan extensions . what before @ xcite was called @ xmath315 is now the hom @ xmath316 . because of the name @ xmath299 and the inclusion of the comonad @ xmath298 , a normalised extension on @ xmath18 is the same thing as a monad on @ xmath16 or the kleisli sub - extension @ xmath297of the ( non - ) comonad @ xmath298 . the reason this is so important is that it shows how our operations over @ xmath24 all carry information at the level of homs . the importance of this reformulation is most easily demonstrated by showing that the definition of @ xmath51 , the identity on a 2 - functor induced by a 2 - fully - faithful 1 - functor , can be written as @ xmath317 ^ - { r } & { \ kl { \ ca ##v _ { \ bullet } } } \ ar [ i ] ^ - { j } & { \ set / \ i } } \ ] ] where @ xmath318 is the left adjoint product of the kleisli symbol for @ xmath298 . then applying @ xmath210 sends a monad on @ xmath297 over @ xmath16 to a map on @ xmath18 over @ xmath24 , and the definition of @ xmath51 and the 2 - fully - faithful of @ xmath210 shows that any such monad arises naturally in this way . this is the case on the. as a result @ xmath304 , @ xmath301 is defined by the left kan extension @ xmath319 ^ - { * } \ ar [ d ] _ { { \ varepsilon } \ } \ } ? = " dom " \ } & { \ { } _ { \ gamma } \ } \ ar [ d ] ^ { \ gamma { e } } \ } \ } ? = " cod " \ ar \ \ { * } \ ar [ d ] _ - { * } & { * } \ { " dom " ; " cod " * * @ { } ? ( . 35 ) \ } @ { = > } ^ { \ gamma _ { } ? ( . 35 ) } } \ ] ] of @ xmath320 and @ xmath321 . we shall first explain why this left kan extension , in general , give a more precise formula for @ xmath301 via : ( [ cor : \ - gamma ] ) , and then with this in mind it should be clear that @ xmath22 is a pseudo - functor . of course we could also define @ xmath301 viathe formula in corollary ( [ cor : set - set ] ) . we chose instead to use the above more general definition , because it would allow us to get a more detailed understanding of how @ xmath22 produces _ span - > _ sets from _ multitensors in ( [ ssec : distmult - > monad ] ) . thus , the reason why the left kan extension @ xmath322 produces _ coproducts in @ xmath196 is that @ xmath321 is a local right adjoint . a functor @ xmath323 is a _ local right adjoint _ when @ xmath324 is a local right adjoint . this is equivalent to saying that for instance @ xmath73 the natural functor @ xmath325 of coslices is a right adjoint . we shall explain in ref ( [ ref : spancomp - lra ] ) how and how pullback - sets of spans can be interpreted as a local right adjoint , and the statement that @ xmath321 is a local left adjoint is not the dual of this because@ xmath321 is defined by pushout - extension of cospans ##ors @ xmath18 . in span ( [ p : lla - ple ] ) we give a method for computing the left kan extension of a local left adjoint , and this will then be used to give our own more complete description of @ xmath22 with one - cell part . [ p : spancomp - lra ] let @ xmath1 be a category with finite products and let @ xmath29 be an object of @ xmath1 such that @ xmath326 also has finite products . then the one - cell part @ xmath327 of the monoidal structure of @ xmath328 given by span ##c is a local left adjoint . note that for all @ xmath40 the categories @ xmath329 , where @ xmath330 is the @ xmath0 - the inner product of @ xmath29 , have finite products , so the statement of the theorem makes sense and all the conditions we use in this section apply . in particular a functor consisting of a coproduct of sets is a local rightadjoint iff its composition with the coproduct a is a local right adjoint . then it follows to show that @ xmath0 - fold composition of spans @ xmath331 is a local right adjoint for all @ xmath40 . the case @ xmath332 may be exhibited as a composition @ xmath333 ^ - { a _ ! } & { a / a } \ { [ ! ] ^ - { \ ar _ ! } & { a / a { \ times } \ } } \ ] ] of local right adjoints and it is a local left adjoint . the case @ xmath273 may be exhibited as the composition . it follows to show the case @ xmath334 because with this in mind an induction rule will show the general case . the fold composition of spans as shown on the table @ xmath335 b ( [ dr ] { a } = " a1 " , [ dr ] { a } = " a2 " ) , [ dr ] ( [ dr ] { a } = " a3 " ) " d " : " b " _ { a } : " a1 " _{ - } " a " : " a2 " ^ { q } : " a3 " ^ { q } " a " : " a2 " ^ { q } " a " : " a2 " _ { - } " c " [ d ( . 1 ) l ( . 1 ) ] [ d ( . 1 ) l ( . 1 ) ] : @ { - } [ d ( . 1 ) l ( . 1 ) ] : @ { - } [ d ( . 1 ) l ( . 2 ) ] } } [ d ( . ) ] * \ xybox { \ xygraph { ! { } ; ( 1 . 0 , 1 ) : ( 1 , . 0 ) : : } } [ d ] { @ { \ pi } } } = " a2 " [ d ] { a ^ 2 } = " a4 " [ d ] { a ^ 3 } = " a3 " [ d ] { a ^ 4 } = " a2 " " - " ( : @ { . > } " a3 " _ { ( wp , xp = yq , zq ) } ( : @ { . > } " a2 " _ { ( \ pi _ 2 , \ pi _ 1 ) } , : "a4 " _ - { a { \ times } \ delta { \ times } a } ) , : " b " ^ - { ( p , q ) } : " a4 " ^ { ( w , x ) { \ times } ( w , x ) } " d " [ r ( . 1 ) ] [ r ( . 1 ) ] : @ { - } [ r ( . 2 ) ] : @ { - } [ r ( . 2 ) ] } } } \ ] ] can be represented by the single line ##s on the right in the previous section , and as the set of endospans of @ xmath29 ##6 , by the binary functor @ xmath336 ^ - { \ textnormal { a } _ { ( a ^ 1 , a ^ 2 ) } } & { a / ( a ^ 2 ) } \ ar [ r ] ^ - { ( a { \ times } \ delta { \ times } a ) ^ * } & { a / ( a ^ 2 ) } \ ar [ r ] ^ - { ( \ pi _ 1 , \ pi _ 2 ) _ ! } & { a / ( { \ pi } { } } \ ] ] where @ x##math337 denotes the ( right adjoint ) functor @ xmath338 which maps a function to the inner product ( and @ xmath339 denotes the map of @ xmath337 to the product @ xmath340 ) . the other functors of this inner composite are also called local right adjoints . in @ xcite @ xcite that local right adjoints can be defined in terms of local objects . the basic characterisation is as follows . a functor @ xmath323 is a local right adjoint iff for all @ xmath341 the elements of the component of @ xmath342 have local objects . a function @ xmath343 which is not in the component of @ xmath342 is said to be _ cogeneric _ , and by definition any @ xmath76 can be factored as @ xmath344 ^ - { fh } & { fc } \ { [ [ ] ^ - { fc } & { } \ ] ] where @ xmath345 is cogeneric . this function is unique up to an isomorphism and is called the_ cogeneric factor _ of @ xmath76 . [ lem : lla - ple ] let @ xmath323 be the right left adjoint . suppose that @ xmath1 is a component @ xmath346 of two components , each of which has an initial object , and that @ xmath109 is sufficiently large . for any functor @ xmath347 where @ xmath348 has coproducts , the left kan extension @ xmath349 of @ xmath23 and @ xmath292 exists and is defined by the formula @ xmath350 where @ xmath351 is the initial object of the component @ xmath352 , and @ xmath353 ^ - { fh _ f } & { fa _ f } \ , [ [ ] ^ - { g _ f } & { } \ ] ] is the _ cogeneric factorisation of @ xmath354 . using the above algorithm for computing left kan extensions and colimits , it follows to replace the above formula with the colimit of @ xmath355 ^ - { a } & a\ ar [ r ] ^ - { { } & { } \ ] ] where @ xmath356 is the obvious value . this is since the components of @ xmath342 are indexed by : @ xmath357 , where @ xmath352 and @ xmath354 , and the component of @ xmath342 corresponding to @ xmath357 is an element indexed by @ xmath358 , which is mapped by @ xmath356 to @ xmath359 . in the case of @ xmath193 , the first elements of the components of @ xmath360 are of the length @ xmath361 and the result @ xmath362 is a map @ xmath363 which corresponds to a sequence of elements of @ xmath2 of length @ xmath145 starting at @ xmath29 and ending at @ xmath30 . the reader will then see that @ xmath364 & { x ^ * { } \ ar [ r ] ^ - { \ overline { x } } & { y } } \ ] ] is a cogeneric sequence of the elements ofto @ xmath250 . so we have given a simple proof of @ xmath365 and @ xmath276 which is contained in ( [ ssec : tree - structure ] ) , as well as given the proof of [ cor : explicit - gamma ] for @ xmath16 and @ xmath196 with coproducts and @ xmath304 , the first is kan ##a of @ xmath301 , and we have the sequence @ xmath366 we shall identify @ xmath22 with the sequence @ xmath367 , which corresponds to identifying @ xmath368 with the composite @ xmath369 and the sequence @ xmath299 . similarly for @ xmath127 and @ xmath261 , we have for each @ xmath40 and for each sequence @ xmath250 such that @ xmath251 and @ xmath252 a coproduct and @ xmath370 is in ( [ cor : explicit - gamma ] ) . the first of the two binary operations for @ xmath22 can be defined on in . fromthe intersection of the maps @ xmath371 and @ xmath296 , we have that for @ xmath261 the coproduct of @ xmath372 is an inclusion . thus we have an inclusion @ xmath373 . for all @ xmath374 and @ xmath304 , @ xmath375 and @ xmath261 , we define the hom map of @ xmath376 for @ xmath377 , with the first element such that for all @ xmath378 where @ xmath164 and @ xmath132 , @ xmath379 and @ xmath380 , the map @ xmath381 { ( \ opeof \ x _ { ij } ) x ( x _ { ij - 1 } , y _ { ij } ) } = " r " [ r ] [ x ( . 0 ) ] { \ gamma ( \ { \ gamma } f ) } ( a , b ) } = " c " , [ c ] { \ ope \ limits _ { \ gamma ( f ) } ( ._ { i - j } , ( _ i ) } = " d " [ f ] { \ gamma ( e ) \ gamma ( f ) , ( a , b ) } = " d " ) " a " : " b " ^ - { \ ope \ limits _ 1 \ opc \ limits _ 1 } : " a " ^ - { c _ { x _ { i \ j } } } : " b " ^ - { \ limits _ 1 } " c " : " c " _ - { \ opc \ limits _ { ij } } : " d " _ - { c _ { x _ { ij } } } } \ ] ] . @ xmath196 } , where @ xmath382 and @ xmath383 for @ xmath384 . we have changed the notation so as to come up with the definition of @ xcite ##r ( f ) , and the definition of the first part of section ( 1 . 1 ) of _ loc . _ interpretted in the following form : [ 1 : 1 - psfunctor ] the parameters @ xmath385 used to turn @ xmath22 into a 3 -functor . given a category @ xmath101 on @ xmath18 over @ xmath24 , and a set @ xmath82 , one obtains by taking a monad @ xmath386 over the set @ xmath387 of @ xmath16 - - with fixed objects set @ xmath82 . let us write @ xmath388 for the functor corresponding to @ xmath22 in @ xcite . then for a given distributive multitensor @ xmath122 , our categories @ xmath22 and @ xmath388 are given by the formula @ xmath389 where the @ xmath33 on the right hand side of this formula indicates a singleton . in other words we have been given the ` ` fixed - objects theory ' ' of the theory described in @ xcite section ( 2 ) . having already established the way to convert the multitensors on @ xmath16 to categories on @ xmath18 over @ xmath24 , we shall now introduce the two categories to the theory . this means two things : seeing that the two categoriesexamples from which multitensors are path - like , and show the connection of @ xmath22 and the definition of class ( [ sec : path - > mult ] ) of multitensors from it . [ sec : non - path - like ] if @ xmath16 and @ xmath196 have coproducts and @ xmath304 have coproducts for the former . then @ xmath390 is path - like . the fact that @ xmath194 is path - like can be stated only non - explicitly . @ xmath391 { l } = " tr " [ l ] { \ ca gv _ { \ } } } = " l " [ l ] { { \ ca gv _ { \ } } } = " l " [ l ] { } = " bl " [ l ] { l } = " br " " l " ( : " l " _ { l } : " l " ^ - { * } , : " tr " : " l " ^ { ( l , r , w ) } : " l " ^ { * } ) " l " [ d (. 5 ) r ( . 35 ) ] : @ { = > } [ r ( . 35 ) ] ^ { \ lambda } } } } [ r ( 5 ) r ( . 35 ) ] * { \ xybox { \ xygraph { ! { } ; ( . . 0 , 1 ) : ( 1 , . 0 ) : : } { * / ( a , x , b ) } = " r " [ r ] { 1 } = " tr " [ r ] { \ ca gv _ { \ lambda } } = " mr " [ r ] { { \ ca gv _ { \ lambda } } = " mr " [ r ] { 1 } = " bl " [ r ] { 1 } = " l " " l " ( : " l " _ { e } ( : " bl " _ { - \ varepsilon } : " l " _ - { e } , : " l " ^ - { * } ) , : " tr " : " l " ^ { ( a , x , b ) } : " l " ^ { \ - { * } } ) " l " [ r ( . 3 ) d ( . 4 ) ] : @{ = > } [ r ( . 3 ) ] ^ { \ } } " ml " [ r ( . 5 ) r ( . 3 ) ] : @ { = > } [ r ( . 3 ) ] ^ { \ { _ { } } } } } \ ] ] . @ xmath392 for 2 - cell variants of the comma sequence , @ xmath101 is code - safe iff the 2 - cell on the left has @ xmath393 as a colimit . to see this recall from ( [ ssec : 1 ] ) that the set of elements of @ xmath394 can be viewed as the set of sequences of elements of @ xmath6 starting at @ xmath29 and ending at @ xmath30 , that each of these elements is a terminal element , and that @ xmath395 is terminal to the element corresponding to the sequence @ xmath250 the result for a sequence @ xmath122 is shown on the right of the above display , and by convention this particular 2 - cell is a colimit . thus it suffices to show that the result of the 2 - cell @ xmath322 is @ xmat##h396 is valid for the sequences @ xmath250 from @ xmath6 . the case of @ xmath322 is in sequence @ xmath397 with the coproduct { @ xmath398 ^ - { z _ i } & & { \ coprod \ limits _ { ( z _ i , . . . , z _ i ) } \ ope \ limits _ { ^ ( z _ { - - 1 } , z _ i ) } } \ ] ] corresponding to the sequence @ xmath399 where @ xmath400 . for the case of @ xmath401 , @ xmath402 , and for summands corresponding to some @ xmath183 starting from @ xmath287 , we can set @ xmath403 for some @ xmath46 . given the distributivity of @ xmath122 those summands will be @ xmath151 , and @ xmath404 will be 0 . for a simple multitensor @ xmath124 such that we can set @ xmath22 to @and add @ xmath405 to the list . one has @ xmath406 where the @ xmath407 is the sum of elements of @ xmath154 and @ xmath408 and @ xmath409 . unless the element @ xmath410 is in an higher - order list @ xmath411 of the elements of @ xmath154 , at least one of the homs @ xmath412 must be @ xmath151 making that summand @ xmath151 by the distributivity of @ xmath122 . suppose the coproduct of @ xmath413 is invertible . then using the above definition of the multitensor @ xmath414 one can verify that this definition is compatible with the addition and substitutions , and thus we have [ le : gamma - 1 ] if @ xmath124 is a regular multitensor in the sequence @ xmath16 with coproducts , then one has the isomorphism @ xmath415 of multitensors . then with probability ( [ le : gamma- > - tree ] ) and ( ( [ cat : pl - alg < - > tree ] ) this is [ cor : pl - alg - ecat ] if @ xmath124 is a directed multitensor in the construction @ xmath16 with coproducts , then one has @ xmath302 commuting with the other functors into @ xmath18 . we then have the case in which @ xmath22 and @ xmath405 are adjoint . now let us note that the ( [ cat : tbar ] ) in the construction @ xmath405 - in ( [ ssec : defnmonad ] ) can be interpreted as the functors @ xmath416 for both @ xmath417 and @ xmath99 . we have changed # ##s , moving into @ xmath18 ( resp . @ xmath258 ) the category of @ xmath16 - directed graph , with a forgetful functor into @ xmath24 . in ( [ ssec : defnmonad ] ) we have only the categories @ xmath418 andwhen @ xmath419 is part of a category , the notation ( [ def : tbar ] ) also makes sense in this more general context . in order to do this with @ xmath22 we have [ def : ndist ] let @ xmath16 and @ xmath196 be coproducts . the functor @ xmath420 over @ xmath24 is _ _ _ when @ xmath421 has coproducts in one category . we denote by @ xmath422 the first subcategory of @ xmath423 consisting of the two functors from @ xmath18 to @ xmath258 . [ def : pl - adjoint - 1 ] let @ xmath16 and @ xmath196 be categories with coproducts . then we have : example @ xmath424 { \ ndist ( v , w ) } = " t " " d " : @ < 1ex > " t " ^ - { \ int _ { v , w } } | { } = " d " : @ < 1ex >" a " ^ - { \ overline { ( - ) } _ { v , w } } | { } = " b " " d " : @ { } " c " | - { \ perp } } \ ] ] whose inverse is 0 . a map @ xmath420 exists in the domain of @ xmath425 iff it is path - mapped . by definition ( [ x : path - maps ] ) , @ xmath22 does not give a distributive functor , but @ xmath425 is path - defined and one has an analogue of @ xmath426 with the identity . for @ xmath127 and @ xmath261 one has @ xmath427 induced by the hom - maps of @ xmath263 , and @ xmath428 natural for @ xmath101 , and then applying @ xcite ##r ( 1 . 0 ) to prove the identity it follows to show that @ xmath429 is induced by @ xmath405 . to this , add that when @ xmath430 for @ xmat##h431 , the above summands are non - initial iff the set @ xmath432 contains the sequence @ xmath433 , by the distributivity of @ xmath101 . the characterisation of x - strings above follows immediately , since this operation on a set @ xmath101 is by definition the same as the invertibility of @ xmath434 . an important consequence of proposition ( [ prop : pl - adjoint - basic ] ) and proposition ( [ pr : gammae - basic ] ) ( [ geb1 ] ) below is the existence theorem . a formal proof is also very difficult , and turns out as an error . [ cor : pl - > copr - pres ] let @ xmath16 and @ xmath196 be categories with coproducts . if @ xmath420 and @ xmath24 is real and set - valued , then it has coproducts . [ [ ssec : pl - reexpress ] ] let us now regard @ xmath22 as a pseudo - functor @ xmath435 that is to say , we take for grantedthe inclusion of @ xmath297 in @ xmath58 . in this section we shall give a short description of the key properties that @ xmath22 has . the notation we are using gives an extended inductive description of the category @ xmath436 for all @ xmath0 - categories , provides details of some of their key properties , and gives a short description of the central idea of @ xcite , the distinction between @ xmath0 - multitensors and @ xmath145 - operads . let @ xmath392 be a regular cardinal . an object @ xmath346 in a category @ xmath16 is _ large _ when the representable functor @ xmath437 preserves coproducts , and @ xmath346 is _ @ xmath392 - connected _ when @ xmath437 preserves @ xmath392 - filtered colimits . the category @ xmath346 is said to be _ small _ when it preserves @ xmath392 - connected for some regular cardinal @ xmath392 . a category @ xmath16 is _ small _ when .for coproducts and for the categories @ xmath438 of objects of @ xmath16 , the functor @ xmath439 is an equivalence of categories . a more general definition is that @ xmath16 is strict iff it has coproducts , then has coproduct coprojections and given a set of commutative rings @ xmath440 ^ - { c _ i } \ ar [ r ] _ { f _ i } & \ \ ar [ r ] ^ { r } \ \ { c _ i } \ ar [ r ] _ - { c _ i } & { } \ ] ] where @ xmath441 such that the @ xmath442 form a coproduct cocone , the @ xmath443 form a coproduct cocone iff these categories are all pullbacks . it follows that coproducts are strict and the equivalence condition of @ xmath16 is strict . a sufficient condition for extensivity is given by [ lem : 1 - ext ] if a category @ xmath16 has all coproducts and a strict .then , and every @ xmath444 is a coproduct of connected objects , so @ xmath16 is extensive . the proof is left as an easy one . note this definition is not exact : there are many other categories whose objects map from ##h into coproducts of connected objects , for example , take the topos of sheaves on a space which is not locally connected . a category is _ lextensive _ when it is complete and has no limits . there are many examples of lextensive categories : grothendieck category , the category of algebras of a higher operad and the category of vector spaces and their dual are _ lextensive . replacing the left object of the lextensive category @ xmath16 by @ xmath33 , the representable @ xmath445 has a left and left adjoint @ xmath446 which maps the set @ xmath82 to the copower @ xmath447 . this functor allows one to make coproduct decompositions of objects of @ xmath16 , _ _ to @ xmath16 _ because to give the map @ xmath448 in @xmath16 is the same thing , making an @ xmath34 - indexed coproduct out of @ xmath2 . the lextensive categories in which every object fits into a set of connected objects are defined by the following well - known conditions . [ prop : lext - transform - charn ] for a lextensive category @ xmath16 the following conditions are equivalent : 1 . every @ xmath444 can be expressed as a coproduct of connected objects . [ copcon ] 2 . the functor @ xmath449 has no left adjoint . [ pi0 ] the most common instance of this occurs when @ xmath16 is a grothendieck topos . the toposes @ xmath16 satisfying the equivalent conditions of proposition ( [ prop : lext - decompose - charn ] ) are said to be _ locally connected _ . this definition is useful since for a topological category @ xmath2 , one says that @ xmath2 is locally connected to a space iff the underlying topos of objects is locally connected in this space . the category @ xmath450 of objects of @ xmat##h16 has a _ strong generator _ when for all maps @ xmath48 , if @ xmath451 is bijective for maps @ xmath452 then @ xmath76 is an object . a locally small category @ xmath16 is _ accessible @ xmath392 - accessible _ when it is cocomplete and has a strong generator consisting of all maps . # recall that a functor is _ accessible _ when it preserves @ xmath392 - filtered colimits for each covering map @ xmath392 . the theory of locally small categories is one of the weak points of classical category theory , and this notion admits many different characterisations @ xcite @ xcite @ xcite . for instance locally small categories are exactly those categories which preserve the @ xmath24 - filtered models for a given sketch . grothendieck toposes are locally small because each covering map in the grothendieck module of a category @ xmath453 gives rise to a cone in @ xmath454 , and a sheaf is called a functor @ xmath455 which maps these cones to limit points in @ x##math24 . that is to say a grothendieck model can be viewed as the models of a limit sketch which one obtains in an equivalent way from the site which contains it . just as locally presentable categories are grothendieck models , the following notion generalises locally connected grothendieck toposes . [ def : lcc ] a locally small category @ xmath16 is _ _ c - _ _ when it is cocomplete and has a strong generator consisting of small connected objects . just as locally small categories have many strong generators we have the same result for locally c - small categories . the proof is obtained by using the above definition of @ xcite in the case of the doctrine for @ xmath392 - small connected objects , which is ` ` ' ' ' ( = @ xcite ) , and where ( [ prop : lext - f - charn ] ) . [ thm : f - gabulm ] for a locally small category @ xmath16 the following results are obtained . 1 . @ xmath16 is locally c - small . [ lc1 ] 2 . @ xmath16 is cocompleteand is a small dense subcategory consisting of small connected objects . [ lc2 ] 3 . @ xmath16 is a dense subcategory of a presheaf category for which the category is compact , coproduct preserving and has a left adjoint . [ lc4 ] 4 . @ xmath16 is the category of models for a limit category whose distingished objects are connected . [ lc5 ] 5 . @ xmath16 is locally connected and every model of @ xmath16 is a coproduct of connected objects . [ lc6 ] 6 . @ xmath16 is locally presentable , extensive and the functor @ xmath456 has a left adjoint . [ lc7 ] [ ex : lc - groth - type ] by theorem ( [ ex : lc - gabulm ] ) ( [ lc7 ] ) a grothendieck category is locally connected in the usual sense iff the underlying category is locally c - connected . just as with locally presentable categories , locally c - connected categories are closed under certain basic category constructions . for instance from theorem ( [ ex : conn - ga##bulm ] ) ( [ lc6 ] ) , one knows immediately that the objects of a locally c - presentable category are locally c - presentable from the above definition for locally normal categories . an instance of this construction is the following result . [ n : n - 1 ] if @ xmath16 is locally c - present and @ xmath101 is an accessible coproduct preserving properties of @ xmath16 , then @ xmath102 is locally c - present . if we assume that colimits in @ xmath102 can be computed independently from colimits in @ xmath16 and the accessibility of @ xmath101 ( see for example @ xcite for a proof of this ) . from this we have a large cardinal @ xmath392 such that @ xmath101 contains @ xmath392 - filtered colimits and @ xmath16 is also @ xmath392 - filtered . define @ xmath457 to be the smallest subcategory of @ xmath16 consisting of the @ xmath392 - filtered and filtered objects , @ xmath458is a monad with coordinates in the notation of @ xcite . it has the canonical form @ xmath459 ^ - { u ^ v ( 0 , 1 ) } \ ar [ d ] _ { u } \ } \ } ? = " b " \ } & { \ psh { \ theta } _ t } \ ar [ d ] ^ { \ theta _ 0 } \ save \ } ? = " c " \ } \ \ } \ ar [ d ] _ - { v ( i _ 0 , 1 ) } & { \ psh { \ theta } _ t } \ { " b " ; " c " * * @ { } ; ? * { \ iso } } \ ] ] in the notation of @ xcite . thus @ xmath460 is accessible since @ xmath461 has colimits , and @ xmath101 and @ xmath462 are accessible . by the fundamental theorem of @ xcite @ xmath460 is not only accessible , it has a left adjoint since @ xmath102 is cocomplete , by : moving @ xmath46 along the yoneda line , andso we have defined @ xmath102 , according to definition ( [ ex : lc - gabulm ] ) ( [ lc4 ] ) . [ ex : lc - noperad - c ] . @ xmath0 - operad for @ xmath463 in the sense of @ xcite , is a finitary coproduct with properties in the category @ xmath8 of @ xmath0 - globular sets , and its objects are called the elements of the set . so the category of objects of the @ xmath0 - operad is also non - finite by definition ( [ ex : acc - c ] ) . at the highest level , to define @ xmath22 is to apply @ xmath51 , and we shall therefore preserve infinitely many of the object properties that @ xmath51 preserves . for @ xmath16 with the equivalent definition @ xmath151 , we saw in the ( [ ssec : nmonad - > monmonad ] ) how to construct coproducts in @ xmath18 ##1 . from this first definition , it is clear that the two .of the @ xmath16 - graph @ xmath2 can be described as follows . the @ xmath29 and @ xmath30 of @ xmath2 are in the same connected component iff there exists a sequence @ xmath129 of components of @ xmath2 such that for @ xmath156 the hom @ xmath464 is non - initial . moreover @ xmath2 is clearly the coproduct of all connected components , coproducts are strict and the terminal object of @ xmath18 , whose @ xmath24 of objects is complete , is strict . then by setting ( [ prop : g - ext ] ) we have [ prop : gv - ext ] if @ xmath16 has no initial object then @ xmath18 is complete and every component of @ xmath18 is a coproduct of connected objects . for finite limits in @ xmath16 it is straight forward to find finite limits in @ xmath18 . . the complete @ xmath16 - graph has one limit and its only hom is the terminal object of @ xmath16 . .from @ xmath465 and @ xmath466 to @ xmath18 their product @ xmath180 can be obtained as follows . objects are in @ xmath467 where @ xmath29 is an object of @ xmath1 and @ xmath231 is an object of @ xmath346 such that @ xmath468 . the hom @ xmath469 is obtained as the pullback of @ xmath470 ^ - { f } & { f ( fa _ 1 , fa _ 2 ) } & { f ( fa _ 1 , c _ 2 ) } \ { [ f ] _ - { f } } \ ] ] to @ xmath16 . then one has [ prop : gv - lext ] if @ xmath16 has no support , so does @ xmath18 . if in fact @ xmath16 is an connected object , then @ xmath18 is lextensive and every object of @ xmath16 is a coproduct of connected objects . then for cocompleteness one has the following results due to betti , carboni , rossi and others . [ [: gv - cocomp ] @ xcite if @ xmath16 is cocomplete then so are @ xmath18 and @ xmath174 - cocontinuous . we can turn to the ##ity - presentability . here we require a new function which generates a dense subcategory of @ xmath18 from that of @ xmath16 in a canonical way . [ # : gv - p ] let @ xmath450 be a dense subcategory of @ xmath16 and assume that @ xmath16 is an empty object . define the least dense subcategory @ xmath471 of @ xmath18 as follows : * @ xmath472 . * @ xmath473 . if @ xmath450 is dense then so is @ xmath471 . for a large cardinal @ xmath392 , if the objects of @ xmath450 are @ xmath392 - dense then so are those of @ xmath471 . given the @ xmath474 natural and @ xmath475 , we can assume that there is a unique @ xmat##h48 implies that @ xmath476 . the empty set of @ xmath76 is forced to contain @ xmath477 , and naturality with respect to the map @ xmath478 ^ - { 1 } & ( 2 ) & 0 \ { [ 1 ] _ - { 2 } } \ ] ] implies that the maps @ xmath479 belong to @ xmath477 together with the @ xmath480 natural in @ xmath452 for all @ xmath261 . by the adjointness @ xmath238 these functions are in turn in bijection with functions @ xmath481 natural in @ xmath452 for all @ xmath261 , and then by the inclusion of @ xmath450 one finds unique @ xmath482 and @ xmath16 such that @ xmath483 . the @ xmath477 and the @ xmath482 functions form the am and hom pairs of the natural object of @ xmath76 . since the colimit of @ xmath18 is given by @ xmath175 @ xcite , thewe also prove , that @ xmath26 is @ xmath392 - filtered for itself @ xmath392 . let @ xmath452 be @ xmath392 - presentable . this has natural extensions @ xmath484 exhibiting @ xmath485 is a coproduct of functors that preserve @ xmath392 - filtered colimits , and thus preserves itself @ xmath392 - filtered colimit ##s . [ cor : gv - lc ] if @ xmath16 is locally filtered then @ xmath18 is locally non - filtered . follows from theorem ( [ prop : g - gabulm ] ) ( [ lc2 ] ) , theorem ( [ prop : gv - dense ] ) and theorem ( [ prop : gv - cocomp ] ) . in @ xcite kelly and lack proved that if @ xmath16 is locally filtered then so is @ xmath18 with an argument almost identical to that given above . the only difference is that in their proof of theorem ( [ prop : gv - dense ] ) , their @ xmath471 follows fromours differs in that they use @ xmath486 where we use @ xmath26 , and they instead say that @ xmath471 is a strong category and that @ xmath450 is . we have given the following proof because the first form of lemma ( [ lim : gv - wreath ] ) is more familiar to us in section ( [ ssec : g - pres12 - lra ] ) . now we shall see that @ xmath51 ##0 proof . prove the theory of ordered sets . [ lim : g - wreath ] let @ xmath453 be a category and @ xmath487 be a lextensive category . consider the category @ xmath488 constructed from @ xmath453 as follows . there is an injective on objects - faithful functor @ xmath489 and @ xmath488 has an image object @ xmath26 , in the category of @ xmath490 . then for all @ xmath491 one has maps @ xmath492 and for all @ xmath493 one has the maps @ xmath494 and @ xmath49##5 . [ @ xmath496 $ ] is equivalent to the full subcategory of @ xmath497 $ ] one of those @ xmath2 such that @ xmath6 is the copower of @ xmath33 , the identity element of @ xmath487 . let us substitute @ xmath498 for the full subcategory of @ xmath497 $ ] used in the context of the definition . we shall use the functors @ xmath499 \ rightarrow \ ca e } & & { ( - ) ^ { - } : \ ca f \ rightarrow \ ca e [ \ op { \ - } , \ { - ] } \ op { - } \ ] ] which provide the following equivalence relation . [ @ xmath500 $ ] choose @ xmath501 and @ xmath502 in the same way this relation is functorial for @ xmath2 and @ xmath346 . first , @ xmath503 choose a set @ xmath504 such that @ xmath505 . such a set is defined uniquely up to equality . second , the function##ms of @ xmath506 via the command @ xmath507 _ { } \ save \ save ? ( . 1 ) = " lpb " \ restore \ ar [ r ] ^ - { } \ save \ save ? ( . 2 ) = " tpb " \ restore & { yc _ + } \ ar [ r ] ^ { ( x \ sigma , y \ sigma ) } \ save \ save ? ( . 3 ) = " rpb " \ save \ \ { - } \ ar [ r ] _ - { ( a , b ) } \ save \ save ? ( . 3 ) = " bpb " \ restore & { y0 { \ } } y0 } \ } " rpb " ; " lpb " * * @ { } ; ? ! { " bpb " ; " tpb " } = " cpb " * * @ { } ; ? * * @ { - } ; " tpb " ; " cpb " * * @ { } ; ? * * @ { - } } } \ ] ] } @ xmath487 for example @ xmath508 . note that since @ xmat##h487 is lextensive and , conversely , @ xmath509 is itself the coproduct of pairs of @ xmath33 and by the pairs @ xmath47 . the natural numbers @ xmath510 result from extensivity . [ cor : gv - lc ] 1 . if @ xmath16 is a presheaf category then so is @ xmath18 . [ g6 ] 2 . if @ xmath16 is a grothendieck topos then @ xmath18 is a locally compact grothendieck category . [ g7 ] corresponds to ( [ example : tree - 1 ] ) in the case where @ xmath453 is compact and @ xmath511 one obtains the categories @ xmath512 and thus ( [ g6 ] ) . since a grothendieck category is a locally exact localisation of a presheaf category , the abstract - functoriality of @ xmath51 agrees with ( [ g6 ] ) , thus ( [ cor : gv - lc ] ) and thus ( [ex : lc - groth - sets ] ) , so that to construct ( [ g7 ] ) it suffices to show that @ xmath51 contains the exact functors between categories with finite limits . this follows directly from the explicit description of finite limits in @ xmath18 and in the section of section ( [ ex : gv - lext ] ) . the construction @ xmath513 . the above construction is easily obtained by thinking about how , as pointed out in section ( [ ssec : explicit - graphs ] ) , applying @ xmath51 ##3 to the empty category does one produce the category of @ xmath0 - globular sets for @ xmath40 . the construction @ xmath513 is just the same construction by itself , which when applied successively to the empty category produces the construction @ xmath514 for @ xmath40 , presheaves , which is the definition @ xmath0 - convex sets . here we note that for the explicit description of coproducts , the terminal category and category of - sets , and the category of definition ( [ cor : explicit - graph ] ) , one uses [ prop :gammae - cart ] . @ xmath16 and @ xmath196 have coproducts and @ xmath304 is not . 1 . @ xmath301 has coproducts . [ geb1 ] 2 . if @ xmath122 preserves the terminal operations then so does @ xmath301 . if @ xmath122 preserves , then so does @ xmath301 . the precise conditions under which @ xmath22 preserves and reflects the natural operations are given by : ( [ prop : gamma - pre ] ) . here we have a proof which generalises proposition ( 7 . 4 ) of @ xcite , whose proof follows directly from the explicit description of pullbacks in @ xmath18 and in ( [ ssec : gamma - pres ] ) . [ prop : pb - hom ] states that @ xmath16 has generators . given a regular graph ( g ) @ xmath515 _ { d } \ in \ ar ? = " d " \ in \ ar [ r ] ^ - { g } & return \ ar [ r ] ^ { g } \z \ } ? = " d " \ } \ \ } \ ar [ r ] _ - { d } & z \ { " c " ; " d " * * @ { } ; ? * { \ textnormal { i } } } } } ; ( 1 , 2 ) * - ! \ { \ xybox { \ xymatrix { { x ( a , b ) } \ ar [ r ] _ { f _ { a , b } } \ } \ } ? = " d " \ } \ ar [ r ] ^ - { f _ { a , b } } & { x ( a , b ) } \ ar [ r ] ^ { f _ { a , b } } \ } \ } ? = " d " \ } \ \ { x ( a , b ) } \ ar [ r ] _ - { g _ { a , b } } & { x ( ha , b ) } \ { " c " ; " d " * * @ { } ; ? * { \ textnormal { i } } } } } * * @ { } ? * { } \ { { { } } \ ] ] in @ xmat##h18 given that @ xmath477 and @ xmath516 are equal , one has for all @ xmath517 the squares ( i ) as in the previous section . the square ( i ) is a product iff for all @ xmath517 , the square ( ii ) is a product of @ xmath16 . [ x : x - cart ] and @ xmath16 be coproducts , @ xmath196 be exclusive , and @ xmath122 and @ xmath307 be distributive . then @ xmath518 is extensive iff @ xmath519 is extensive . let @ xmath48 . in @ xmath18 , @ xmath261 and @ xmath432 have a pair of copies of @ xmath2 such that @ xmath251 and @ xmath252 . for each in @ xmath520 this holds . for ( [ x : x - hom ] ) , to show that the square ( x ) is the commutative ring @ xmath521 { \ .{ f } x ( a , b ) } = " i12 " [ dl ] { \ gamma { f } y ( fa , fb ) } = " i22 " [ dl ] { \ ope \ limits _ iy ( fx _ { } , fx _ i ) } = " i21 " " i11 " [ ul ] { \ gamma { f } y ( a , b ) } = " o11 " " i12 " [ dr ] { \ opf \ limits _ i ( fx _ { } , fx _ i ) } = " o12 " " i21 " [ dl ] { \ opf \ limits _ iy ( fx _ { } , fx _ i ) } = " o21 " " i22 " [ dr ] { \ gamma { f } y ( fa , fb ) } = " o22 " " i11 " : " i12 " ^ - { e _ { fx _ i } } : " i22 " ^ { \ gamma { f } ( d ) _ { a , b } } | { } = " l3 " " i11 " : " i21 " _ { \ ope \ limits _ if } | { } = " l2 ": " i22 " _ - { c _ { x _ i } } " o11 " : " o12 " ^ - { c _ { x _ i } } : " o22 " ^ { \ pi { i } ( i ) _ { a , b } } | { } = " l4 " " o11 " : " o21 " _ { \ opf \ phi _ if } | { } = " l1 " : " o22 " _ - { c _ { x _ i } } " i11 " : " o11 " ^ { \ phi } " i21 " : " o21 " ^ { \ phi } " i12 " : " o12 " ^ { \ gamma \ phi } " i22 " : " o22 " ^ { \ gamma \ phi } " l1 " : @ { } " l2 " | ( . 3 ) * { ( i ) } : @ { } " l3 " | * { ( ii ) } : @ { } " l4 " | ( . 4 ) * { ( iii ) } } \ ] ] is a square . the square ( x ) and the half square are equal since @ xmath196 is aand the @ xmath231 - 3 are coproduct extensive , and ( ii ) is a composite since @ xmath522 is extensive . then for all in @ xmath432 the product of ( i ) and ( iii ) is a composite . the identity holds since the @ xmath523 is coproduct cocones and @ xmath196 is extensive . now suppose that we have @ xmath524 and @ xmath16 for @ xmath156 . then given the maps @ xmath525 and @ xmath526 , and their naturality with respect to @ xmath522 we can define the naturality based on the map @ xmath527 ^ - { \ phi _ { y _ i } } \ ar [ r ] _ { \ ope \ limits _ if _ i } & { \ opf \ phi _ i } \ ar [ r ] ^ { \ opf \ limits _ if _ i } \ \ { \ ope \ limits _ iy _ i } \ ar [ r ] _ - { \ phi _ { y _ i } } & { \ opf\ gamma _ iy _ n } } } } ; ( 0 , n ) * - ! _ { \ xybox { \ xymatrix { { \ gamma ( e ) ( x _ 1 , . . . , x _ n ) ( 0 , n ) } \ ar [ r ] ^ - { \ gamma ( \ phi ) _ { 0 , n } } \ ar [ d ] _ { \ gamma ( e ) ( x _ 1 , . . . , x _ n ) _ { 0 , n } } & { \ gamma ( e ) ( x _ 1 , . . . , x _ 1 ) ( 0 , n ) } \ ar [ r ] _ { \ gamma ( e ) ( f _ 1 , . . . , f _ 1 ) _ { 0 , n } } \ \ { \ gamma ( e ) ( y _ 1 , . . . , y _ 1 ) ( 0 , n ) } \ ar [ d ] _ - { \ gamma ( \ phi ) _ { 0 , n } } & { \ gamma ( e ) ( y _ 1 , . . . , y _ 1 ) ( 0 , n ) } } } } * * @ { } ? * { } \[ { { } } \ ] ] with that to the right in the previous section , which is equivalent . for ( [ prop : gamma - hom ] ) and since @ xmath528 is finite , and since @ xmath522 is not extensive . @ xmath22 ##9 , with the bicategory structure of @ xmath296 is shown in [ prop : gamma - cart2 ] 1 . let @ xmath304 and @ xmath374 be finite and @ xmath196 be extensive . if @ xmath122 and @ xmath292 are pullbacks then so is @ xmath309 . [ cart2 - 1 ] 2 . let @ xmath529 and @ xmath530 be distributive and extensive respectively , and @ xmath196 be extensive . if @ xmath531 and @ xmath532 are finite then so is @ xmath533 . [ cart2 - 1 ] ( [ cart2 - 1 ] ) . note that for @ xmath156 we have two . @ xmat##h534 _ { f _ i } \ save \ save ? ( . 2 ) = " lpb " \ restore \ ar [ d ] ^ - { g _ i } \ save \ save ? ( . 3 ) = " tpb " \ restore & { f _ i } \ ar [ d ] ^ { g _ i } \ save \ save ? ( . 4 ) = " rpb " \ restore \ \ { f _ i } \ ar [ r ] _ - { g _ i } \ save \ save ? ( . 4 ) = " bpb " \ restore & { f _ i } \ save " rpb " ; " lpb " * * @ { } ; ? ! { " bpb " ; " tpb " } = " cpb " * * @ { } ; ? * * @ { - } ; " tpb " ; " cpb " * * @ { } ; ? * * @ { - } } } \ ] ] of @ xmath220 . } for each partition @ xmath535 of @ xmath0 we have a partition in @ xmath536 { ( \ opeof\ limits _ i ) k _ i } = " i12 " [ dr ] { ( \ opeof \ limits _ i ) k _ i } = " i22 " [ ul ] { ( \ opeof \ limits _ i ) k _ i } = " i21 " " i11 " [ ul ] { \ ope \ limits _ i \ opf \ limits _ ja _ { ij } } = " o11 " " i12 " [ dr ] { \ ope \ limits _ i \ opf \ limits _ jb _ { ij } } = " o12 " " i21 " [ ul ] { \ ope \ limits _ i \ opf \ limits _ jc _ { ij } } = " o21 " " i22 " [ dr ] { \ ope \ limits _ i \ opf \ limits _ jd _ { ij } } = " o22 " " i11 " : " i12 " ^ - { ( \ opeof \ limits _ i ) k _ i } : " i22 " ^ { ( \ opeof \ limits _ i ) k _ i } | { } = " l3 " " i11 " : " i21" _ { ( \ opeof \ limits _ i ) h _ i } | { } = " l2 " : " i22 " _ - { ( \ opeof \ limits _ i ) h _ i } " o11 " : " o12 " ^ - { ( \ ope \ limits _ i \ opf \ limits _ j ) h _ { ij } } : " o22 " ^ { ( \ ope \ limits _ i \ opf \ limits _ j ) h _ { ij } } | { } = " l4 " " o11 " : " o21 " _ { ( \ ope \ limits _ i \ opf \ limits _ j ) h _ { ij } } | { } = " l1 " : " o22 " _ - { ( \ ope \ limits _ i \ opf \ limits _ j ) h _ { ij } } " o11 " : " i11 " ^ { c _ { n _ i } } " o21 " : " i21 " ^ { c _ { n _ i } } " o12 " : " i12 " ^ { c _ { n _ i } } " o22 " : "i22 " ^ { } _ { c _ { } } " l1 " : @ { } " l2 " | ( . 35 ) * { ( ii ) } : @ { } " l3 " | * { ( ii ) } : @ { } " l4 " | ( . 35 ) * { ( ii ) } } \ ] ] for @ xmath196 for which the @ xmath231 - 3 are coproduct maps , the coproducts are given by the set of all such maps . for the inner products @ xmath164 and @ xmath132 . we can show that ( i ) is a composite . the products ( ii ) and ( iii ) are composite because @ xmath196 is composite . the unit square is a composite because @ xmath122 and @ xmath292 are composite . but the product of ( ii ) and ( iii ) is a composite , and so the result follows from the extensivity of @ xmath196 . ( [ cart2 - 1 ] ) . for @ xmath537 for @ xmath156 and @ xmath53##5 we have a new file @ xmath536 { ( \ opeof \ limits _ i ) f _ i } = " i12 " [ dr ] { ( \ opeofpr \ limits _ i ) f _ i } = " i22 " [ dr ] { ( \ opeofpr \ limits _ i ) f _ i } = " i21 " " i11 " [ ul ] { \ ope \ limits _ i \ opf \ limits _ ja _ { ij } } = " o11 " " i12 " [ dr ] { \ ope \ limits _ i \ opf \ limits _ jb _ { ij } } = " o12 " " i21 " [ dr ] { \ opepr \ limits _ i \ opfpr \ limits _ ja _ { ij } } = " o21 " " i22 " [ dr ] { \ opepr \ limits _ i \ opfpr \ limits _ jb _ { ij } } = " o22 " " i11 " : " i12 " ^ - { ( \ opeof \ limits _ i ) f _ i } : " i22 " ^ { \ begin {\ psi } \ phi } " i11 " : " i21 " _ { \ psi { \ psi } \ phi } : " i22 " _ - { ( \ opeofpr \ limits _ i ) f _ j } " o11 " : " o12 " ^ - { ( \ ope \ limits _ j \ opf \ limits _ j ) f _ { ij } } : " o22 " ^ { \ psi \ phi } " o11 " : " o21 " _ { \ psi \ phi } : " o22 " _ - { ( \ opepr \ limits _ j \ opfpr \ limits _ i ) f _ { ij } } " o11 " : " i11 " ^ { c _ { n _ i } } " o21 " : " i21 " ^ { c _ { n _ i } } " o12 " : " i12 " ^ { c _ { n _ i } } " o22 " : " i22 " ^ { c _ { n _ i } } } \ ] ] , @ xmath196 , to which we apply a similar formula as in ( [ cart2 - 3 ] ) to show that thethe category is closed . let @ xmath16 be lextensive . then by setting ( [ prop : x - cart2 ] ) the monoidal structure of @ xmath316 restricts to maps to @ xmath538 and linear transformations between them . the multitensor @ xmath124 in @ xmath16 is _ cartesian _ when @ xmath122 preserves , and @ xmath125 and @ xmath126 are closed . by taking over @ xmath122 one obtains a monoidal category @ xmath539 , whose maps are linear in @ xmath540 . to give @ xmath541 a monoid structure . to give @ xmath1 the category of a cartesian multitensor such that @ xmath542 is a cartesian multitensor morphism . note that @ xmath541 is called _ _ @ xmath122 - multitensor _ . the category of @ xmath122 - multitensors is denoted @ xmath543 . [ prop : gamma - sig - operads ] let us write _ @ x##math544 the multitensor is @ xmath24 given the finite set . by the lextensivity of @ xmath24 , @ xmath544 is an lra multitensor and is symmetric . the @ xmath544 - multitensor is the same thing for a non - symmetric operad on @ xmath24 . for given a cartesian multitensor map @ xmath545 , one obtains the corresponding category @ xmath546 of maps of the corresponding operad as @ xmath547 . one uses the cartesianness of the naturality squares corresponding to the maps @ xmath548 to the @ xmath122 from the @ xmath549 . then the multitensor operation of @ xmath122 corresponds to the addition and multiplication of all the @ xmath549 into an operad . given a symmetric normalised map @ xmath101 over @ xmath18 , one has a monoidal category @ xmath550 , whose objects are the transformations @ xmath551 over @ xmath24 . however , to say that a general category , whichis a inner product @ xmath551 , is in @ xmath24 , is to say that the elements of @ xmath542 are maps between objects and of @ xmath16 - 1 . the inner product of @ xmath550 is obtained via composition and the dual structure of @ xmath101 , and its monoid structure . @ xmath541 is a cartesian monad structure on @ xmath1 such that @ xmath542 is a strong equivalence morphism . such a @ xmath541 is called a _ @ xmath101 - operad over @ xmath24 _ . the category of @ xmath101 - operads over @ xmath24 is generated by @ xmath552 . by the end of this subsection @ xmath22 has a strong monoidal functor @ xmath553 and we shall now show that this functor is a monoidal equivalence . applying this equivalence to the monoids of the respective monoidal category yields the following strong equivalence : multitensors and operads over @ xmath24 . corollary ( [ cor : mu##lt - nop - equiv ] ) below . [ lem : lt - dpl ] let @ xmath16 be a lextensive object and @ xmath101 be a tensor product of @ xmath18 and @ xmath24 . let @ xmath551 be a subset of @ xmath24 . 1 . if @ xmath101 is convex then so is @ xmath1 . [ tdpl1 ] below . if @ xmath101 is cube - like then so is @ xmath1 . [ tdpl2 ] ( [ tdpl1 ] ) : given an @ xmath0 - tuple @ xmath554 of elements of @ xmath16 and the coproduct cocone @ xmath555 where @ xmath156 , we can show that the hom - objects @ xmath556 contain the coproduct cocone . for @ xmath557 we have a convex square @ xmath558 { if ( x _ 1 , . . . , x _ 2 , . . . , x _ n ) ( ) , .) } = " tr " [ c ] { t ( x _ 1 , . . . , x _ 2 , . . . , x _ n ) ( 0 , n ) } = " tr " [ d ] { t ( x _ 1 , . . . , x _ { ij } , . . . , x _ n ) ( 0 , n ) } = " bl " " br " ( : " tr " ^ - { t ( x _ 1 , . . . , c _ j , . . . , x _ n ) _ { 0 , n } } : " tr " ^ { \ alpha } , : " bl " _ { \ alpha } : " br " _ - { t ( x _ 1 , . . . , c _ j , . . . , x _ n ) _ { 0 , n } } ) " tr " [ { ( . 2 ) : ( . 2 ) ] { \ xybox { \ xygraph { ! { } ; ( ( . 2 , 3 ) : } ( : @ { - } [ l ] , : @ { - } [ l ] ) } } } } \ ] ] and thus the distributivity of@ xmath101 and in ( [ le : p - hom ] ) , the @ xmath559 forms a coproduct cocone , and so too does the @ xmath560 by the extensivity of @ xmath16 . + ( [ tdpl2 ] ) : given @ xmath127 , @ xmath261 and the sequence @ xmath129 of elements of @ xmath2 such that @ xmath251 and @ xmath252 , we have the sequences @ xmath561 and we can conclude that these maps , where the @ xmath562 runs through all elements from @ xmath29 to @ xmath30 , form a coproduct cocone . by the self - similarity of @ xmath101 we know that the sequences @ xmath257 form a coproduct cocone , so we can use the cartesianness of @ xmath542 , in ( [ le : p - hom ] ) and the extensivity of @ xmath16 to prove that in ( [ tdpl1 ] ) . [ .: coll - equiv ] let @ xmath16 be lextensive and @ xmath563 be a finite binary multitensor on @ xmath16 . then @ xmath564 is a monoidal on @ xmath565 . the functor @ xmath564 is the result of applying the functor @ xmath566 of proposition ( [ prop : pl - adjoint - char ] ) to @ xmath122 . given by proposition ( [ prop : pl - adjoint - char ] ) , theorem ( [ prop : transfer - cart ] ) and theorem ( [ prop : transfer - dpl ] ) , @ xmath564 is an algebra . [ cor : mult - nop - equiv ] let @ xmath16 be lextensive and @ xmath563 be a finite binary multitensor on @ xmath16 . then applying @ xmath564 gives @ xmath567 . self - adjoint sets , as defined for presheaf sets , are central to modern set theory . indeed the basic idea ofthese monads are the key to understanding the relationship between the operadic and homotopical solutions to the problem @ xcite . we will first consider the conditions under which @ xmath22 ##0 local left adjoints . here we require two conditions . [ lem : left - adjoint ] let @ xmath568 be a functor , @ xmath16 ##0 cocomplete , @ xmath220 be a locally dense left subcategory of @ xmath196 , and @ xmath569 be the local left adjoint to @ xmath318 , that is to say , one has an @ xmath570 natural for @ xmath571 and @ xmath444 . defining @ xmath572 as the left kan extension of @ xmath212 with the identity @ xmath573 , one has @ xmath574 . defining by @ xmath575 the corresponding natural functor for @ xmath576 and using that @ xmath577 , one obtains the canonical natural isomorphism as follows @ xmath578 ( 1 , \ textnor##mal { const } ( f ) ) } & { \ iso } & { \ lim _ { \ { \ } } x / 2 } & ( w ( \ textnormal { dom } ( f ) ) , x ) } \ \ & { \ iso } & { \ lim _ { w ( \ textnormal { dom } ( f ) , rx ) } & { \ iso } & { \ { w ( f , rx ) } \ { { x } \ ] ] for example @ xmath444 . [ example : lra - 1 ] let @ xmath208 be a functor , @ xmath16 be cocomplete and @ xmath196 be a - dense subcategory @ xmath220 . if @ xmath101 is a generic self adjoint iff then @ xmath579 with @ xmath580 is a generic object . if the case @ xmath16 admits a generic object denoted @ xmath33 , the generic objects in the category @ xmath581 are . for the following example ( @ xmath582 ) is generic by definition and @and to prove the theorem . the following generic representations give a partial left adjoint @ xmath583 to @ xmath584 where @ xmath34 is the complement of @ xmath220 . now @ xmath585 is a small dense subcategory of @ xmath586 , and so . the following lemma @ xmath212 leads to a partial left adjoint to @ xmath587 . in the case where @ xmath16 has @ xmath33 one defines the prime ##s in the representation @ xmath581 by the definition of @ xcite section ( 2 ) . the analogous result for presheaf representations , with the representables in the same small dense subcategory , was proved in @ xcite section ( 3 ) . [ prop : gammae - lra ] let @ xmath16 and @ xmath196 be both c - presentable and @ xmath304 be distributive . if @ xmath304 has a partial left adjoint , so does @ xmath301 . let @ xmath450 bethe very first subcategory of @ xmath196 consists of all the components . by theorem ( [ lem : lra - dense ] ) and lemma ( [ le : gv - dense ] ) it suffices to define the dual of : @ xmath588 where @ xmath225 is either @ xmath26 or @ xmath589 for example @ xmath452 . in the case where @ xmath225 = @ xmath26 the identity map is the composite @ xmath478 & { \ gamma { e } t } \ , [ 1 ] ^ - { \ gamma { e } 0 } & { \ gamma { e } t } } \ ] ] is , because @ xmath26 is the only @ xmath196 - composite with an object ( and @ xmath590 , is the identity map ) . in the case where @ xmath591 , to give @ xmath76 , to give the composite @ xmath592 and @ xmath16 , by corollary ( [ cor : r - gamma ] ) since @ xmath348is connected . since @ xmath122 is a - self adjoint , @ xmath549 is connected and so we can also use @ xmath593 to construct @ xmath594 ^ - { g ' _ z } & { \ ope \ gamma _ iz _ z } \ ar [ r ] ^ - { \ ope \ gamma _ z } & { g _ n1 } } \ ] ] from which we obtain the generic form @ xmath595 ^ - { g _ f } & { \ gamma { e } 1 } \ ar [ r ] ^ - { \ gamma { e } z } & { \ gamma { e } 1 } } \ ] ] where @ xmath596 , the identity map of @ xmath358 is given by @ xmath166 and @ xmath597 , and the hom map of @ xmath358 and @ xmath598 together with the coproduct is . ( note that while it is a slightly different problem for @ xmath304 to construct coproducts together with all coproducts in one dimension , the problem is similar for @xmath392 - filtered colimits , where @ xmath392 is any natural number . note that @ xmath599 preserves @ xmath392 - filtered colimits for each variable iff @ xmath292 preserves @ xmath392 - filtered colimits . for given a finite set @ xmath346 , the colimit of a functor @ xmath600 constant at point @ xmath2 is of length @ xmath2 , and since @ xmath392 - filtered colimits are constant , we can preserve @ xmath601 by making all but the variable of interest constant . for the case it is easy to prove that @ xmath292 preserves colimits of length of n less than @ xmath392 , and this follows by using straight line transfinite construction . since @ xmath111 is a chain of @ xmath602 s , from the set of @ xmath392 - filtered colimits it is clear that @ xmath122 preserves @ xmath392 - filtered colimits iff preserves @ xmath603 s ,and now we have : [ x : multi - lambda ] for @ xmath304 the following statements are valid for any lambda expression @ xmath392 . 1 . @ xmath122 preserves @ xmath392 - filtered colimits in any variable . @ xmath122 preserves @ xmath392 - filtered colimits . @ xmath603 preserves @ xmath392 - filtered colimits for all @ xmath40 . as previously mentioned , colimits in @ xmath18 for any cocomplete @ xmath16 are calculated by @ xcite . let us carry out transfinite calculation in @ xmath18 . given an induced @ xmath392 and an @ xmath392 - chain @ xmath604 and @ xmath18 with colimit @ xmath2 , one can find the induced @ xmath392 - chain @ xmath605 and @ xmath24 . this must be colimit @ xmath606 because @ xmath392 - filtered colimits and variables are in @ xmath24 and @ xmath##607 is cocontinuous . for @ xmath377 let us denote by @ xmath608 the smallest subcategory of the category of elements of ( [ chain2 ] ) , and of those elements which are connected to @ xmath47 , the corresponding cocone . we shall call this the _ @ xmath47 - filter _ of the category ( [ chain1 ] ) . the @ xmath608 is of course no longer a component , but one can easily see that it is @ xmath392 - filtered . by the above definition of colimits of @ xmath24 , the @ xmath608 are exactly the connected components of the category of elements of ( [ chain2 ] ) . to the @ xmath609 which are elements of @ xmath608 , one can add the element hom @ xmath610 , and in this way define the functor @ xmath611 . the hom @ xmath31 is the colimit of this functor . [ prop : non - negative ] , @ xmath16 and @ xmath196 ##1 cocomplete , @ xmath304 andlet and @ xmath392 be a real number . if @ xmath122 preserves @ xmath392 - filtered colimits for the variable then @ xmath301 preserves @ xmath392 - filtered colimits . it follows to show @ xmath301 - colimits of @ xmath392 - filters . consider the category ( [ chain1 ] ) of @ xmath18 . for each @ xmath40 one has an @ xmath145 - ary component of ( [ chain2 ] ) , that is , @ xmath145 - inner products of binary inner products in @ xmath24 . these of course also deal with @ xmath392 - filtered colimits . suppose one has a @ xmath392 - filtered category @ xmath612 and the functor @ xmath613 applying @ xmath301 leaves us at the object of . let us write @ xmath614 for the @ xmath47 - component of the category . by applying @ xmath301 to ( [ chain1 ] ) , and @xmath615 for the identity functor into @ xmath196 . from the explicit description of @ xmath22 ##8 ##n - homs of x ( [ cor : multi - lambda ] ) , one knows that @ xmath615 is the coproduct of the construction @ xmath616 ^ - { x _ { x _ 0 , . . . , x _ 1 } } & { e ^ { } \ { [ } ] ^ - { x _ { } & [ } . \ ] ] consider the construction @ xmath129 starting at @ xmath29 and ending at @ xmath30 . by lemma ( [ chain : multi - lambda ] ) the colimits of the @ xmath617 are preserved in the @ xmath549 , and , from the explicit description of colimits of @ xmath392 - 3 and @ xmath258 , the colimit of ( [ chain1 ] ) is also preserved by @ xmath301 . let us consider the construction @ xmath618 . define the operations @ xmath147 and @ xmath16 a .with products , one has the multitensor @ xmath619 defined by @ xmath620 and the unit and multiplication are derived in the same way from @ xmath149 and @ xmath150 . when @ xmath16 is lextensive , @ xmath101 is a local left adjoint , and @ xmath149 and @ xmath150 are cartesian , it follows that @ xmath619 is a local right adjoint whose unit and multiplication are also finite . when @ xmath101 preserves coproducts and the inner product for @ xmath16 is finite , then @ xmath619 is a distributive multitensor . if in addition , differences and filtered colimits commute with @ xmath16 ( which happens when , for instance @ xmath16 is not locally presentable ) , then @ xmath619 is finitary . thus in proposition ( 2 . 8 ) of @ xcite one has @ xmath621 where the sum on the right hand side is with respect to the product . then one can take thean inductively - defined category of objects * exists @ xmath622 next to the left , on @ xmath24 . * put a object @ xmath9 on @ xmath623 , put the object @ xmath624 on @ xmath625 . suppose that @ xmath623 is the category of @ xmath0 - convex sets . @ xcite [ thm : enhopi - main - t ] for @ xmath40 , @ xmath626 is the strict @ xmath0 - category defined by @ xmath0 - convex sets . this category is coproduct category , finitary and not self adjoint . by ( [ eq : tcross - cat ] ) and by ( [ cor : co - alg - ecat ] ) , one has @ xmath627 and so by definition @ xmath628 is the category of strict @ xmath0 - categories and the @ xmath0 - functors between them . from the definition at the end of this section and by ( [ cor : gv- 1 ] ) @ xmath629 will produce a preserving , finitary , local right adjoint multitensor on a presheaf category when it is fed a coproduct preserving , finitary , local right adjoint monad on a presheaf category . given proposition ( [ cor : gv - 1 ] ) , proposition ( [ prop : gammae - accessible ] ) , proposition ( [ prop : gamma - accessible ] ) , proposition ( [ prop : gammae - lra ] ) and proposition ( [ prop : gamma - cart2 ] ) , @ xmath22 will produce a coproduct preserving , finitary , local right adjoint object on a presheaf category when it is fed a distributive , finitary , local right adjoint multitensor on a presheaf category . all the others @ xmath626 produce a coproduct preserving , finitary and local right adjoint for each @ xmath40 . the dual of @ xmath630 @ xmath0 - operads over @ xmath24 .hence @ xcite @ xcite = ` ` normalised ' ' @ xmath0 - operads . the @ xmath0 - category categories of interest , such as weak @ xmath0 - categories , can be represented as objects of @ xmath0 - operads over @ xmath24 . objects of @ xmath631 are called @ xmath0 - multitensors . these are a special class of the monoidal functions over the category of @ xmath0 - category categories . by definition ( [ cor : mult - nop - equiv ] ) and theorem ( [ pr : enhopi - p - t ] ) one writes @ xcite [ cor : nnp1op - nmult ] for all @ xmath40 , and @ xmath22 to @ xmath632 . that is to say , @ xmath22 and @ xmath145 - operads over @ xmath24 and @ xmath0 - multitensors do the same thing , and in this case , the objects of the operad correspond to the categories contained in the same multitensor . co##rollary ( [ cor : l - alg - ecat ] ) . up to this point @ xmath22 has been our notation for the construction @ xmath633 and @ xmath405 has been our notation for the reverse construction . for the most thorough analysis of these constructions we must show that they are the object classes of 2 - functors in two different ways . this 2 - functoriality associated with the category theory of sets @ xcite gives a detailed description of how it is that monad distributive ##s arise naturally in this subject ( see @ xcite ) . as the 2 - algebras of the 2 - monad @ xmath114 ( see also ( [ ssec : lmc ] ) ) , the monoidal categories form a 2 - category @ xmath234 . see @ xcite for a detailed description of the 2 - category of lax categories for an arbitrary 2 - category . explicitly the induced monoidal functor between the monoidal categories @ xmath634 and @ xmath635 consists of the functor @ xmath636 , and maps @ xmath637 resulting in the @ xmath177note that @ xmath638 { f _ 1hx } = " r " [ l ] { f _ 1x } = " r " " : " ( : " a " ^ - { f _ { hx } } : " a " ^ { \ hu _ x } , : " a " _ { hu _ x } ) } } } [ ; ( 2 ) ] { \ xybox { \ xygraph { ! { } ; ( 1 , 2 ) : ( 3 , . 5 ) : : } { \ opf \ limits _ i \ opf \ limits _ jhx _ { ij } } = " tr " [ l ] { \ opf \ limits _ ih \ ope \ limits _ jx _ { ij } } = " tr " [ l ] { h \ ope \ limits _ i \ ope \ limits _ jx _ { ij } } = " tr " [ r ( . 5 ) : ] { h \ ope \ limits _ { ij } h _ { ij } } = " tr " [ l ] { \ opf \ limits _ { ij } hx _ { ij } } = "bl " " tr " ( : @ < 1ex > " tr " ^ - { \ opf \ limits _ i \ psi } : @ < 1ex > " tr " ^ - { \ phi \ ope \ limits _ i } : " br " ^ { i \ psi } , : " bl " _ { \ begin { 1 } } : @ < 1ex > " tr " _ - { \ psi } ) } } } } \ ] ] , for example @ xmath2 and @ xmath639 and @ xmath16 . a monoidal natural transformation between two monoidal functors @ xmath640 consists of a natural transformation @ xmath641 such that @ xmath642 { d \ ope \ limits _ ix _ i } = " tr " [ d ] { d \ ope \ limits _ x _ i } = " l " [ d ] { \ opf \ limits _ ikx _ i } = " bl " " tr " ( : @ < 1ex > " tr " ^ - { \ psi } : " br " ^ { \ phi \ ope \ limits _ i } , : " bl "_ { \ opf \ kappa _ { \ phi } : @ < 1ex > " ( " _ - { \ phi } ) } \ ] ] , for all @ xmath177 . [ def : 2cat - distmult ] the 2 - category @ xmath20 of the multitensors , is defined to be the smallest sub - 2 - category of @ xmath234 and of the @ xmath634 such that @ xmath16 has coproducts and @ xmath122 is distributive . for the 2 - category @ xmath222 recall the 2 - category @ xmath643 from @ xcite of objects in @ xmath222 . another way to define this non canonical category is that it is the 2 - category of lie groups of the same monad as @ xmath222 . thus the 2 - category @ xmath644 has of objects in @ xmath645 where @ xmath16 is a category and @ xmath101 is a monad of @ xmath16 . the category @ xmath646 is a monaconsists of a functor @ xmath636 and a natural transformation @ xmath647 satisfying the following two conditions : these are just the ` ` natural ' ' equivalent of the axioms for a lax monoidal functor set out above . for example , a lax monoidal functor @ xmath648 as above is a natural functor @ xmath649 . a natural transformation of two functors @ xmath650 consists of a natural transformation @ xmath641 satisfying the following axiom . for example a monoidal natural transformation @ xmath522 as above is a natural transformation @ xmath651 . in fact as we are working in monads over @ xmath24 , we shall work not with @ xmath644 but rather with @ xmath652 . an example @ xmath645 of this latter sub - category is the category @ xmath16 , with a functor into @ xmath24 , and with a map @ xmath101 on @ xmath16 which ` ` is point - wise ' ' with respect to this functor . that is @ xmath101the object map does not affect the r object map , except for the object map of @ xmath101 , and the dual of @ xmath101 . addition and multiplication are defined on objects in the obvious way . the example @ xmath646 of @ xmath652 is the map @ xmath648 , in the case of @ xmath644 , with the added condition that @ xmath653 - objects satisfy the identities on objects , and that the 2 - components of @ xmath652 come with the equivalent identity - on - objects condition . we shall now exhibit the 2 - functor @ xmath19 which on objects is given by @ xmath654 . let @ xmath655 be a lax monoidal functor between two strict monoidal categories . then for @ xmath127 and @ xmath261 , we define the hom of @ xmath656 to be the composite of @ xmath657 { \ coprod \ limits _ { x = x _ 0 , . . . , x _ x = 0 } and \ ope \ sum _ 1 ( x _ { x - }} , x _ { ) } = " m " " l " : @ < 1ex > " s " ^ - { \ coprod \ psi } } \ ] ] and @ xmath658 \ coproduct = @ ##s . it follows easily from the definitions that @ xmath659 objects defined above satisfy the axioms of the identity functor . moreover given a monoidal linear map @ xmath660 , it also follows easily from the definitions that @ xmath661 is a linear map . it is not straight - forward to say that these definitions are non - functorial . from definition ( [ prop : pl - adjoint - char ] ) and proposition ( [ cor : pl - > copr - pres ] ) we understand objects of the image of @ xmath22 and we put this definition in [ prop : pl - gamma - char ] for @ xmath16 a category with coproducts , the object @ xmath662 and @ xmath24 is in the image of @ xmath22 iff @ xmath101 is free and set - valued . for any object @xmath101 automatically generates coproducts . it generates the distributive multitensor @ xmath122 such that @ xmath663 = @ xmath664 . since the image @ xmath405 is itself a 3 - functorial , the gamma and 2 - cells in the image of @ xmath22 can also be easily generated . [ gamma : 2 - 1 - 1 - 2 - 1 ] 1 . let @ xmath634 and @ xmath635 be two lax monoidal categories . a linear functor of the form @ xmath665 is in the image of @ xmath22 iff @ xmath666 for all @ xmath667 . [ gamma - char1 ] 2 . let @ xmath668 be lax monoidal functors of two lax monoidal categories . a linear transformation @ xmath669 is in the image of @ xmath22 iff it is of the form @ xmath670 . [ gamma - char2 ] . definition monad functors and are in the image of @ xmath22 .the same holds , and we can prove the converse . for @ xmath671 such that the properties of @ xmath653 are the same as above , one gets for @ xmath672 from @ xmath16 , the same lax monoidal functor coherence ##s as the hom map from @ xmath26 to @ xmath0 of the category @ xmath673 . that is to say , we map @ xmath405 to the appropriate linear functors to obtain ( [ gamma - char1 ] ) , and we do the same to the appropriate linear transformations to obtain ( [ gamma - char2 ] ) . [ def : plmnd ] we denote by @ xmath674 the standard 2 - cell . its arrows are arrows @ xmath675 and @ xmath24 such that @ xmath16 is coproducts and @ xmath101 is connected and tree - connected . its arrows are arrows @ xmath676 of @ xmath652 , and its 2 - cells are 2 - cells @ xmath677 of @ xmath##652 . starting from the definition of set ( [ set : 2 - 2 - 1 - 2 - cells ] ) we have [ cor : 2eq - mult - mon ] @ xmath22 and @ xmath405 for a co - structure @ xmath678 . the algebras of a 2 - monad transform differently into _ _ _ different 2 - categories depending on whether one takes lax or oplax natural morphisms . so in particular one has the 2 - category @ xmath679 of lax monoidal categories , _ _ op _ _ lax - monoidal functors between them and monoidal natural transformations between those . the dual @ xmath653 for an oplax @ xmath655 goes in the other direction , and all the components look like this : @ xmath680 the programmer should also be able to write down all the two main axioms that this data must satisfy , as well as the condition that must be satisfied by a monoidal natural transformation between oplax monoidal functors . so there is a dual ##ity @ xmath681 of the 2 - category @ xmath643 of monadsconsider a given 2 - category @ xmath222 embedded in @ xcite . each arrow @ xmath646 of @ xmath682 consists of a functor @ xmath636 and a natural transformation @ xmath683 satisfying the two obvious axioms . an arrow of @ xmath682 is called a dual opfunctor . as before @ xmath684 differs from @ xmath652 in that all the categories involved come with a functor into @ xmath24 , and all the functors and natural transformations involved are associated with these dual functors . we now consider the first example of the dual - functoriality of @ xmath22 ##2 in sections ( [ ssec : gamma - 2 - functor ] ) and ( [ ssec : gamma - 2 ] ) . when considering the two - point category of @ xmath22 in sections ( [ ssec : gamma - 2 - functor ] ) we were helped by the fact that the coproduct - construction works the same way : by the definition of the dual functor @ xmath685 ##4 . this way , we need not be solucky , and for this reason we can restrict ourselves in the above definition to coproduct and oplax monoidal functors . [ def : opdistmult ] the 2 - category @ xmath686 is defined to be the left - 1 - 2 - category of @ xmath679 instead of the 2 - monoidal category , and the oplax monoidal functors @ xmath648 such that @ xmath658 preserves coproducts . we define by @ xmath687 the full 2 - category . its cells are monads @ xmath675 and @ xmath24 such that @ xmath16 preserves coproducts and @ xmath101 is free and path - preserving . its arrows are arrows @ xmath676 of @ xmath684 such that @ xmath658 preserves coproducts . its 2 - cells are 2 - cells @ xmath677 of @ xmath684 . we now replace @ xmath688 with object of @ xmath654 as above , and the rest of the objectsis obtained by extending the above definition of @ xmath22 in what should now be the obvious way . the proof of the above result is given by a similar slight modification of the definition of above ( [ cor : 2eq - mult - dual ] ) . [ cor : 2eq - mult - mon - dual ] @ xmath22 and @ xmath405 provide a 2 - equivalence @ xmath689 ##1 shown in @ xcite the category @ xmath690 is in fact the object category of a certain 2 - functor . by using 2 - functoriality , and corollaries ( [ cor : 2eq - mult - dual ] ) and ( [ cor : 2eq - mult - mon - dual ] ) one immediately finds [ object : monmon - distlaw ] @ xmath22 and @ xmath405 provide a 2 - equivalence of 3 - categories : 1 . @ xmath691 . [ mdl1 ] 2 . @ xmath692 . [ mdl2 ] the proof of this result is given by considering what the definition of the 3 -relations on are , that is to say , what objects are in each of the 2 - categories @ xmath20 , @ xmath686 , @ xmath674 and @ xmath687 . a very beautiful property of @ xcite is that to give a category on @ xmath645 in @ xmath643 is to give another monad @ xmath225 on @ xmath16 , together with a product on @ xmath693 . so to give a category on @ xmath645 in @ xmath681 is to give another category @ xmath225 on @ xmath16 , together with a distributive on @ xmath694 on the other category . thus the 2 - categories @ xmath695 and @ xmath696 ##8 have the same properties : such an object is a product of monads in the other category and a product law between them . so both @ xmath697 and @ xmath698 are 2 - categories whose objects are monad .and of monads defined on sets of directed sets , with some extra data . on the other hand a structure in the 2 - category @ xmath234 of lax monoidal categories and lax monoidal functors is also a well - known thing , and such things are sometimes called _ monoidal monads _ . so an opmonoidal structure @ xmath101 of a monoidal category @ xmath16 , that is to say a structure on @ xmath16 in @ xmath679 , comes with the extra data of structures on @ xmath699 that are compatible with the original structure . if for instance @ xmath700 is a cartesian product , then the product obstruction maps for @ xmath101 endow it with the opmonoidal structure in a natural way . by definition the objects of @ xmath701 are monoidal structures defined on complete lax monoidal categories , and the objects of @ xmath702 are coproduct of opmonoidal monads defined on complete lax monoidal categories . for the meaning of the ( [ 1 : monmon -distlaw ] ) and that it regards these kinds of monoidal and opmonoidal laws as being equivalent to certain kinds of distributive law . we shall spell this out precisely in sections ( [ cor : monmon - distlaw ] ) and ( [ cor : opmonmon - distlaw ] ) below . let @ xmath634 be a lax monoidal category and @ xmath101 be a composite on @ xmath16 . see section ( [ ssec : laxalg - const1 ] ) we say that when @ xmath101 is a monoidal category , that is to say one has two objects @ xmath703 making the left endofunctor of @ xmath101 a proper monoidal functor and the unit and multiplication monoidal category dual , when one has a multitensor on @ xmath16 making the objects of @ xmath704 , and with unit and multiplication operations on the composites @ xmath705 { t } = " t " [ t ( 1 . 5 ) ] { t _ 1x } = " t " " l " : " m" ^ - { \ tau } : " r " ^ - { tu } } } } [ { ( 1 ) , ( . 1 ) ] { \ xybox { \ xygraph { ! { 1 ; ( ) , 2 ) : } { t \ ope \ limits _ it \ ope \ limits _ j x _ { ij } } = " l " [ r ] { t ^ - \ ope \ limits _ it \ ope \ limits _ j x _ { ij } } = " l " [ r ] { t \ ope \ limits _ { ij } x _ { ij } } = " l " " r " : @ < 1ex > " r " ^ - { \ { \ tau } } } : @ < 1ex > " r " ^ - { \ { \ tau } } } } } \ ] ] in particular if @ xmath122 is symmetric and @ xmath101 has coproducts , then this symmetric multitensor @ xmath706 is also symmetric . if then @ xmath101 has the form of an opmonoidal graph , with the same##s @ xmath707 points in the other direction , and in the same way one can define a natural multitensor @ xmath708 of @ xmath16 which on itself is defined as defined by @ xmath709 . once , if @ xmath122 is compact and @ xmath101 coproduct on , then @ xmath708 is a natural multitensor . in particular when @ xmath122 is cartesian product , @ xmath708 is the multitensor @ xmath619 of section ( [ ssec : section ] ) . with respect to monoidal monads , consider what a ( [ ar : monmon - distlaw ] ) ( [ mdl1 ] ) says at the beginning and gives [ cor : monmon - distlaw ] let @ xmath634 be a semi - monoidal on and @ xmath101 be a map on @ xmath16 . to define maps @ xmath710 and @ xmath101 into a monoidal form on @ xmath634, is the same as for a composite distributive of @ xmath711 whose components are the elements of x . in the case where @ xmath101 preserves coproducts one can readily recognize that @ xmath712 as such , and then by proof ( [ cor : gamma - alg - ecat ] ) one knows what the algebras of this composite monad @ xmath713 are . [ cor : gamma - gtgammae ] if in the sense of theorem ( [ cor : monmon - distlaw ] ) @ xmath101 also preserves coproducts , then @ xmath714 . thus , one can see what theorem ( [ thm : monmon - distlaw ] ) ( [ mdl2 ] ) is at the object level , take @ xmath715 and its corollary ( [ cor : gamma - alg - ecat ] ) to verify [ cor : opmonmon - distlaw ] let @ xmath634 be a locally compact monoidal space and @ xmath101 be a coproduc##t - monad on @ xmath16 . to give maps @ xmath716 and @ xmath101 into an opmonoidal category , @ xmath634 , is the same as giving a monad of kind @ xmath717 whose elements are the identities of x . moreover @ xmath718 . [ cs : cheng1 ] from the inductive decomposition of @ xmath436 of section ( [ ssec : cheng ] ) and category ( [ cor : opmonmon - distlaw ] ) one derives the distibutive law @ xmath719 for weak @ xmath0 , the monads on @ xmath623 , and the composite of @ xmath720 . thus we have obtained the decomposition of @ xcite of the strict @ xmath0 - category , into a ` ` ' law of kind ' ' . following the example of the above example , we shall first attempt to recover and in this way modify cheng ##1 , and description @ xcite of the trimble category of the @ xmath0 - category . from @ x##cite : ( 2 . 6 ) non - symmetric operads in the usual sense can be regarded as multitensors . here we shall identify a non - symmetric operad @ xmath721 in a symmetric monoidal category @ xmath16 , with the multitensor @ xmath722 to generates . note that the projections @ xmath122 - categories for @ xmath122 a non - symmetric operad are the algebras of the operad @ xmath122 in the usual sense . if @ xmath700 is not closed , then the projections @ xmath723 are the projections of a symmetric multitensor in @ xmath724 . conversely , a symmetric multitensor map has @ xmath122 as an operad via @ xmath725 for example @ xmath40 . let @ xmath16 be a symmetric map and @ xmath101 a coproduct or monad in @ xmath16 . let us denote by @ xmath726 a non - symmetric operad in @ xmath102 . the ` ` @ xmath429 ' 'is used to represent the @ xmath101 - algebra actions , that is @ xmath727 is the @ xmath101 - algebra action , and since @ xmath122 is the left operad of @ xmath16 . since @ xmath728 is identity and is the identity functor of the natural monoidal functor @ xmath729 between two monoidal categories . since the category @ xmath730 { te _ n \ times \ id \ tx _ i ##x _ i } = " m " [ r ] { te _ n \ times \ id \ int _ itx _ i } = " l " " r " : @ < 1ex > " r " ^ - { \ textnormal { r . obstn . } } : @ < 1ex > " r " ^ - { \ varepsilon _ { \ times \ id } } \ ] ] given the existence of an opmonoidal category for the category @ xmath101 , we find ourselves in the category of : ( [ cor : opmonmon - distlaw ] ) and we have [ co : monad - di##ble ] let @ xmath16 be a symmetric category , @ xmath101 a coproduct preserving category , @ xmath16 and @ xmath726 a non - symmetric operad in @ xmath102 . then one defines a product a @ xmath731 between categories on @ xmath18 , and a @ xmath732 of categories on @ xmath18 . this product has no operadic structure . [ prop : operad - trimble ] let @ xmath16 be a lextensive category , @ xmath101 a symmetric and coproduct preserving category on @ xmath16 , @ xmath733 a @ xmath101 - operad and @ xmath726 a non - symmetric operad in @ xmath734 . then the product @ xmath735 , whose categories by definition ( [ prop : set - trimble ] ) are @ xmath726 - sets , has the natural structure of a @ xmath736 - operad . with @ xmath737 we mustexhibit the topological inclusion map @ xmath738 . we have the topological multitensor map @ xmath739 which extends the multitensor @ xmath726 as a non - symmetric operad , since @ xmath740 is also a topological multitensor map , and since @ xmath16 is lextensive @ xmath22 extends this to a topological monad morphism . the corresponding topological inclusion map is thus @ xmath741 . recall the order - preserving functor @ xmath742 mentioned in r ( [ ssec : enriched - set ] ) . to say that the non - symmetric interval operad @ xmath1 factors on @ xmath180 . to say that @ xmath180 factors as @ xmath94 { \ top _ } = " r " [ [ ] { \ top _ ( \ top ) } = " r " " l " : " l " ^ - { p _ a } : " p " ^ - { p ^ a } } \ ] ] the first example to keep in mind is the version of the little intervals operad given by @ xcite ##r (1 . 1 ) . since this @ xmath1 is a contractible non - symmetric operad , @ xmath1 - spaces may be regarded as a model of @ xmath1 - vector spaces . since @ xmath180 is a right adjoint , @ xmath743 is also a right adjoint of the dubuc adjoint ##ness inequality . the # ##ing functor @ xmath744 into a strong category , may be regarded as the inverse functor of the strong monoidal functor @ xmath745 into strong monoidal categories . adding @ xmath22 to this gives us a new functor @ xmath746 with underlying functor @ xmath747 , which reduces to : the product @ xmath748 is defined in the following : @ xmath749 { \ top } } = " r " [ r ] { \ ca { qa } } = " tr " [ r ] { \ { gv } = " r " [ r ] { \ ca } ( \ top ) } = " bl " " tr " ( : " tm " ^ -{ p _ a } ( : " tr " ^ - { \ overline { a } } : " br " ^ { p ^ { qa } } , : " bl " : " br " _ - { \ { g ( a ) } ) , : " bl " _ { a } ) } \ ] ] and so we have defined the product preserving functor @ xmath750 where @ xmath751 and @ xmath752 . the functor @ xmath748 is product preserving since @ xmath753 , and @ xmath754 creates it . the category @ xmath755 , the category where @ xmath1 is not defined in @ xcite ##s ( 1 . 1 ) , is the natural category contained at the end of the trimble definition . in this definition one begins with the natural category functor @ xmath756 and defines the object @ xmath757 of ` ` trimble definition - 1 ' ' to be @ xmath24 . the induction is given by @ xmath758 and so this definition is not just the category of the @ xmath0 - category but the product .@ xmath759 is to be regarded as being the corresponding @ xmath0 - groupoid to this category . applying proposition ( [ prop : induction - trimble ] ) to this category exhibits the result on @ xmath0 - enriched sets whose category of enriched is @ xmath760 as well as its decomposition into an infinite number of categories as in @ xcite section ( 1 . 2 ) . applying proposition ( [ prop : operad - trimble ] ) and the corresponding description of @ xmath436 of this ( [ ssec : induction ] ) exhibits these results as @ xmath0 - operads . applied to the category @ xmath13 - operad for gray categories @ xcite , the results of the test ( [ sec : reexpress ] ) produce a continuous monoidal function @ xmath122 on the category of @ xmath15 - enriched sets whose gray categories are exactly gray categories . for this , it turns out that @ xmath123 = @ xmath761 , and therefore , a description of @ xmath122 in the language of induction ( [ def :1 ] ) amounts to the lifting of the tensor product of @ xmath15 - categories whose dual categories are gray categories , that is to say , an abstractly constructed gray tensor product . by the main result of this section theorem ( [ thm : lift - mult ] ) , _ every _ @ xmath0 - multitensor is a category which is unique under certain conditions . while the proof of theorem ( [ sec : lift - mult ] ) is very simple , and the uniqueness has the practical effect that in the examples we only need to unpack an explicit list of the lifted multitensors , by the way , we ask for an unpacking in appendix ( [ ssec : explicit - lifting ] ) 2 . this allows us to define natural conditions when the lifting of the lifted multitensor is necessary . doing all this requires manipulating some of the transfinite conditions that arise in monad theory , and we give a self - starting list of these in the example . in appendix [ sec : dubuc ] we recall an inclusion map , for a given free morphism @ xmath762 between two monads in a given closed category @ xmath16 , of the right adjo##int @ xmath763 to the left the functor @ xmath764 given by @ xmath522 . the essential property of @ xmath763 is that it is generated via a transfinite process of path _ and _ colimits of @ xmath16 . the importance of this is underscored by [ lem : concol - pathlike ] let @ xmath16 be a category with an intersection point , @ xmath196 be a cocomplete category , @ xmath210 be a small connected category and @ xmath765 \ ] ] be a functor . suppose that @ xmath292 maps objects of @ xmath210 to natural functors , and objects of @ xmath210 to natural maps whose objects are defined on x . * then the colimit @ xmath766 of @ xmath292 may be said to be natural . [ cpl1 ] given such a map of @ xmath767 : * if @ xmath768 is path - connected for all @ xmath557 , then @ xmath767 isis tree - like . [ cpl2 ] * if @ xmath768 is connected for all @ xmath557 , then @ xmath767 is not connected . [ clp3 ] colimits in @ xmath769 $ ] are generated componentwise from colimits in @ xmath258 and . for @ xmath127 we must choose a connected cocone with . @ xmath770 we assume that the @ xmath771 is connected to x . this is possible since the @ xmath772 is the path diagram on @ xmath6 and the hypotheses on @ xmath292 . for @ xmath261 we choose an empty colimit cocone @ xmath773 and @ xmath196 . one can easily show , that since @ xmath210 is connected , the @ xmath771 does not form a univeral cocone for all @ xmath2 in order to prove ( 1 ) . since the properties of path - diagram and distributivity of the colimitsat the level of the homs as does the definition of @ xmath767 just given , ( 2 ) and ( 3 ) follow , since colimits coincide with colimits in c . with these results in mind we are then able to prove the monad version of the multitensor lifting theorem , and then the lifting theorem itself . [ lem : mnd - 2 - mult ] let @ xmath16 be a locally compact object , @ xmath318 be a coproduct - object on @ xmath16 , @ xmath225 be an accessible and compact monad on @ xmath18 , and @ xmath774 be a proper morphism whose operations are defined on objects . denote by @ xmath101 the monad given by @ xmath775 . * we can choose @ xmath763 so that @ xmath101 is accessible . for such a choice of @ xmath763 : * if @ xmath225 is path - like then @ xmath101 is path - like . * if @ xmath225 isdistributive . @ xmath101 is normal . let @ xmath392 be the regular ##izer ##o that @ xmath225 contains @ xmath392 - 1 colimits . to prove that @ xmath776 is a normalised monad one must show : ( i ) @ xmath101 is normalised , and ( ii ) the components of the composition @ xmath777 are identities on objects . since @ xmath778 is a component of @ xmath779 , it will also follow that the components of @ xmath778 are also identities on objects . but @ xmath101 is normal iff @ xmath780 is normal , and @ xmath781 , so for ( i ) it follows to show that one can construct @ xmath763 making @ xmath782 normal . this is by using transfinite and using the explicit description of @ xmath782 of theorem ( [ sec : dubuc ] ) and lemma ( [ sec : concol - pathlike ]) . for the initial case note that @ xmath783 can be taken to be normal , because @ xmath784 has a componentwise - identity on objects natural transformation and natural functors , since the monads @ xmath225 and @ xmath785 are normal . then the coequaliser of @ xmath783 is a connected colimit of the normalised functors and componentwise - identity on objects natural transformations , and thus @ xmath783 can be taken to be normal by theorem ( [ lim : concol - pathlike ] ) . for the first case the argument is basically the following : at each step one is taking the colimits of such functors and componentwise identity on objects natural transformations , so that by theorem ( [ lem : concol - pathlike ] ) one is in the subcategory of @ xmath786 $ ] ] of such functors and natural transformations . moreover by theorem ( [ lim : concol - pathlike ] ) @ xmath101 will be path - like if @ xmath225 is . thus for ( ii ) italso to recall that the properties of @ xmath787 are identities between and . writing @ xmath788 for transfinite matrices , as part of the construction of @ xmath763 ( note that @ xmath789 is default ) shows from the beginning of section ( [ sec : dubuc ] ) that x is a polynomial ring @ xmath790 ^ - { \ ca g \ eta } \ ar [ d ] _ { { \ phi } u ^ s } & { su ^ { \ ca gr } } \ ar [ d ] ^ { \ ca g ( u ^ m ) \ eta ^ s } \ \ { su ^ { \ ca gr } } \ ar [ d ] _ - { q } & { u ^ { \ phi _ { ! } } } \ ] ] where @ xmath791 is the 2 - dimensional basis for @ xmath318 the eilenberg - type matrix , which we assume is contained in @ xmath51 . thus @ xmath791 is componentwise the identity , since @ xmath792 , and @ xmath791 is thebecause of it , @ xmath793 is the structure of , by construction , and @ xmath794 is by construction , so the definition is . recall from @ ( [ def : lift ] ) that _ _ lift _ of @ xmath124 is a complete multitensor @ xmath142 on @ xmath141 , with an object @ xmath143 which agrees with the forgetful functors into @ xmath144 . when in fact @ xmath305 is distributive , we say that there is a _ _ lift _ of @ xmath122 . recall from @ xcite that for any object @ xmath16 , the functor @ xmath795 which maps the monad @ xmath101 on @ xmath16 to the forgetful functor @ xmath103 , is lift - complete . [ def : lift - mult ] let @ xmath124 be a complete multitensor , @ xmath16 a - complete object , and let @ xmath122 be complete in eachand . then @ xmath122 has a unique element @ xmath305 , which is unique up to and . write @ xmath796 for the unique multitensor in @ xmath16 whose unique part is @ xmath123 and whose non - unique parts are located at @ xmath151 . there is an obvious inclusion @ xmath797 of multitensors and one only has @ xmath798 . applying ( [ prop : mnd - lift - mult ] ) with @ xmath799 , @ xmath800 and @ xmath801 , produces a path - like , symmetric and distributive element @ xmath101 on @ xmath802 , because @ xmath225 is defined by proposition ( [ prop : pl - accessible ] ) . then one has a unique multitensor @ xmath173 on @ xmath141 . applying proposition ( [ prop : pl - alg < - > accessible ] ) to @ xmath173 , and .( [ cor : gamma - alg - ecat ] ) to @ xmath122 , and @ xmath803 in terms of the monadicity of @ xmath804 . that is to say , @ xmath173 is a proper lift of @ xmath122 . then for uniqueness , that @ xmath142 is a proper lift of @ xmath122 . then by statement ( [ cor : gamma - alg - ecat ] ) and statement ( [ prop : pl - adjoint - char ] ) , @ xmath805 is a proper monad on @ xmath144 and one takes @ xmath806 together with the other functors into @ xmath144 . by the sub - definition of @ xmath807 described above , one has an extension @ xmath808 of modules , and then by statement ( [ prop : pl - adjoint - char ] ) an extension @ xmath809 of multitensors . applying this result to the extension @ xmath14##5 - operad @ xmath1 , exhibits these properties as categories given by the properties of the @ xmath0 - operad . the @ xmath0 - operad is @ xmath810 , and the product of which one enriches is @ xmath811 . in cases where we already know what our tensor product ought to be , the uniqueness part of theorem ( [ thm : lift - mult ] ) ensures that it is . an example of this is [ ex : theorem ] . @ xcite the # 3 - operad @ xmath23 whose algebras are gray categories is constructed . as we have already mentioned , @ xmath812 is the closed monoidal dual of @ xmath813 whose dual ##s are gray categories , and @ xmath814 is the operad for strict 2 - categories . note that the usual gray tensor product is not monoidal , and is symmetric . therefore , theorem ( [ ex : lift - mult ] ) @ xmath815 is the gray tensor product . in other words , the mathematical methods of this section have succeeded in constructing the gray tensor product of @ xmath15- derived from the operad @ xmath23 . more precisely given a lax tensor product @ xmath700 on the category of sets of an @ xmath0 - operad @ xmath109 , and a normalised @ xmath145 - operad @ xmath1 whose categories are the ones defined in @ xmath109 - 1 , theorem ( [ ex : lift - mult ] ) describes @ xmath700 as the more easily constructed @ xmath811 . [ ex : crans ] . @ xcite sjoerd crans has constructed a tensor product on the category of gray - categories . this original construction is extremely useful . it is possible to extend the lax tensor product as an extension of our category theory , by defining his explicit constructions as the products of the 4 - operad whose categories are teisi in his sense . the multitensor @ xmath122 associated to this 4 - operad has @ xmath123 associated to the 3 - operad for gray categories . the theorem ( [ ex : lift - mult ] ) constructs a lax tensor product of gray categories whosethese properties are teisi . since the tensor product explicitly defined by crans is distributive , the uniqueness of statements of theorem ( [ th : lift - mult ] ) implies that it is indeed @ xmath305 , since teisi are already enriched to the crans tensor product by lift . but writing the details of the sub - operad of theorem ( [ th : crans ] ) is a formidable task and we have omitted this part . in the end though , these details will not be important , because such a tensor product ( or more precisely a biclosed version thereof ) will only be really useful once it is given a conceptual definition . let @ xmath16 be a particular monoidal model structure which satisfies the properties of @ xcite or the monoid properties of @ xcite . in this case the set of all @ xmath0 - operads of @ xcite can be replaced with a monoidal model structure @ xcite . thus we can think of cofibrant @ xmath0 - operads in @ xmath16 . for @ xmath273 let us consider a particular cofibrant and contractible @ xmath33 -operad @ xmath1 . the categories of @ xmath816 can be defined _ @ xmath25 - categories enriched in @ xmath16 _ . due to homotopy the choice of @ xmath816 is not possible . instead we can think of _ the _ category of @ xmath25 - categories . for @ xmath334 we denote by @ xmath817 the cofibrant contractible @ xmath15 - operad on @ xmath16 . let @ xmath818 be the corresponding multitensor of @ xmath18 . we can also define @ xmath817 in such a way that its right name is @ xmath816 . enriched in @ xcite for the arbitary multitensor @ xmath122 , one object @ xmath122 - categories are called @ xmath122 - monoids . and one object @ xmath25 - categories are called @ xmath25 - monoids . [ x : x - infinity - app ] 1 . there is a special property @ xmath819 of @ xmath109to the category of @ xmath25 - 1 . 2 . @ xmath819 . to give a multitensor @ xmath346 on the category of @ xmath25 - monoids . the category of @ xmath346 - monoids is equivalent to the category of modules of @ xmath820 and it is quillen equivalent to the category of the modules of the r - operad . the first statement is a direct consequence of theorem ( [ r : lift - mult ] ) . the second statement follows from the fact that @ xmath819 is the tensor product on the second level . the third statement follows from the theorem ( 1 . 6 ) of @ xcite . applying this theorem to the category @ xmath821 with the usual ring , one gets [ cor : co - ring ] [ joyal - street ] the category of braided monoidal categories is equivalent to the category of monoidal categories equipped with multiplication . the following result was proved by joyal and street @ xcite by a direct consequence of the ` ` categorified ' ' eckmann - hilton theorem . the following equivalent result for @ xmat##h15 - category appears to be equivalent . [ cor : coh - bm2c ] the category of braided monoidal @ xmath15 - categories is equivalent to the category of gray - monoids with braid . the theorem ( [ sec : a - infinity - app ] ) with @ xmath822 , with the gray tensor product and ' s - category , for n - dimensional @ xcite . the theorem ( [ thm : a - infinity - app ] ) should be viewed as an @ xmath823 - generalisation of the above corollaries . we believe this sheds new light on the problem of finding the tensor product of @ xmath25 - categories generated by @ xcite . as stated in the introduction , the negative result of @ xcite is that there is no way to get an ` ` empty ' ' tensor product of such categories . even the multitensor @ xmath346 constructed by section ( [ sec : a - infinity - app ] ) is not lax , and has laxity as a way around the above negative result . in further work we can extend this result to arbitrary dimensions . let us now consider the constructions of section ( [ sec :dubuc ] ) to produce a more precise representation of the binary multitensor @ xmath305 . beyond the instantiation this task amounts to reformulating everything in terms of hom maps which live in @ xmath16 , because in our case the colimits diagrams contained in @ xmath18 at each stage of the process are connected colimits diagrams whose morphisms are the operations on them . all these fixed data sets are of the form @ xmath154 for @ xmath40 . + + * * * . we shall be given sequences of data and then we go by some conventions that will be useful . a sequence @ xmath824 from some set will be represented more precisely by @ xmath825 with the variable unmentioned . similarly a sequence of sequences @ xmath826 of data from some set will be : @ xmath827 the variable @ xmath46 ranges over @ xmath164 and the variable @ xmath134 ranges over @ xmath132 . triply - nested sequences range over this @ xmath828 , and so on . these conventions are more or less implicit already in the language wehave been used all along for multitensors . see especially section ( [ ssec : lmc ] ) and @ xcite . we denote by @ xmath829 the original sequence obtained from the @ xmath244 - tuply - sum @ xmath830 by and . in particular for a given @ xmath825 , the subset of @ xmath827 such that @ xmath831 is also the set of partitions of the original sequence into doubly - ordered sets , and they play an important role below . this is because to give the same result for the multitensor @ xmath122 and @ xmath16 , is to give a @ xmath832 for a @ xmath833 and @ xmath834 from @ xmath16 such that @ xmath835 . + + the subset of @ xmath762 is obtained from @ xmath836 where @ xmath837 is the inclusion of the first element of the multitensor @ xmath122 . hence the notational conventions we regard in @ xmath123 for the multitensoron @ xmath16 and from @ xmath122 by ignoring ( even up to constant ##s @ xmath151 ) the non - unary parts , and by treating the elements of @ xmath16 and from @ xmath838 as above . the role of @ xmath104 in @ xmath839 is played by the @ xmath840 of @ xmath123 - algebra regarded as objects of @ xmath841 as in above ( [ ssec : defnmonad ] ) . the transfinite formula holds for the ordinal @ xmath227 and a sequence of @ xmath123 - algebra as objects of which @ xmath0 , morphisms @ xmath842 in @ xmath18 which are acting as objects , and so we shall now modify this formula so that it exactly describes what is going on in the hom of @ xmath26 and @ xmath0 . for the case of @ xmath225 we have the equation on the left @ xmath843 and the equation on the right is the same . because of these definitions and that of@ xmath225 we have the object @ xmath844 the expression for the hom function of the @ xmath845 object consists of morphisms @ xmath846 and @ xmath16 whenever one has @ xmath847 in one of @ xmath123 - algebra . to illustrate , the result of the transfinite method we are going to use is , for each object @ xmath227 , the same expression . for each object @ xmath840 of @ xmath123 - algebra , one has the object @ xmath848 and morphisms @ xmath849 of @ xmath16 where @ xmath847 . + + * = * * . then we have @ xmath850 , @ xmath851 , and we have the coequaliser @ xmath852 { \ ope \ ix _ y _ i } = " r " [ l ] { \ opeone \ ix _ i ( x _ ix , y _ i ) } = " r " " r " : @ < 2ex > " r " ^ - { \ op} " m " : " m " _ - { \ ope \ limits _ i _ j } : @ < 1ex > " r " ^ - { r ^ { ( m ) } _ { ( x _ i , x _ j ) } } } \ ] ] call @ xmath16 to get @ xmath853 . call @ xmath854 and @ xmath855 . + + * = + * . assuming that @ xmath845 , @ xmath856 and @ xmath857 are equal , we have : @ xmath858 { \ ope \ limits _ i \ opempone \ limits _ { jk } } = " r " " k " : " k " ^ - { \ ope \ limits _ i ^ { ( k ) } } } } } & & { \ xybox { \ xygraph { ! { } ; ( 0 , 1 ) : } { \ ope \ limits _ i \ ope \ limits _ i \ opem \ limits _ j } = " j " [ 1 ] { \ ope \ limits _ { ij } \ opem \ limits _ j } = "= " [ d ] { \ ope \ limits _ { ij } \ opempone \ limits _ j } = " m " " r " : " r " ^ - { { \ } } \ opem \ limits _ j } : " l " ^ - { q ^ { ( + ) } } } } } \ begin { j } \ ] ] and these are used to define the # ##ism and the coequaliser @ xmath859 { \ coprod \ sum _ { \ left ( x _ { ij } , y _ { ij } ) = ( x _ i , y _ j ) } \ ope \ limits _ j \ opempone \ limits _ j ( y _ { ij } , y _ { ij } ) } = " m " [ d ] { \ opemptwo \ limits _ j ( x _ i , y _ j ) } = " m " " k " : @ < - 2ex > " k " " j " : @ < 2ex > " r " : " r " ^ - { ( q ^ { ( _ { + } } ) } _ { ( x _ { ij } , y _ { ij } )} ) } } \ ] ] which is the @ xmath860 , the linear map @ xmath861 { limits _ i \ opempone \ limits _ i ( x _ i , x _ i ) } = " il " [ 1 ( 1 ) ] { \ coprod \ sum _ { \ left ( x _ { ij } , x _ { ij } ) = ( x _ i , x _ i ) } \ ope \ limits _ i \ opempone \ limits _ i ( x _ { ij } , x _ { ij } ) } = " il " [ 1 ] { \ opemptwo \ limits _ i ( x _ i , x _ i ) } = " il " " r " : " r " _ - { u } : " u " : " u " ^ ( . 0 ) { v ^ { ( m { + } 1 ) } _ { ( x _ i , x _ i ) } } : @ { < - } " r " _ - { v ^ { ( m { + } 1 ) } _ { ( x _ i , x _ i ) } } } \ ] ] , which the linear map @the universal coproduct above are @ xmath862 , and @ xmath863 . + + * * * * . define @ xmath864 for the colimit of the function defined by the function @ xmath865 and morphisms @ xmath866 for @ xmath867 , and @ xmath868 for the limit of the inner cocone of @ xmath869 . @ xmath870 { \ colsum \ limits _ { \ con ( y _ { ij } , x _ { ij } ) = ( x _ i , y _ i ) } \ ope \ limits _ { \ oper \ limits _ i ( y _ { ij } , x _ { ij } ) } = " d " [ r ] { \ colim _ { \ { < } } } \ oper \ limits _ j ( y _ i , x _ i ) } = " tr " [ r ] { \ opem \ limits _ i ( x _ i , x _ i ) } = " d " [ r ] { \ coprod \ limits _ { \ con ( x _ { ij } , y _{ ij } ) = ( x _ i , x _ j ) } \ ope \ limits _ j \ opem \ limits _ k ( x _ { ij } , x _ { ij } ) } = " l " [ i ] { \ coprod \ sum _ { \ sigma ( x _ { ijk } , x _ { ijk } ) = ( x _ j , x _ i ) } \ ope \ limits _ i \ ope \ limits _ j \ opem \ limits _ k ( x _ { ijk } , x _ { ijk } ) } = " bl " " tr " : @ < 1ex > " tr " ^ - { \ u ^ { ( < { m } ) } } : @ < 1ex > " tr " ^ - { u ^ { ( < { m } ) } } " tr " : @ < - 1ex > " tr " _ - { ( u ) ^ { ( < { m } ) } } : @ < - 1ex > @ { < - } " tr " _ - { u ^ { ( < { m } ) } } " bl " : " tr " _ - {\ } } : @ { < - } " uc " _ - { uc } " br " : " bl " ^ { o _ { m , 1 } } " tr " : " tr " ^ { o _ { m , 1 } } " tr " : @ { = } " tr " } \ ] ] as above we use @ xmath871 and @ xmath872 for the two maps , and @ xmath231 as the first coproduct map . the maps @ xmath873 , @ xmath874 , @ xmath875 and @ xmath876 are by definition replaced by @ xmath877 , @ xmath878 , @ xmath879 and @ xmath880 for @ xmath867 ##8 . define @ xmath845 as the coequaliser of @ xmath881 and @ xmath882 , @ xmath883 and @ xmath884 . + + convert from ( [ cor : x - in - shreik ] ) to the above .[ [ cor : - - obj ] let @ xmath16 ##2 a locally compact category , @ xmath392 a compact category , and @ xmath122 a composite @ xmath392 - accessible multitensor on @ xmath16 . then for any composite @ xmath227 with @ xmath885 we will have @ xmath886 where the composite @ xmath887 is given by the map @ xmath888 { \ opempone \ limits _ i ( x _ i , x _ i ) } = " r " [ r ] { \ opem \ limits _ i ( x _ i , x _ i ) } = " r " " r " : " m " ^ - { m ^ { ( m ) } } : " v " ^ - { ( v ^ { ( m ) } ) ^ { - 1 } } } \ ] ] is an abstract representation of the linear combination of the accessible multitensor @ xmath305 to @ xmath141 . the maps ( [ cor : lifted - shreik - 1 ] ) and ( [ co##r : vexp - 1 ] ) , in which the new object is a map of @ xmath762 to that of the category @ xmath16 . with the example @ xmath104 for @ xmath114 , we get the result of our construction when @ xmath225 and @ xmath889 . the coequaliser @ xmath890 { sx } = " r " [ x ] { q _ 1x } = " l " " l " : @ < - 1ex > " l " _ - { sx } " r " : @ < 1ex > " r " ^ - { \ mu ^ - ( \ mu ) } : " r " ^ - { q _ 1 } } \ ] ] for @ xmath16 , which was part of the first step of the original construction of @ xmath763 . in the present situation the role of @ xmath16 is played by the category @ xmath18 , the role of @ xmath225 is played by @ xmath891 , and the role of @ xmath104 plays by the categoryand @ xmath840 of @ xmath123 - algebra , and thus the role of the coequaliser ( [ q : graph - coeq ] ) is also given by the coequaliser @ xmath892 { \ limits } ( x _ i ) } = " r " [ r ] { x _ i } = " r " " r " : @ < - 1ex > " r " _ - { sx } " r " : @ < 1ex > " r " ^ - { \ phi ^ { ( \ limits ) } : " r " ^ - { x ^ { ( limits ) } } } \ ] ] = @ xmath18 . thus we are given by @ xmath893 the @ xmath16 - algebra with generators @ xmath154 and homs given by @ xmath894 . the hom of ( [ q : graph - coeq2 ] ) of @ xmath26 and @ xmath0 is the coequaliser @ xmath895 { \ ope \ phi _ q _ i } = " r " [ r ] { \ opeone \ limits_ { ( x _ i , x _ j ) } = " i " " l " : " i " _ - { \ ope \ i _ of _ i } " l " : @ < 2ex > " m " ^ - { \ i } : @ < 1ex > " m " ^ - { x ^ { ( x ) } } } \ ] ] of @ xmath16 which is part of the first part of the _ basic construction of @ xmath305 . we shall refer to ( [ 3 : mult - coeq ] ) as the _ basic coequaliser associated to the maps @ xmath840 _ of @ xmath123 - 4 . note that all coequalisers under consideration here are reflexive coequalisers , with the first definition for the basic coequalisers given by the map @ xmath896 . the first , which expresses that the coequalisers are nice , is the @ xmath897 - 1 , which we use here for the 2 ' s . the second can be found in @ xcite . [ 3 : 3by3 ] * @ xmath897- * * . * a category @ xmath898 ^ - { a _ 1 } \ ar @ < - 1ex > [ c ] _ { a _ 1 } \ ar @ < 1ex > [ c ] ^ { a _ 1 } \ ar @ < - 1ex > [ d ] _ { a _ 1 } & f \ ar [ r ] ^ - { a _ 2 } \ ar @ < 1ex > [ d ] ^ { b _ 1 } \ ar @ < - 1ex > [ d ] _ { b _ 1 } & f \ ar @ < 1ex > [ d ] ^ { b _ 2 } \ ar @ < - 1ex > [ d ] _ { b _ 1 } \ \ ar \ ar @ < 1ex > [ d ] ^ - { b _ 1 } \ ar @ < - 1ex > [ d ] _ - { a _ 1 } & d \ ar [ r ] ^ - { a _ 1 } & f \ ar [ r ] ^ { c } \ \ & & & } \ ] ] is a category such that : ( 1 ) the top right columns and the bottom - left columns are coequalisers , ( 2 ) @ [##math899 and @ xmath900 have a common section , ( 3 ) @ xmath901 and @ xmath902 have a common section , ( 3 ) @ xmath903 , ( 4 ) @ xmath904 , ( 5 ) @ xmath905 and ( 6 ) @ xmath906 ; then @ xmath907 is a coequaliser of @ xmath903 and @ xmath904 . if @ xmath908 is a functor which preserves all colimits of a certain variable , then it also preserves these colimits of each variable separately , because for a connected colimit , the cocone involving the identity arrows is a connected cocone . the most important consequence of the @ xmath897 - lemma is that the converse of this is true for all coequalisers . [ cor : 3by3 ] let @ xmath908 be a functor . if @ xmath292 preserves reflexive coequalisers in each variable , then @ xmath292 preserves all coequalisers . and this can be proved by induction . @xmath0 preserves the @ xmath897 - property in much the same way as @ xcite in ( 1 ) . the most well - known instance of this is [ cor : 3by3 - 2 ] @ xcite let @ xmath239 be a biclosed monoidal category . then the @ xmath0 - the inner product of reflexive coequalisers in @ xmath239 is called a basic coequaliser . in particular note that by preserving ( [ cor : 3by3 ] ) the multitensor @ xmath122 preserves ( the properties of ) basic coequalisers iff it preserves them for each variable separately . according to our basic coequalisers the immediate consequence of the above properties of @ xmath891 and of ( [ cor : 3by3 ] ) is [ r : 3 - simplifying - conditions ] let @ xmath122 be a basic multitensor , @ xmath16 a cocomplete category , and @ xmath840 a category of @ xmath123 - algebras . if @ x##math122 preserves the basic coequalisers associated to all the sequences of @ xmath840 , and for example @ xmath909 , @ xmath910 is the coequaliser ( [ eq : phi - coeq2 ] ) . and applying this formula and corollary ( [ cor : phi - shreik - simple ] ) gives [ cor : phi - obj - simple ] let @ xmath16 be a unique presentable cardinal , @ xmath392 a unique cardinal , @ xmath122 a unique @ xmath392 - algebra multitensor and @ xmath16 and @ xmath840 a sequence of @ xmath123 - algebras . if @ xmath122 preserves the basic coequalisers associated to all the sequences of @ xmath840 , then we can define @ xmath911 where the sequence @ xmath29 is defined as the unique sequence such that @ xmath912 . note in particular that when the sequence @ xmath840 of @ xmath123 - algebra##s is of length @ xmath332 and @ xmath273 , the only basic coequaliser is absolute . in the @ xmath332 case the basic coequaliser is absolute when @ xmath913 , and when @ xmath273 the basic coequaliser can be shown to be the complete presentation of the unit @ xmath123 - 1 . thus in these cases it follows from induction ( [ cor : lifted - obj - simple ] ) that @ xmath914 and @ xmath915 . from the explicit description of the unit in corollary ( [ cor : vexp - simple ] ) one recovers the result from our explicit descriptions , that the presentation of @ xmath305 is the identity , which is of course true by default . to complete the task of constructing a completely complete description of the multitensor @ xmath305 we now resort to induction by induction . first we assume that @ xmath122 is a local @ xmath392 - a multitensor on @ xmath16 a locally empty set , and hence an empty @xmath227 implies that @ xmath885 , so that @ xmath305 can be constructed from @ xmath916 as a function ( [ cor : - - obj ] ) . for transfinite construction of @ xmath917 we shall give the following examples : @ xmath918 and @ xmath919 whenever @ xmath847 , so that @ xmath920 { \ operpone \ limits _ { ij } \ opem \ limits _ i } = " tr " [ r ] { \ opem \ limits _ { ijk } } = " br " [ r ] { \ ope \ limits _ i \ opem \ limits _ { jk } } = " bl " " br " : " tr " ^ - { v ^ { ( r ) } q ^ { ( r ) } } : " br " ^ - { \ v ^ { ( - { + } } ) } } : @ { < - } " bl " ^ - { ( q ^ { ( r ) } ) ^ { - { } q ^ { ( r ) } } : @ { < - } " b##l " ^ - { \ ope \ , _ { \ , ^ { ( x ) } } } \ ] ] " . + + * limit step * . define @ xmath921 to be the limit and @ xmath922 as the unique map such that @ xmath923 using the universal property of the coequaliser @ xmath853 . + + * limit step * . define @ xmath924 as the unique map such that @ xmath925 using the universal property of @ xmath926 as a coequaliser . + + * limit step * . when @ xmath917 is a limit , define @ xmath927 as given by the @ xmath928 for @ xmath929 and the universal property of @ xmath930 as the colimit of the limit of the @ xmath931 for @ xmath929 . # define @ xmath932 as the unique map such that @ xmath933 using the universal property of @ xmath879 as a coequaliser . + + the way that the transfinite map is described isobtained from that for , ( [ cor : induced - and - very - explicit ] ) , by taking @ xmath934 and looking at the homs , and that by taking ( [ cor : induced - and - very - explicit ] ) and ( [ cor : vexp - explicit ] ) one has [ cor : induced - and - very - explicit ] let @ xmath16 be a totally ordered category , @ xmath392 a regular ring , @ xmath122 a sequence @ xmath392 - a multitensor on @ xmath16 and @ xmath840 a sequence of @ xmath123 - 1 . then one takes @ xmath935 as an explicit description of the substitution of @ xmath305 . if then @ xmath122 contains the natural coequalisers of all the elements of @ xmath840 , then one can take @ xmath936 as the explicit description of the substitution . suppose @ xcite @ xcite that when @ xmath222 contains eilenberg - type elements , the compositionand 2 - cells of the 2 - cell @ xmath643 in this case . given monads @ xmath645 and @ xmath937 and @ xmath222 , and then @ xmath103 and @ xmath938 for the 2 - dimensional images of their respective eilenberg - moore objects , to give a universal functor @ xmath939 , is to give @ xmath658 and @ xmath940 such that @ xmath941 . this follows directly from the universal ##ity of eilenberg - moore objects . then to give a monad 2 - cell @ xmath942 is to give @ xmath943 and @ xmath944 commuting with @ xmath728 and @ xmath945 . suppose that eilenberg - moore objects in @ xmath58 are the objects in @ xmath99 , and we shall then apply these results to the case @ xmath946 . suppose we have a universal monoidal functor @ xmath655 , that @ xmath16 and @ xmath196 are both objects , and that @xmath122 and @ xmath292 are equivalent . thus we have a universal diagram @ xmath947 { \ ca gv ^ { f _ 1 } } = " l " [ r ] { \ ca gv } = " tr " [ r ] { \ ca gw } = " tr " [ r ] { \ ca gw ^ { f _ 1 } } = " br " [ r ] { \ ca \ } = " bl " " tr " : " tr " : " tr " " bl " : " bm " : " tr " " br " : " bl " " br " : " br " " tr " : " tr " } \ ] ] of the functors of @ xmath58 . applying the previous construction to the right - hand side gives a universal morphism @ xmath948 , and similarly applying @ xmath405 to this gives the corresponding monoidal functor @ xmath949 with the same two multitensors . note that for monoidal modules and for r - modules , one says that the diagram @ xmath950 is 2 -functorial . let @ xmath951 be an @ xmath0 - multitensor . in each of the previous examples , this is the special case @ xmath952 , @ xmath953 , @ xmath954 . the first multitensor corresponding to @ xmath955 is the inner product for strict @ xmath0 - categories . it has a component of @ xmath956 for each element @ xmath957 of strict @ xmath0 - categories , and since @ xmath958 as its right adjoint preserves order , this component can be interpreted as a component @ xmath959 of @ xmath123 - categories . if in fact @ xmath123 is itself @ xmath9 and @ xmath960 , then these components of @ xmath956 are a direct map from the first inner product @ xmath305 of @ xmath0 - categories to the inner product . for instance , when @ xmath122 is the multitensor corresponding to the 3 - operad for strict categories , then @ xmath956 is the 3 -then to map from the gray - space of 2 - dimensions to the cartesian product , which we recall is also a componentwise biequivalence . similar to the first case , it is possible to unpack the map @ xmath961 to in section ( [ ssec : explicit - simple ] ) and to obtain the free 1 - cell complement of section ( [ cor : explicit - obj - simple ] ) . [ cor : explicit - explicit - 1cell ] let @ xmath655 be a free monoidal functor such that @ xmath16 and @ xmath196 are locally accessible , and @ xmath122 and @ xmath292 locally accessible . let @ xmath554 be the sequence of elements of @ xmath16 . then the assignment of @ xmath962 to the set @ xmath963 of all @ xmath123 - objects is called @ xmath964 . let @ xmath16 be a class and @ xmath965 the class of objects in @ xmath16 . denote by @ xmath966 the class of maps in @xmath16 that has the same universal property with respect to all the maps of @ xmath965 . that is to say , @ xmath48 is an @ xmath966 iff for all @ xmath967 , @ xmath965 , @ xmath542 and @ xmath968 such that the map of @ xmath969 { x } = " tr " [ x ] { i } = " br " [ x ] { f } = " bl " " i " ( : " tr " ^ - { \ alpha } : " br " ^ { i } , : " bl " _ { i } ( : " tr " _ - { \ alpha } , : @ { . > } " tr " | { \ alpha } ) ) } \ ] ] if , then there is an @ xmath970 map of such that @ xmath971 and @ xmath972 . thus @ xmath973 is an _ _ _ @ xmath965 - fibration _ . the main facts about @ xmath966 that we shall discuss in summar##ised ##it [ : : : - tf ] let @ xmath16 be a set , @ xmath965 a family of maps in @ xmath16 , @ xmath210 a set and @ xmath974 a family of maps in @ xmath16 . 1 . @ xmath966 is closed under addition and multiplication . [ tfib1 ] 2 . if @ xmath16 has extensive and each of the @ xmath975 is a trivial @ xmath965 - fibration , then @ xmath976 is also a trivial @ xmath965 - fibration . [ tfib2 ] 3 . the definition of a trivial @ xmath965 - fibration is any that is a trivial @ xmath965 - fibration . [ tfib3 ] 4 . if @ xmath16 is extensive and @ xmath977 is a trivial @ xmath965 - fibration , then each of the @ xmath975 is a trivial fibration . [ tfib4 ] 5 . if @ xmath16 isif , the codomains of f and @ xmath965 are trivial and one of the @ xmath975 is a trivial @ xmath965 - fibration , then @ xmath977 is a trivial @ xmath965 - fibration . [ tfib5 ] ( [ tfib1 ] ) - ( [ tfib3 ] ) is extensive . if @ xmath16 is trivial then the map @ xmath978 { \ coprod _ jx _ j } = " tr " [ d ] { \ coprod _ jy _ j } = " d " [ d ] { f _ j } = " bl " " br " ( : " tr " : " br " ^ { \ coprod _ jf _ j } , : " bl " _ { f _ j } : " br " ) } \ ] ] whose corresponding points are the coproduct ##s and t , and hence ( [ tfib4 ] ) follows from the high values of the @ xmath965 - fibrations . } for ( [ tfib5 ] ) such that for @ xmat##h967 ##9 @ xmath965 , the use of @ xmath109 means that the first component shown on the right @ xmath979 { \ coprod _ jx _ j } = " tr " [ r ] { \ coprod _ jy _ j } = " r " [ l ] { b } = " bl " " tr " ( : " tr " : " br " ^ { \ coprod _ jf _ j } , : " bl " _ { i } : " br " ) } } } [ [ ( r ) ] { \ xybox { \ xygraph { ! { } ; ( 0 . 0 , 1 ) : ( 1 , . 666 ) : : } { r } = " r " [ d ] { f _ j } = " tr " [ d ] { f _ j } = " r " [ l ] { b } = " bl " " tr " ( : " tr " : " r " ^ { f _ j } , : " bl " _ { i } : " br " ) } } } } \ ] ] fits into the first component as shown on the right ,allow us to induce the following transformation . let @ xmath980 be functors and @ xmath965 be a class of maps in @ xmath16 . a _ map @ xmath981 is a _ trivial @ xmath965 - fibration _ when all maps are trivial @ xmath965 - fibrations . note that since the @ xmath965 - fibrations in @ xmath16 are not stable , this reduces , in the case where @ xmath196 is a terminal object @ xmath33 and @ xmath522 is cartesian , to the map @ xmath982 of a trivial @ xmath965 - fibration . given a map @ xmath16 with a terminal object , and a class of maps @ xmath965 in @ xmath16 , we denote by @ xmath983 the class of maps in @ xmath18 and the map @ xmath984 where @ xmath985 . the proof of the following theorem is trivial . [ lem : ind - tf ] let @ xmath16 .a set with an empty point and @ xmath965 a class of maps in @ xmath16 . thus @ xmath48 is a trivial @ xmath983 - fibration iff it is surjective on , and all the hom sets are trivial @ xmath965 - fibrations . in particular , with @ xmath986 the category of open sets and @ xmath987 the equivalence class of sets , one generates a category of classes of maps @ xmath988 of open sets , acting on @ xmath0 by the inclusion @ xmath989 since @ xmath990 may be identified with @ xmath991 , and moreover one has inclusions @ xmath992 . more precisely , the category @ xmath988 consists of @ xmath145 sets : for @ xmath993 one has the inclusion @ xmath994 , where @ xmath244 * is the representable globular set , that is the ` ` @ xmath244 - set ' ' , and @ xmath99##5 . the @ xmath244 - cell with the unique @ xmath244 - cell complement . this defines @ xmath996 to be the class of the @ xmath988 s . note that by definition @ xmath997 . this is a variant of the above algorithm used to produce , for each @ xmath40 , a set @ xmath998 of maps of @ xmath999 . the set @ xmath1000 consists of the maps @ xmath1001 . @ xmath1002 is the class of bijective maps . for @ xmath40 , @ xmath1003 . the class of the maps , the set @ xmath1004 consists of all the maps of @ xmath1005 together with the unique complement @ xmath1006 . for @ xmath1007 . an @ xmath0 - operad @ xmath1008 is _ contractible _ when it is a set @ xmath998 - fibration . an @ xmath0 - multitensor @ xmath1009 is _ contractible _ when itis a trivial @ xmath998 - fibration . by the preceeding of definitions , an @ xmath145 - operad @ xmath1010 over @ xmath24 is contractible iff the hom functions of @ xmath1011 are trivial @ xmath1004 - fibrations . then one would say that @ xmath145 - operad over @ xmath24 is contractible iff its dual @ xmath0 - multitensor is contractible . this definition has given a simple explanation . consider the 2 - functoriality of @ xmath22 ##8 in section ( [ ssec : lifting - of - functor ] ) and that of the lifting described in section ( [ ssec : functoriality - lifting ] ) . [ ref : contractible ] let @ xmath655 define a - monoidal functor of 2 - monoidal functions , and @ xmath965 ##8 sets of maps in @ xmath196 . suppose that @ xmath196 is extensive , @ xmath658 has coproducts and the codomains of maps in@ xmath965 is trivial . then the following conditions are equivalent * @ xmath653 is a trivial @ xmath965 - fibration . * @ xmath1012 is a trivial @ xmath983 - fibration . and , when in fact @ xmath16 and @ xmath196 are locally connected and @ xmath122 and @ xmath292 are connected , these conditions are also equivalent to * the components of @ xmath1013 * and @ xmath1014 of the @ xmath123 - graph are trivial @ xmath965 - fibrations . for * @ xmath127 the identity @ xmath1015 is the identity matrix , and for @ xmath261 , the corresponding hom matrix is defined as the product of @ xmath1016 and the identity matrix that witnesses the fact that @ xmath658 ##3 coproducts . in particular note that for the sequence @ xmath112 of objects of @ xmath16 , considered as @ xmath16 - graph in the usual sense , one has @ xmath10##17 . @ xmath1018 follows from definition ( [ le : ind - tf ] ) and ( [ le : ind - tf ] ) . @ xmath1019 follows directly from definition ( [ cor : ind - basic - 1cell ] ) . [ cor : contractible ] . @ xmath1007 , @ xmath1010 be the @ xmath1020 - operad . @ xmath24 and @ xmath951 be the trivial @ xmath0 - multitensor . tfsae : theorem . @ xmath1010 is contractible . @ xmath951 is contractible . the elements of @ xmath1021 of type ( [ ssec : functoriality - preserving ] ) ( [ le : mult - > set ] ) are trivial @ xmath998 - fibrations of @ xmath0 - - sets , when the @ xmath840 are not trivial @ xmath0 - sets . by definition we can also show that the codomains of the elements of are of the following : @ xmath988, @ xmath998 , @ xmath996 are defined such that , ( [ ex : contractible ] ) cannot be false . [ ex : non - contractible ] applying this same result to the gray - operad @ xmath23 for gray - categories , the contractibility of @ xmath23 is a consequence of the fact that the canonical reduced - functors from the sphere to the cartesian tensor ##s are object - to - object biequivalences . in the discussion from section ( [ ssec : tci ] ) , we will explain how the operads which " trimble @ xmath0 - categories " are contractible . this result appears in @ xcite ##s ##1 ( 1 . 1 ) and describes trimble @ xmath0 - categories as weak @ xmath0 - categories in the batanin category . let us denote by @ xmath1022 the set of maps @ xmath1023 of the @ xmath0 - category into the @ xmath0 disk for @ xmath40 . as we remarked in section ( [ ssec : enriched - category ] ) these can only be obtained by first applying the reduced - fun##ctor @ xmath126 to the projection of the tangent space into the point . as we see next in ( [ ssec : tci ] ) , a key ingredient of the trimble construction is a version of the open topological operad which acts on the line segment of the point . a useful property of this operad is that it is contractible . topological operad @ xmath1 is contractible when for all @ xmath0 the linear map @ xmath1024 is in @ xmath1025 . this is equivalent to saying that the topological multitensor of @ xmath1026 is a trivial @ xmath1022 - fibration . a useful fact about the class trivial @ xmath1022 - fibrations is that it gets associated with the class of path - spaces in the sense of [ f : tf - path - spaces ] if @ xmath48 is a trivial @ xmath1022 - fibration , so is @ xmath50 for all @ xmath1027 . to give a commutative definition as from the left , @ xmath1028 { f ( a , b ) } = " tr " [ x] { { ( fa , fb ) } = " br " [ l ] { s ^ { } = " bl " " tr " ( : " tr " : " br " , : " bl " : " br " ) } } } & & & { \ xybox { \ xygraph { ! { } ; ( 2 , 3 ) : ( 4 , . 5 ) : : } { s ^ { } = " tr " [ l ] { ( f , a , b ) } = " tr " [ l ] { ( fa , fa , fb ) } = " tr " [ l ] { s ^ { } { + } } } } = " bl " " br " ( : " tr " : " br " , : " bl " : " br " ) } } } \ { { \ } \ ] ] is the same as having the same diagonal form @ xmath37 ##6 on the right in the previous figure , namely @ xmath43 . the figure on the right has a diagonal form @ xmath1029 since @ xmath76 admits a diagonal @ xmath1022 - fibration , and , indo the same on the left . we shall write @ xmath1030 for the identity functor for trivial @ xmath0 . the relationship between the fibrations of spaces and of open sets is defined as [ prop : pres - tf ] if @ xmath48 is a trivial @ xmath1022 - fibration then @ xmath1031 is a trivial @ xmath1032 - fibration . we proceed by induction on @ xmath0 . then the right choice of with respect to the inclusions @ xmath1033 ensures that @ xmath76 surjective and injective on path spaces , and thus is equivalent to @ xmath1034 . for the next example we say that @ xmath1035 maps trivial @ xmath1022 - fibrations to trivial @ xmath998 - fibrations and so that @ xmath76 is a trivial @ xmath1022 - fibration . then these are precisely the relations it induces on path spaces by induction ( [ prop : tf - p - 1 ] ) . starting from the above definition of@ xmath1036 recalled in section ( [ ssec : tci ] ) , we proved @ xmath1037 and that @ xmath1038 is a morphism of @ xmath11 - finite groups which is surjective on sets ( as stated already in the @ xmath332 section ) and whose hom operations are trivial @ xmath998 - fibrations by sets . thus the proof follows in section ( [ prop : ind - tf ] ) . in section ( [ ssec : tci ] ) we proved @ xmath760 - the category of sets @ xmath0 - operad , a straight - forward construction of two abstract results propositions ( [ prop : ind - trimble ] ) and ( [ prop : operad - trimble ] ) . we also have a third abstract proof related to contractibility . [ prop : tf - ind ] - the properties and properties of sets ( [ prop : operad - trimble ] ) : @ xmath16 is a lextensive algebra , @ xmath101 a relation and coproduct - structure , @ xmat##h16 , @ xmath733 a @ xmath101 - operad and @ xmath726 a non - symmetric operad of @ xmath734 . suppose further that the class @ xmath965 of copies of @ xmath16 is trivial , and that the non - symmetric operad @ xmath1039 and the @ xmath101 - operad @ xmath653 are trivial @ xmath965 fibrations . then the @ xmath736 - operad @ xmath1040 of copies ( [ prop : operad - trimble ] ) is a trivial @ xmath1041 - fibration . by definition this class morphism can be written as the class @ xmath1042 . since @ xmath653 is a trivial @ xmath965 - fibration so is @ xmath1043 by proposition ( [ lem : p - tf ] ) , and since @ xmath1044 is a trivial @ xmath1041 - fibration by proposition ( [ prop : contractible ] ) . since @ xmath542 is a trivial @xmath965 - fibration , @ xmath1045 is a full @ xmath1041 - fibration again by proposition ( [ prop : contractible ] ) , and so the proof follows since these fibrations compose . starting with the contractible - operad @ xmath1 which acts on topological sets , proposition ( [ prop : pres - tf ] ) states that @ xmath1046 must be a contractible non - trivial operad of @ xmath0 - - sets . this proposition ( [ prop : tf - formal ] ) can be extended to give , by acting on @ xmath0 , the contractibility of the @ xmath0 - operad of trimble @ xmath0 - sets . we would like to acknowledge peter berger , richard schmidt , andr joyal , steve lack , peter kock , jean - claude loday , jan - andr mellis , david wilson and dima tamarkin for interesting contributions on the subject of this paper . we would also like to thank the centre de recerca matemtica in barcelona for the technical support and the discussions provided during the thematic meeting 2007 - 2008 on homotopy .in geometry and topology . the first author would like to acknowledge the financial support on all stages of this project of the scott russell johnson memorial foundation , the national research council ( grant no . dp0558372 ) and luniversit . org . the second author would like to acknowledge the support of the anr grant program . the third author would like to acknowledge the laboratory pps ( preuves et systmes ) in paris , the max planck institute in bonn and the institut des hautes tudes scientifique de paris - yvette for the excellent working environment he enjoyed during this period , as well as macquarie university for the support he received in august of 2008 . 10 j . adamek , f . borceux , s . barr , and j . rosicky . a classification of finite categories . , 3 : 730 , 2002 . j . adamek and j . rosicky . . number 189 in london mathematical soc . lecture notes . cambridge university press , 1994 . j . barr and j . wells . . number 12 in tac press . theory and applications of categories , 2005 . a . batanin . monoidal globular categories : a working environment for the study of categories @ xmat##h0 - r . , 136 : 39103 , 1998 . m . batanin . symmetrisation of @ xmath0 - operads and compactification of topological vector spaces . , 211 : 684725 , 2007 . m . batanin , c . berger , and hans - j . weber . operads and the stabilisation theorem . in 2007 . m . batanin and m . berger . structure of @ operads and related categories . to use articles describing categorical structures see at http : / / www . pps . org . uk / articles / , 2008 . m . berger and j . moerdijk . a homotopy theory for operads . , 42 : 805831 , 2003 . g . betti , g . carboni , j . rossi , and a . j . r . jones . math . , 29 : 109127 , 1983 . e . cheng . geometric group theory . arxiv : 0710 . 1120v1 , 2007 . e . cheng . higher operadic structures of @ xmath0 - categories . arxiv : 0809 . 2070v2 , 2008 . y . li. a tensor product for vector spaces . , 10 : 1269 , 1999 . a . dubuc . . number 220 in slnm . springer verlag , 1970 . a . gordon and a . ulmer . . number 221 in slnm . springer verlag , 1971 . a . gordon , p . j . kelly , and r . street . . number 117 in topology . ams , 1995 . johnstone . . academic press new york , 1977 . a . joyal and r . street . . tensor products . , 102 ( 1 ) : 2078 , 1993 . kelly . a model theory of transfinite categories for lie algebras , including monoids , colimits , coherent sets , and so on . , springer , 1980 . kelly and s . lack . is locally present is locally present if @ xmath16 is empty . , 10 : 555575 , 2001 . s . lack . on the monadicity of finitary monads . , 10 : 6573 , 1999 . s . lack . codescent ##ers and categories . , 21 : 223241 , 2002 . s . lack . a quillen model theory for k - categories . , 21 : 171205 , 2002 . s .leinster and j . murray . the formal theory of modules . . , 10 : 243265 , 2002 . j . leinster . . lecture paper paper . american mathematical society , 2003 . m . makkai and m . h . , volume 104 of _ contemp . _ ams , 1989 . m . markl and m . shnider . associahedra , in @ xmath196 - algebra and applications of @ xmath25 - algebra . , 358 : 23532372 , 2006 no . 1 . a . saneblidze and m . umble . studies on the permutahedra , multiplihedra and associahedra . , 81 : 363411 , 2004 no . 1 . m . schwede and r . m . jones and applications in monoidal linear algebra . , ( springer ) 81 : 491511 , 2000 no . 2 . r . street . the formal theory of modules . 81 : 149168 , 1972 . r . street . the role of the batanin in monoidal linear cluster . , 230 : 99116 , 1998 . s . tamsamani . " the structures of @ mono##math0 - categorie et multi - groupoide multi - strictes via des structures multi - simpliciaux . , 13 : 5199 , 1999 . m . weber . free morphisms , free representations , and the free monads . , 13 : 191234 , 2004 . m . weber . free 2 - functors and free right adjoints . , 14 : 665732 , 2007 . m . weber . yoneda arising from r - modules . , 14 : 259323 , 2007 . m . weber . the structures of free operad algebras . arxiv : 0909 . 4722 , 2009 . in these sections we find some of the transfinite results in category theory that we call this section ( [ see : lift - mult ] ) . an important reference for these results is @ xcite . but due to the general nature of this material , and our need for more details when we come to making our results explicit , we feel that it is necessary to give a more thorough overview of this material . let @ xmath101 be a set and a set @ xmath16 that has filtered colimits and coe##qualisers and functions @ xmath1047 { ( r , c ) } = " c " " r " : @ < - 1ex > " r " _ - { g } " l " : @ < 1ex > " l " ^ - { g } } \ ] ] = morphisms with @ xmath102 . we shall also construct morphisms @ xmath1048 and with @ xmath1049 by transfinite operations with @ xmath0 , so that for @ xmath0 alone , @ xmath1050 is the coequaliser of @ xmath76 and @ xmath345 and @ xmath102 when @ xmath101 is small . the main steps of this algorithm are shown in the following table . @ xmath1051 { t ^ 2b } = " t " [ r ] { t ^ 2q _ 1 } = " t0 " [ r ] { t ^ 2q _ 2 } = " t1 " [ r ] { t ^ 2q _ 3 } = " t2 " [ r ] { t ^ 2q _ 4 } = " t3 " [ r ] { .. . } = " t4 " " ba " [ r ] { a } = " ma " [ r ] { b } = " ba " [ r ] { tq _ 1 } = " m0 " [ r ] { tq _ 2 } = " m1 " [ r ] { tq _ 3 } = " ma " [ r ] { tq _ 4 } = " ma " [ r ] { . . . } = " m4 " " ba " [ r ] { a } = " ba " [ r ] { b } = " mb " [ r ] { q _ 1 } = " b0 " [ r ] { q _ 2 } = " b1 " [ r ] { q _ 3 } = " b2 " [ r ] { q _ 4 } = " b3 " [ r ] { . . . } = " b4 " " ta " : @ < - 1ex > " tb " _ - { t ^ 2 ##f } " ta " : @ < 1ex > " tb " ^ - { t ^ 2f } : " t0 " ^ - { t ^ 2q _ 0 } : " t1 " ^ - { t ^ 2q _ 0 } : " t2 "^ - { t ^ 2q _ 3 } : " t3 " ^ - { t ^ 2q _ 3 } : " t4 " " ma " : @ < - 1ex > " mb " _ - { tg } " ma " : @ < 1ex > " mb " ^ - { tf } : " m0 " ^ - { tq _ 0 } : " m1 " ^ - { tq _ 1 } : " m2 " ^ - { tq _ 1 } : " m2 " ^ - { tq _ 0 } : " m4 " " bb " : @ < - 1ex > " bb " _ - { f } " b " : @ < 1ex > " b " ^ - { f } : " b0 " _ - { tq _ 0 } : " b1 " _ - { q _ 1 } : " b2 " _ - { q _ 2 } : " b3 " _ - { q _ 1 } : " b4 " " ba " : @ < - 1ex > " ba " _ - { \ n } : @ < - 1ex > " ba " _ - { b } " ma " : @ < 1ex > " ma " ^ - { b } :@ < 1ex > @ { < - } " ba " ^ - { \ eta } " bb " : @ < - 1ex > " bb " _ - { \ eta } : @ < - 1ex > " bb " _ - { - } " tb " : @ < 1ex > " ba " ^ - { - } : @ < 1ex > @ { < - } " tb " ^ - { \ eta } " t0 " : " m0 " ^ - { \ eta } : @ { < - } " b0 " ^ - { \ eta } " t1 " : " a2 " ^ - { \ eta } : @ { < - } " b1 " ^ - { \ eta } " t2 " : " b1 " ^ - { \ eta } : @ { < - } " b2 " ^ - { \ eta } " t3 " : " b1 " ^ - { \ eta } : @ { < - } " b3 " ^ - { \ eta } " mb " : " m0 " ^ - { tv _ 0 } " mb " : " b0 " ^ - { tv _ 1 } " t0 " : " b1 " ^ - { tv _ 0 } "m0 " : " b1 " ^ - { v _ 1 } " t1 " : " a2 " ^ - { v _ 1 } " b1 " : " b2 " ^ - { v _ 1 } " t2 " : " b1 " ^ - { v _ 2 } " b1 " : " b3 " ^ - { tv _ 1 } } \ ] ] * logical step * . define @ xmath1052 to be the identity , @ xmath1053 to be the coequaliser of @ xmath76 and @ xmath345 , @ xmath1054 and @ xmath1055 . note also that @ xmath1056 . + + * logical step * . assuming that @ xmath1057 , @ xmath1058 and @ xmath1059 are identical , we define @ xmath1060 to be the coequaliser of @ xmath1061 and @ xmath1062 , @ xmath1063 and @ xmath1064 . we can also assume that @ xmath1065 , and that @ xmath1066 could very well have been used as the coe##iser of @ xmath1067 and @ xmath1068 . + + * * * * . define @ xmath1069 as the colimit of the function defined by the sequence @ xmath1070 and morphisms @ xmath1071 for @ xmath1072 , and @ xmath1050 for the limit of the inner cocone of @ xmath1073 . @ xmath1074 { \ colim _ { m { < } } } tq _ n } = " r " [ l ] { \ colim _ { m { < } } } q _ n } = " tr " [ l ] { q _ n } = " d " [ l ] { tq _ m } = " d " [ l ] { d ^ 2q _ n } = " bl " " tr " : @ < 1ex > " tr " ^ - { \ q _ { < { n } } } : @ < 1ex > " tr " ^ - { q _ { < { n } } } " tr " : @ < - 1ex > " tr " _ - { ( r ) _{ < { n } } } : @ < - 1ex > @ { < - } " tr " _ - { \ eta _ { < { n } } } " bl " : " br " _ - { \ mu } : @ { < - } " tr " _ - { \ mu } " br " : " bl " _ { o _ { n , 2 } } " br " : " br " ^ { o _ { n , 2 } } " tr " : @ { = } " tr " } \ ] ] we write @ xmath1075 and @ xmath1076 for the obstruction ##s = the degree to which @ xmath101 and @ xmath1077 are the colimit ##s @ xmath1069 . we write @ xmath1078 , @ xmath1079 , @ xmath1080 and @ xmath1081 for the obstruction defined by the @ xmath1082 , @ xmath1083 , @ xmath1084 and @ xmath1085 for @ xmath1072 equations . the term @ xmath1086follow on from the above . consider @ xmath1057 as the coequaliser of @ xmath1087 and @ xmath1088 , @ xmath1089 and @ xmath1090 . + + * + * . we say that the function _ stabilises _ @ xmath0 _ when @ xmath1058 and @ xmath1091 are limits . in the case @ xmath332 we can easily see that this is equivalent to just @ xmath1053 being an extension , which is the same as saying that @ xmath1092 . [ non - stable ] if @ xmath0 is a - ordinal and @ xmath1075 and @ xmath1076 are limits , then the sequence terminates at @ xmath0 . let us use @ xmath1093 , @ xmath1094 for the colimit cocones . then we call the sequence @ xmath1074 { \ colim _ { t { < } } } tq _ { } = " tm " [ t ] { \colim _ { { { < } } } tq _ m } = " tr " [ d ] { tq _ m } = " br " [ d ] { tq _ n } = " br " [ d ] { t ^ 2q _ 1 } = " bl " [ d ] { t ^ 2q _ { n { + } 1 } } = " bb " [ d ] { tq _ { n { + } 1 } } = " bbm " [ d ] { q _ { n { + } 1 } } = " bbr " [ d ] { q _ { n { + } 1 } } = " bbbr " " tv " : @ < 1ex > " tv " ^ - { \ mu _ { < { n } } } : @ < 1ex > " tr " ^ - { tv _ { < { n } } } " tv " : @ < - 1ex > " tv " _ - { ( tv ) _ { < { n } } } : @ < - 1ex > @ { < - } " tr " _ - { \ mu _ { < { n } } } " bl " : " tv " _ - { \1 } : @ { < - } " bb " _ - { \ eta } " bb " : " bbm " _ - { \ eta } : @ { < - } " bbr " _ - { \ eta } " bb " : " bl " _ { o _ { n , 1 } } " br " : " tr " ^ { o _ { n , 1 } } " tr " : @ { = } " br " " bl " : " br " _ { q ^ 2q _ n } " bb " : " bbm " ^ { tq _ n } " br " : " bbr " ^ { q _ n } : " bbbr " ^ { q _ { n { + } 1 } } " bl " : " bbm " _ - { q _ n } : " bbbr " _ - { q _ { v { + } 1 } } " br " : " bbr " _ - { q _ n } } \ ] ] and in fact one uses @ xmath1095 to express this and that from the use of @ xmath1071 and @ xmath1058 and the naturality of the@ xmath1096 in @ xmath227 , one can show easily that @ xmath1097 , and from this last definition and all the definitions it is easy to show that @ xmath1098 for all @ xmath1072 from which ( [ q : succ - limit ] ) follows . suppose that @ xmath1075 and @ xmath1076 are known . we define @ xmath1099 as the linear map such that @ xmath1100 . it follows easily that @ xmath1101 . from ( [ q : succ - limit ] ) and the invertibility of @ xmath1076 it follows easily that @ xmath1102 and so there is a sequence @ xmath1103 such that @ xmath1104 , from which it follows easily that @ xmath1105 . [ - - - ] if the sequence starts at @ xmath0 ##5 and stabilises at at @ xmath1106 , and so one has an exchange of sequences between the original sequence @ xmath1107 and the sequenceexamples : @ xmath1108 { . . . } = " p2 " [ r ] { q _ n } = " p3 " [ r ] { q _ n } = " p4 " [ r ] { . . . } = " p5 " " p1 " : " p2 " ^ - { p _ n } : " p3 " : " p4 " ^ - { \ id } : " p5 " ^ - { \ id } } \ ] ] we show for @ xmath1106 that @ xmath1071 and @ xmath1109 are identities , and prove the empty sequence @ xmath1110 of the component sets of x , by transfinite induction at @ xmath227 . we define @ xmath1111 to prove the identity when @ xmath1112 . in the second step @ xmath1113 , @ xmath1071 and @ xmath1109 are proved by induction and we define @ xmath1114 . in the third step when @ xmath1106 is a non - empty sequence , wemust assume that @ xmath1115 is an integer and define @ xmath1116 . the starting point is that @ xmath1117 because with this equation in mind one defines @ xmath1118 as the smallest morphism to @ xmath1119 by the universal property of @ xmath1120 , and so it is routine to prove that @ xmath1121 . so for the first step it is to prove ( [ q : key ] ) . thus we define @ xmath1122 and then ( [ p : key ] ) follows since @ xmath1071 is an integer . in the case where @ xmath227 is a real number , we have that at @ xmath1123 and whenever @ xmath1124 by the induction hypothesis . then the colimit defining @ xmath1070 is preserved ( ie preserved by the functors ) since the defining sequence from the position @ xmath0 onwards consists only of 0 . thus @ xmath1071 and @ xmath1109 are preserved by lemma ( [ induction - hypothesis ] ) . the ., the previously defined @ xmath1125 s is a cocone of the corresponding generator of @ xmath1070 with the @ xmath1069 , if one associates the current @ xmath1111 ##25 with the previous @ xmath1125 s and thus @ xmath1126 . [ coeq - when - if ] if the algorithm terminates in @ xmath0 , @ xmath1127 is the @ xmath101 - generator and @ xmath1128 is the coequaliser of @ xmath76 and @ xmath345 and @ xmath102 . the first law for @ xmath1127 is derived from the construction of @ xmath1058 and the second law from the commutativity of the elements of the diagram on the left @ xmath1129 { tq _ n } = " tr " [ d ] { q _ { n { + } 1 } } = " br " [ l ] { tq _ n } = " tr " [ l ] { q _ { n { + } 1 } } = " br " [ d ] { tq _ n }= " bl " [ 1 ] { tq _ { n { + } 1 } } = " ml " " ml " [ u ( . 75 ) ] { q _ { n { + } 1 } } = " ml " [ u ( . 75 ) ] { tq _ { n { + } 1 } } = " ml " " ml " : " tr " ^ - { \ n } : " br " ^ - { tq _ n } : " mm " ^ - { q _ n ^ { - 1 } } : @ { < - } " l " ^ - { q _ n ^ { - 1 } } : @ { < - } " bl " ^ - { q _ n } : @ { < - } " l " ^ - { tq _ n ^ { - 1 } } : @ { < - } " ml " ^ - { q _ n } " tr " : " l " ^ - { tq _ n } : " ml " _ - { tq _ { n { + } 1 } } : " br " _ - { tq _ { n { + } 2 } ^ { - 1 } } " ml " : " ml " _ - { q_ { n { + } 1 } } : " l " ^ - { q _ { n { + } 1 } ^ { - 1 } } } } } [ r ( 5 ) . ( . 1 ) ] { \ xybox { \ xygraph { { 1 } = " tb " [ r ( 5 ) ] { tq _ n } = " tr " [ d ] { q _ { n { + } 1 } } = " mr " [ d ] { v _ n } = " br " [ r ( 5 ) ] { l } = " bl " " l " : " tr " ^ - { tq _ { { < } n } } : " tr " ^ - { q _ n } : " br " ^ - { q _ n ^ { - 1 } } : @ { < - } " bl " ^ - { q _ { { < } 1 } } ( : @ { < - } " mr " ^ - { 1 } , : " tr " ^ - { q _ { { < } } { + } 1 } } ) " l " : @ { } " l " | { ( 1 ) } ) } } } } \ ] ] theall of which already exist . the commutativity of the second diagram on the right shows @ xmath1130 as an @ xmath101 - 1 map , and this follows directly from the commutativity of the diagram of ( i ) . the equational part of ( i ) is @ xmath1131 and we then proceed to prove this by transfinite construction of @ xmath0 . the statement @ xmath332 is from the statement @ xmath1055 . the other part comes out of the statement @ xmath1132 and since @ xmath1133 . the case where @ xmath0 is sub - zero demonstrates the commutativity of the statement of @ xmath1134 { b } = " b " [ r ( 3 ) ] { q _ { - { + } : } } = " qnp1 " , [ dr ] { b } = " tb2 " [ r ( 3 ) ] { \ , \ , tq _ n } = " ctq " [ dr ] { tq _ n } = " tqn " ) " b " ( : " b " ^ - { + } : " b##np1 " ^ - { q _ { { < } } { + } } } } , : " tb2 " _ - { \ col } | - { } = " mla " : @ / _ { 1pc } / " ctq " _ - { o ' _ { 0 , 1 } } | - { } = " mma " : " tqn " _ - { q _ { 0 , 1 } } | - { } = " mra " : " qnp1 " _ - { v _ n } " mma " : @ { } " ctq " | * { mma } = " mma " ) " mma " ( : @ { } " mma " | ( . 5 ) * { v _ n } = " ptl " , : @ { } " qnp1 " | ( . 6 ) * { tq _ m } = " ptr " , : @ { } " mra " | ( . 5 ) * { \ col \ , tq _ m } = " pmr " , : @ { } " mma " | ( . 6 ) * { \ col \ , b ^ 2q _ n } = " mma " , : @ { } " mla " | ( . 6) * { q ^ 2b } = " pml " ) " tb " : " ptl " _ ( . 6 ) { tq _ { { < } n } } : " ptr " ^ - { \ eta } : " qnp1 " ^ ( . 6 ) { q _ 1 } " tv " : " pml " ^ - { \ eta } : " tv " ^ - { tv } ( : " ptr " ^ ( . 6 ) { tq _ { { < } n } } , : " pmr " ^ - { q ' _ { 0 , n } } ) " pml " : " tv " ^ - { q ' ' _ { 0 , n } } : " pmr " ^ - { ( q ) _ { { < } n } } : " ptr " ^ - { q _ { 0 , n } } " pml " : " tb2 " ^ - { \ eta } " tb " : " ctq " ^ - { \ eta _ { { < } n } } } \ ] ] the two of which can overlap . an @ xmath1130 is called an @ xmath101 - # ##s . to show that@ xmath1130 is the coequaliser of @ xmath1135 such that @ xmath1136 . for each example @ xmath227 we construct @ xmath1137 such that @ xmath1138 for each @ xmath227 by transfinite construction of @ xmath227 . when @ xmath1073 we construct @ xmath1139 and @ xmath1140 as examples such that @ xmath1141 . the problem @ xmath1142 is not solved . for the general case we show that the commutativity of @ xmath1143 { tq _ n } = " dr " [ l ( 2 ) ] { l } = " tr " [ dr ] { c } = " cl " [ l ] { c } = " cl " [ l ( 2 ) ] { tq _ { t { + } } } } = " bl " [ l ] { c ^ 2c } = " l " " tr " : " tr " ^ - { \ n } : " tr " ^ - { tq _ n } : " tr " ^ - { l } : @{ < - } " b " ^ - { t } : @ { < - } " bl " ^ - { t _ { - { + } } } } : @ { < - } " l " ^ - { th _ n } " l " ( : @ { < - } " l " _ - { t ^ 2h _ n } , : " tr " ^ - { \ - } , : " t " ^ - { t } ) } \ ] ] and the universal property of @ xmath1144 that there is a unique @ xmath1145 such that @ xmath1146 . when @ xmath227 is a universal property it follows from all the above that @ xmath1147 for all @ xmath1148 , and all @ xmath1149 and that by the universal property of @ xmath1144 there is a unique @ xmath1150 such that @ xmath1138 . the pair of @ xmath1151 ##s thus , is also a such that @ xmath1139 and @ xmath1138 . it follows also that @ xmath1152 = { @ xmath101 -and ##s , and that @ xmath1153 . then for @ xmath1154 and that @ xmath1155 , one writes @ xmath1156 and @ xmath1157 , and it follows then that @ xmath1158 , @ xmath1159 and @ xmath1160 are @ xmath1161 and that @ xmath1162 . from these results we get the fundamental results in the theory of coequalisers of categories of large cardinals . [ see : coeq - talg ] let @ xmath16 be a category with both colimits and coequalisers , @ xmath101 is a regular in @ xmath16 and @ xmath1047 { ( r , c ) } = " r " " l " : @ < - 1ex > " l " _ - { f } " r " : @ < 1ex > " l " ^ - { f } } \ ] ] are morphisms on @ xmath102 . if @ xmath101 is @ xmath392 - then for any x in @ xmath392 ,then @ xmath1050 as defined above preserves the coequaliser of @ xmath76 and @ xmath345 and @ xmath102 for any set @ xmath0 such that @ xmath1163 . consider the set such that @ xmath0 ##3 is not a limit of , and @ xmath101 and @ xmath1077 by definition preserve the defining colimit of @ xmath1069 . thus by lemmas ( [ stable - limit ] ) and ( [ coeq - when - stable ] ) the theorem holds in this case , and in particular by definition ( [ when - stable ] ) and ( [ coeq - when - stable ] ) . finally we have the well - known special case when the above transfinite construction is not simple , that should be worth noting . [ definition : in - coeq ] let @ xmath16 be a category with defining colimits and coequalisers , @ xmath101 be a category with @ xmath16 and @ xmath1047 { ( b , a ) } = " b " " a " :@ < - 1ex > " g " _ - { g } " f " : @ < 1ex > " f " ^ - { f } } \ ] ] are morphisms in @ xmath102 . if @ xmath101 and @ xmath1077 is the coequaliser of @ xmath76 and @ xmath345 in @ xmath16 , then the sequence @ xmath1164 is in @ xmath33 . denote by @ xmath1165 the smallest sequence such that @ xmath1166 , @ xmath1167 is the coequaliser of @ xmath76 and @ xmath345 in @ xmath102 . refer to the section , @ xmath16 , that describes the first few steps of the construction of @ xmath1164 . since @ xmath1053 and @ xmath1168 are epimorphisms , the @ xmath101 - # ##s for @ xmath1169 differ from those for @ xmath1170 , and @ xmath1053 is called @ xmath10##1 - # ##s . n . since @ xmath287 is the coequaliser on @ xmath16 of @ xmath1171 and @ xmath1172 , and since @ xmath1168 is an epimorphism it is also the coequaliser of @ xmath1173 and @ xmath1174 , but so is @ xmath1066 , and thus @ xmath1175 is the natural isomorphism between them . to see that @ xmath1176 is locally invertible , perform the same construction with the map @ xmath1177 in place of @ xmath1053 . the proof then follows the lemma ( [ coeq - when - if ] ) . suppose that @ xmath16 is locally stable , @ xmath1178 and @ xmath1179 are stable on @ xmath16 , and @ xmath1180 ##4 - morphism of modules . then one has the obvious module functor @ xmath1181 and when @ xmath225 is stable , @ xmath804 is a self adjo##int which we write in @ xmath763 . the main result provided for the existence of @ xmath763 , and which in turn gives a proof for it in terms of coequalisers in @ xmath734 , is the dubuc adjoint operator algebra @ xcite : for the algebra @ xmath1182 of @ xmath114 , one has the following coequaliser @ xmath1183 { ( sx , \ eta ^ m _ x ) } = " r " [ l ] { \ phi _ ! ( x , x ) } = " r " " l " : @ < 2ex > " r " ^ - { \ eta ^ s _ xs ( \ mu _ x ) } : " l " | - { [ \ eta ^ m _ x } : @ < - 2ex > " r " _ - { sx } : " r " ^ - { s _ { ( x , x ) } } } \ ] ] of @ xmath734 . using this together with the ( [ category : coequalisers ] ) an alternative proof of the algebra @ xmath782 is given as follows .we define morphisms @ xmath1184 @ xmath1185 along with @ xmath1186 using transfinite operations : @ xmath0 . + + * limit step * . define @ xmath1052 to be the identity , @ xmath1053 to be the coequaliser of @ xmath1187 and @ xmath1188 , @ xmath1054 and @ xmath1055 . note also that @ xmath1189 . + + * limit step * . now that @ xmath1057 , @ xmath1058 and @ xmath1059 are integers , we define @ xmath1060 to be the coequaliser of @ xmath1190 and @ xmath1191 , @ xmath1192 and @ xmath1064 . + + * limit step * . define @ xmath1193 as the colimit of the identity given by the identity @ xmath1194 and morphisms @ xmath1071 for @ xmath1072 , and @ xmath1050 for the identity of the identitycocone . @ xmath1073 . @ xmath1195 { \ colim _ { m { < } n } sq _ n } = " r " [ r ] { \ colim _ { m { < } } } sq _ n } = " tr " [ r ] { sq _ n } = " l " [ l ] { sq _ n } = " br " [ l ] { l ^ 2q _ n } = " bl " " tr " : @ < 1ex > " tr " ^ - { \ eta _ { < { n } } } : @ < 1ex > " tr " ^ - { v _ { < { n } } } " tr " : @ < - 1ex > " tr " _ - { ( sv ) _ { < { n } } } : @ < - 1ex > @ { < - } " tr " _ - { \ eta _ { < { n } } } " bl " : " br " _ - { \ mu } : @ { < - } " br " _ - { \ mu } " b " : " bl " _ { v _ { 1 , 2 }} " b " : " b " ^ { { _ { b , m } } " tr " : @ { = } " tr " } \ ] ] we write @ xmath1075 and @ xmath1076 for the normal map to the degree to which @ xmath225 and @ xmath889 are the colimit of @ xmath1193 . we write @ xmath1196 , @ xmath1197 , @ xmath1080 and @ xmath1198 for the obstruction defined by the @ xmath1199 , @ xmath1200 , @ xmath1084 and @ xmath1201 for @ xmath1072 maps . define @ xmath1057 as the coequaliser of @ xmath1087 and @ xmath1202 , @ xmath1203 and @ xmath1090 . + + . apply ( [ co : coeq - talg ] ) to the general case . [ cor : pseudo - pseudo - shreik ] note that @ xmath16 is a fully normal map ,@ xmath114 and @ xmath225 are contained in @ xmath16 , @ xmath1180 is a morphism of rings , and @ xmath104 is an @ xmath114 - algebra . if then @ xmath225 is @ xmath392 - accessible for any large cardinal @ xmath392 , and for any cardinal @ xmath0 such that @ xmath1163 we can define @ xmath1204 as the orthogonal complement of @ xmath1205 and the corresponding coequalising map is @ xmath734 , from the dubuc adjoint ##ness inequality . [ cor : phi - shreik - theorem ] states that by the rules of induction ( [ cor : explicit - phi - shreik ] ) that @ xmath225 and @ xmath889 are the coequaliser of @ xmath1206 and @ xmath1188 in @ xmath16 . then the map @ xmath1164 terminates at @ xmath33 , and at @ xmat##h1207 for the identity map given that @ xmath1208 , we can use @ xmath1209 as an alternative representation of @ xmath1205 and the other coequalising map , @ xmath734 . this is a common situation in which : ( [ cor : non - shreik - invariant ] ) arises . since @ xmath1210 we have @ xmath1211 , but another way to see this situation as true is to extend the theorem to the case where @ xmath104 is a free @ xmath114 - module , not @ xmath1212 , for in this case one sees the following result : @ xmath1213 { smz } = " r " [ r ] { sz } = " m " " l " : @ < 1 . 5ex > " m " ^ - { ( \ mu ^ m ) ( @ { \ mu } m ) } " r " : @ < - 1 . 5ex > " m " ^ - { ( \ mu ^ m } " l " : @ { < . } @ < - 1 . 5ex > " m" _ - { sm \ eta ^ m } " r " : " r " ^ - { \ eta ^ m ( \ } ) } " m " : @ { < . } @ < - 2ex > " [ " _ - { sm \ eta ^ m } } \ ] ] " @ xmath1214 is a split coequaliser , and is unique . let us define by @ xmath776 the section of @ xmath839 and define the section @ xmath775 . since a more explicit description of this construction is required for the definition of section ( [ ar : explicit - mult ] ) , we can give such a description of section ( [ ssec : explicit - phi ] ) when we wish to give an explicit description of the ` ` ' ' ' multitensors that this construction implies for example . let @ xmath104 be in @ xmath839 , let @ xmath225 is @ xmath392 - 3 and give an ordinal @ xmath0 ##3 that @ xmath1163 . then by section ( [ cor : explicit - phi - shreik ] ) we havesee @ xmath1215 for the definition of the endofunctor @ xmath101 . note that @ xmath1216 is not a more detailed definition for @ xmath1205 . back to the definition @ xmath1217 { x } = " l " [ l ] { x } = " tr " [ l ] { s _ n } = " br " [ l ] { sx } = " br " [ l ] { smx } = " bl " " tr " : @ < - 1ex > " tr " _ - { x } " tr " : @ < 1ex > " tr " ^ - { \ mu ^ s _ n } : " tr " ^ - { x } " bl " : @ < - 1ex > " tr " _ - { sx } " bl " : @ < 1ex > " br " ^ - { \ mu ^ s _ n ( \ mu _ mx ) } : " br " _ - { r _ { { < } } } } " br " : " bl " _ { \ mu _ { < } } " br " : " br##m " ^ { \ eta _ t } " tr " : @ { . > } " tr " ^ { \ eta ^ t _ { ( x , y ) } } } \ ] ] one may define the whole diagram in @ xmath16 of @ xmath1218 as the only diagram where the objects on the right commute . this makes sense since the top row is presentation coequaliser for @ xmath16 . via the corresponding @ xmath114 - algebra structure for each of the objects in this diagram , one may in fact define the whole diagram in @ xmath839 with the top row as being the unique presentation coequaliser for @ xmath104 , and this is because @ xmath1218 is an @ xmath114 - algebra structure . the claim that @ xmath1218 has the universal unit of the unit of @ xmath775 is straight forward and obvious to the reader . as for @ xmath1219 , it is derived from the following map in @ xmath734 : @ xmath1220 { ( sq _ t , \ eta ^ t ) } = " q " [ q ( 4 ) ] { ( q_ { ( q _ n , a \ phi ) , ( ( q _ n , a \ phi ) ) } = " r " [ . ] { ( q _ n ( x , x ) , a ( x , x ) ) } = " r " " r " : @ < - 1ex > " r " _ - { \ mu ^ ss ( \ phi ) } " r " : @ < 1ex > " r " ^ - { a ( a ( x , x ) \ phi ) } ( : " a " ^ - { ( a _ { { < } } } ) _ { ( q _ n , a \ phi ) } } : @ { . > } " a " ^ ( . > ) { \ mu ^ ss _ { ( x , x ) } } , : " a " _ { a ( x , x ) } ) } \ ] ] since the proof @ xmath1219 is the @ xmath225 - 1 proof , to prove the proof that our proof actually does prove the identity of @ xmath101 , it is using the # ##ity of @ xmath777 to show that @ xmath1221 is the identity , andthis is easily done using the defining properties of @ xmath778 and @ xmath777 ##9 . the definition of @ xmath101 is still not yet precise enough for our purposes . what remains to be done is to describe @ xmath777 and ( possibly ) @ xmath778 in terms of the transfinite data that contains @ xmath1193 . then we shall for each element @ xmath227 provide @ xmath1222 and @ xmath1223 and @ xmath16 such that @ xmath1224 , by transfinite data , @ xmath227 . + + * universal step * . define @ xmath1225 to be the identity , and @ xmath1226 and @ xmath1227 as the natural morphisms such that @ xmath1228 satisfy the defining properties of @ xmath107 and @ xmath1053 ( as the natural coequalisers ) respectively . + + * universal step * . define @ xmath1229 and @ xmath1230 as the unique elements satisfying @ xmath1231 .the universal property of @ xmath1144 as a coequaliser . + + * + + * . when @ xmath227 is a natural ordinal , @ xmath1232 and @ xmath1233 are the maps induced by the @ xmath1234 and @ xmath1235 for @ xmath1236 and the universal property of @ xmath1194 is the colimit of the definition of the @ xmath1237 for @ xmath1236 . we define @ xmath1238 and @ xmath1230 as the unique elements of @ xmath1231 and the universal property of @ xmath1144 as a coequaliser . + + the result that the induction was stated was obtained by unpacking the definitions of @ xmath777 and @ xmath778 of the previous section in terms of the transfinite definition of the endofunctor @ xmath101 ( for the @ xmath1194 ) , and written as [ cor : large - by - sufficiently - large ] suppose that @ xmath16 is a locally compact set , @ xmat##h114 and @ xmath225 are monads in @ xmath16 , @ xmath1180 is a morphism of sets , and @ xmath104 is also @ xmath114 - accessible . if for @ xmath225 and @ xmath392 - accessible for some other cardinal @ xmath392 , and for some cardinal @ xmath0 ##6 that @ xmath1163 one may take @ xmath1239 ##2 constructed above as an explicit method of endofunctor , addition and multiplication of the monad generated by the cardinal @ xmath775 . [ cor : vexp - explicit ] in the form of : ( [ cor : set - not - very - explicit ] ) , if for @ xmath1240 , @ xmath225 and @ xmath889 is the coequaliser of @ xmath1206 and @ xmath1188 in @ xmath16 , then one may replace @ xmath1241 with @ xmath287 as constructed above . ( [ cor: [UNK] - shreik - [UNK] ] ) .