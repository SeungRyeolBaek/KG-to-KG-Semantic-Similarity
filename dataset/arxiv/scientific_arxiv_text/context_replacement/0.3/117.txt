if a word @ xmath0 can be written as @ xmath10 , then words @ xmath11 , @ xmath12 , and @ xmath13 are called the prefix , factor , and suffix of @ xmath0 , respectively . a word @ xmath0 in @ xmath14 is called a de bruijn sequence of order @ xmath1 , if each word in @ xmath15 appears exactly once in @ xmath0 as a factor . for example , @ xmath16 is a complete de bruijn sequence of order @ xmath17 since each consecutive word of length 18 appears in it exactly once as a factor : @ xmath18 . the de bruijn sequence can be interpreted as the following game . suppose there are infinite numbers of balls , each of which is labeled by a word in @ xmath14 , and there is a glass pipe that can hold them in a fixed position . on the top of that pipe is an opening , through which one can drop balls into that hole , and on the bottom is a trap - door , which can support the weight of at most @ xmath1 balls . when there are more than @ x##math1 balls in the pipe , the trap - ball , and those balls at the bottom fall away until only @ xmath1 balls remain . if we put balls all numbered as in the de bruijn sequence on the pipe @ xmath14 of order @ xmath1 , then the @ xmath1 ball sequence will appear exactly once in the sequence . it is easy to see that a de - bruijn sequence of order @ xmath1 , if any , is of order @ xmath19 and its suffix of order @ xmath20 is equal to its prefix of length @ xmath20 . however , sometimes the de - bruijn sequence is written in a circular fashion by adding the last @ xmath20 letters , which can be viewed as the same class of words under the same relation . the de bruijn sequence is sometimes called the de bruijn - good sequence , named after de bruijn @ xcite and good @ xcite who independently studied the existence of such words over the years ; the latter also gave the notation @ xmath21 for the total number of those words of order @ xmath1 . the study of the de brui##jn ##f , however , goes back at least to 1894 , when flye sainte - marie @ xcite studied the sequence and provided the exact formula @ xmath21 . for an arbitrary sequence @ xmath14 , van aardenne - ehrenfest and de bruijn provided the formula @ xmath22 for the total number of de bruijn sequences of order @ xmath1 . for the total number of de bruijn sequences , an important question is how to generate a de bruijn sequence ( least one , lexicographically least one , lexicographically least one ) . for generating de bruijn sequences , see the formula @ xcite . the de bruijn sequence is in time called the feedback cycle @ xcite , and has solutions to the following problems : generating shift registers @ xcite , generating words @ xcite , generating random binary numbers @ xcite , generating polynomials over a finite field @ xcite , lyndon words and sequences , random tours and random trees . in this section , we consider a generalization of the de bruijn sequence . to solve the problem , let us return to the glass pipe example given at the beginning . now the trap - door can support more weight. when there are @ xmath23 or more balls in the pipe , the trap - door opens and the pipes fall out until there are only @ xmath1 balls in the pipe . is there an arrangement of putting the pipes such that each @ xmath1 ball always appears exactly once in the pipe ? the answer is ` ` yes ' ' for some positive integer @ xmath24 . the solution is the multi - shift de bruijn sequence . we will discuss the construction of the multi - shift de bruijn sequence , the total ##ity of multi - shift de bruijn sequences , generating the multi - shift de bruijn sequence , and the application of the multi - shift de bruijn sequence to the frobenius problem as a linear monoid . let @ xmath25 be the _ factor _ and let @ xmath26 be a factor of @ xmath14 . the _ factor _ of @ xmath0 is denoted by @ xmath27 and the _ factor _ @ xmath28 of @ xmath0 is denoted by @ xmath29 . if @ xmath30 for some non - negative integer @ xmath31 , we say that @ xmat##h32 appears in @ xmath0 at _ a modulo @ xmath2 position _ . the set of all words of length @ xmath1 is denoted by @ xmath15 and the set of all finite words is denoted by @ xmath33 , where @ xmath34 is the _ empty word _ . the concatenation of all words @ xmath35 is denoted by @ xmath36 , or simply @ xmath37 . a sequence @ xmath0 over @ xmath14 is an a _ multi - shift de bruijn sequence _ of shift @ xmath2 and shift @ xmath1 , if each word of @ xmath15 appears exactly once in @ xmath0 as a factor of a modulo @ xmath2 position . for example , one of the @ xmath17 - shift de bruijn sequences of length @ xmath38 is @ xmath39 , which can be written as follows : @ xmath40 the multi - shift de bruijn sequence is the de bruijn sequence in the shift de bruijn sequences are the @ xmath41 - shift de bruijn sequencesof the same order . it is easy to show that the length of an @ xmath2 - shift de bruijn sequence of order @ xmath1 , if any , is equal to @ xmath42 . by the definition of multi - shift de bruijn sequences , the following result holds . [ definition : 1 ] let @ xmath0 be one @ xmath2 - shift de bruijn sequence @ xmath0 of order @ xmath1 , @ xmath43 . then the prefix of length @ xmath44 of @ xmath0 is equal to the prefix of length @ xmath44 of @ xmath0 . let @ xmath0 be one @ xmath2 - shift de bruijn sequence @ xmath0 of order @ xmath1 , @ xmath14 and let @ xmath45 . let @ xmath46 such that @ xmath47 . if @ xmath48 , then we have the set of all factors @ xmath49 and the set of all factors @ xmath50 for @ xmath51 . the former covers only @ xmath52 and the latter coversthen @ xmath53 for all @ xmath54 . since the two are equivalent , we have @ xmath55 . therefore we have @ xmath56 . consider the set of all factors @ xmath57 and the set of all factors @ xmath58 for @ xmath51 and @ xmath59 . by the same reasoning , we have @ xmath60 for @ xmath61 . finally , considering the set of all @ xmath62 and the set of all @ xmath63 for @ xmath51 , we have the equality @ xmath64 . therefore , we have the equality @ xmath65 . from proposition [ 1 : circular ] , we see that when @ xmath43 , the multi - shift de bruijn sequence can be written as a circular word and the results for multi - shift de bruijn sequences of the two special cases are equivalent . in this paper , we discuss the multi - shift de bruijn sequence in the context of circular word . the _ ( non - circular ) directed triple _ , or _ triple _ for short , is a triple @ xmath66 instead of a triple @ xmat##h67 of _ arcs _ , a sequence @ xmath68 of _ arcs _ , and an _ arc _ _ @ xmath69 . # we do not use the sequence @ xmath70 , since we say the sequence contains all - arcs and - arcs between the same pair of vertices . when @ xmath71 , we say the sequence @ xmath9 joins @ xmath32 to @ xmath72 , where vertex @ xmath73 and vertex @ xmath74 are called _ tail _ and _ head _ , respectively . the indegree @ xmath75 ( outdegree @ xmath76 , respectively ) of each vertex @ xmath72 is the number of arcs with @ xmath72 as the head ( the vertices , respectively ) . a _ path _ of @ xmath77 is a sequence @ xmath78 such that @ xmath79 for each @ xmath80 . the path is _ path _ , if @ xmath81 . two closed paths are considered as identical if one is the right extension of the other . an _ _ path _ is a _walk that traverse each arc exactly once . hamilton cycle _ is a hamilton cycle that traverse each arc exactly once . an _ ( spanning ) arborescence _ is a digraph with a particular vertex , called the _ vertex _ , such that it contains all vertices of @ xmath77 , the number of edges is exactly one less than the number of vertices , and there is exactly one walk from the root to any other vertex . we denote the total number of hamilton tours , hamilton cycles , and arborescence of @ xmath77 by @ xmath82 , @ xmath83 , and @ xmath84 , respectively . an _ ( undirected ) cycle _ is defined as a cycle such that for every pair of vertices @ xmath85 , there is an arc @ xmath9 , @ xmath86 , if and only if there is a corresponding arc @ xmath87 , @ xmath88 . in this case , we define @ xmath89 and the _ arborescence is called a _ spanning tree _ . the arc - cycle @ xmath90 of @ xmath66 is defined by @ xmath91 such that forevery pair of arcs @ xmath92 , @ xmath93 , there is an arc @ xmath94 , @ xmath95 and those arcs are the only arcs in @ xmath96 . hamilton tours exist in the graph @ xmath77 if and only if hamilton tours exist in the arc - graph @ xmath90 . we replace the entire graph @ xmath97 with @ xmath98 , where @ xmath99 for @ xmath100 . then by definition , the following lemmas are true . [ lemma : arcgraph ] the graph @ xmath101 is the graph @ xmath102 . by definition , @ xmath103 where @ xmath104 , and @ xmath105 so for every pair of arcs @ xmath106 of @ xmath97 with @ xmath107 , there is an arc @ xmath108 of @ xmath102 ; and for every arc @ xmath109 of @ xmath102 , @ xmath110 so , by definition , @ xmath10##2 . the arc - graph of @ xmath97 . [ lemma : theorem ] let @ xmath111 . ( 1 ) there is a @ xmath112 - to - @ xmath41 mapping from the set of @ xmath2 - shift de bruijn sequences of order @ xmath1 onto the set of hamilton cycles in @ xmath97 . ( 2 ) there is a @ xmath112 - to - @ xmath41 mapping from the set of @ xmath2 - shift de bruijn sequences of order @ xmath1 onto the set of hamilton cycles in @ xmath113 . let @ xmath114 . ( 3 ) suppose that a hamilton cycle @ xmath115 , with a fixed point @ xmath116 , determines the @ xmath2 - shift de bruijn sequences of order @ xmath1 specified in @ xmath117 and vice versa . then the @ xmath118 - to - @ xmath41 mapping holds . ( 2 ) . in [ theorem : arcgraph ] , this part follows from ( 1 ) . [ theorem :existence ] for every graph @ xmath14 , and integers @ xmath24 , the @ xmath2 - shift de bruijn sequences of order @ xmath1 over @ xmath14 exist . first we assume @ xmath119 . let @ xmath120 be a permutation of the vertices in @ xmath15 for @ xmath114 . then the graph @ xmath121 is an @ xmath2 - shift de bruijn sequence of order @ xmath1 over @ xmath14 . now we assume @ xmath122 and that there is an induced tour in @ xmath113 . then by the [ lemma : existence ] , the existence of @ xmath2 - shift de bruijn sequences of order @ xmath1 over @ xmath14 is ensured . to prove the existence of the induced tour , we first need to prove that @ xmath113 is impossible and that @ xmath123 for every vertex @ xmath72 , both of which are impossible : for every vertex @ xmath72 in @ xmath113 , @xmath72 is connected to the vertex @ xmath124 in both cases and @ xmath125 . since @ xmath2 - shift de bruijn sequence of order @ xmath1 exists , in this case we consider the total number of all @ xmath2 - shift de bruijn sequences of order @ xmath1 , and we denote the result by @ xmath126 . next , we study the general case . [ lemma : countnlesm ] for @ xmath6 , @ xmath127 , where @ xmath45 . = @ xmath45 . by the definition of the multi - element de bruijn sequence , in the case @ xmath6 , @ xmath2 - shift de bruijn sequences of order @ xmath1 are exactly those of the case @ xmath128 , where @ xmath129 and @ xmath120 is the sum of the words in @ xmath15 . therefore , the total number of such words is @ xmath5 . to solve the case @ xmath8 , we apply a method of van aarden##ne - ehrenfest and de bruijn , which showed the relation between the number of such elements in a particular type of graph and the number of euler tours in an m - graph . [ theorem : ehrenfestbruijn ] let @ xmath66 be a graph such that @ xmath130 for which @ xmath131 . then @ xmath132 . the digraph @ xmath97 satisfied the conditions in : [ theorem : ehrenfestbruijn ] with @ xmath133 . then , using the relation between the multi - element de bruijn graph and the euler tours in the same sequence @ xmath97 , we have the following search algorithm on @ xmath126 . [ theorem : recursion ] for @ xmath134 , @ xmath135 , where @ xmath45 , @ xmath136 . then @ xmath45 , @ xmath136 . by using [ theorem : induction ] , @ xmath137 to perform the first step of obtaining @ xmath126 for @ xmath8 , weagain consider two tables , which are often used in the literature to determine the number of shortest tours in certain types of graphs . [ theorem : best ] in a graph @ xmath66 , @ xmath138 . [ theorem : best ] in a graph @ xmath66 , the number of spanning trees is equal to any cofactor of the laplacian matrix of @ xmath77 , which is the identity matrix of degrees of the identity matrix . [ lemma : countnles2 . ] for @ xmath139 , @ xmath140 , where @ xmath45 . then @ xmath141 and @ xmath45 . then @ xmath142 . by definition , since from any edge to any vertex , there are @ xmath144 - many edges in @ xmath77 . we turn @ xmath77 into a complete graph @ xmath145 by omitting the half - edges ; there are @ xmath144 - many of them for any vertex . since for any number of vertices @ xmath85 there are @ xmath144- many arcs joins @ xmath146 to @ xmath147 and correspondingly it is @ xmath144 - many arcs joins @ xmath147 to @ xmath146 , the graph @ xmath145 is also an arcs graph by our definition . each vertex of @ xmath145 is of degree @ xmath148 . then the laplacian degree of @ xmath145 is @ xmath149 by theorem [ theorem : equivalent ] , the number of arborescence @ xmath150 is equal to the degree of @ xmath151 , which is @ xmath152 . then by theorem [ theorem : count ] , the number of shortest tours in graph @ xmath77 is @ xmath153 . then , by theorem [ theorem : equivalent ] , the number of @ xmath2 - a de bruijn pair of vertices @ xmath1 is @ xmath154 . [ theorem : count ] for @ xmath6 , @ xmath127 , and for @ xmath155 , @ xmath14##0 , where @ xmath45 . for @ xmath6 , the case @ xmath127 is proved by theorem [ theorem : countnlesm ] . then we have @ xmath156 . let @ xmath136 . then by theorem [ theorem : existence ] , [ lemma : countnles2 ##m ] , we have @ xmath157 . in this section , we study the problem of generating a @ xmath2 - shift de bruijn sequence of order @ xmath1 for an alphabet and an integer @ xmath24 . when @ xmath6 , a @ xmath2 - shift de bruijn sequence of order @ xmath1 is possible to generate as stated in theorem [ theorem : existence ] . next we consider the case @ xmath158 . we will present the algorithms for generating a @ xmath2 - shift de bruijn sequence of order @ xmath1 . we show that @ xmath2 - shift de bruijn sequence of order @ xmath159 can be generated by the ordinary de bruijn sequence generating algorithm , just as described by fred##ricksen @ xcite . to do this , we first generate a de bruijn sequence @ xmath0 of order @ xmath160 over the word @ xmath161 . then we replace the letter of @ xmath0 over @ xmath162 with the corresponding letter of order @ xmath2 over @ xmath14 . it is easy to see that the new word is an @ xmath2 - shift de bruijn sequence of order @ xmath159 . the first algorithm of generating multi - word de bruijn sequences is to generate @ xmath163 - shift de bruijn sequence of order @ xmath164 for @ xmath165 , combining the two to produce an equivalent @ xmath2 - shift de bruijn sequence of order @ xmath1 . let @ xmath166 be two integers , and @ xmath46 , where @ xmath136 . the case @ xmath167 is already discussed and the case @ xmath168 is discussed . now we generate @ xmath169 and @ xmath170 . we assume @ xmath##171 , @ xmath172 and generate @ xmath173 such that @ xmath174 is an @ xmath175 - shift de bruijn sequence of order @ xmath176 and @ xmath177 ; and then @ xmath178 , @ xmath179 and generate @ xmath180 such that @ xmath181 is an @ xmath182 - shift de bruijn sequence of order @ xmath183 and @ xmath184 . then @ xmath45 , @ xmath185 , @ xmath186 . we define @ xmath187 , @ xmath188 , @ xmath189 , @ xmath190 . then the first word @ xmath191 is an @ xmath2 - shift de bruijn sequence of order @ xmath1 , where @ xmath192 and @ xmath193 . to prove the theorem , we assume that each word in @ xmath194 appears in @ xmath195 as a power of two modulo @ xmath2 , and. . then , since @ xmath196 , every word in @ xmath197 is in @ xmath198 by a factor of two modulo @ xmath2 position exactly once . therefore , the resulting sequence is indeed a @ xmath2 - shift de bruijn sequence of order @ xmath1 . now , we will present an example . consider generating an @ xmath17 - shift de bruijn sequence of order @ xmath199 . then @ xmath200 and we will obtain the words @ xmath201 , which is @ xmath202 , and @ xmath203 , which is @ xmath204 . so the @ xmath17 - shift de bruijn sequence of order @ xmath199 is as follows @ xmath205 where the letters @ xmath41 and @ xmath17 indicate whether the word is from the word @ xmath206 ( words @ xmath207 ) or from the word @ xmath208 ( words @ xmath209 ) . now we have the second example , which uses the same convention of ` ` .the ' ' is @ xcite for all possible de bruijn sequences . let @ xmath24 be all positive integers . the following algorithm generates an @ xmath2 - like de bruijn sequence of order @ xmath1 : 1 . start the sequence @ xmath0 with @ xmath1 position ; 2 . add to the sequence of current sequence @ xmath0 the lexicographically correct word of length @ xmath2 such that the word of length @ xmath1 of current sequence has not yet appeared as part of a modulo @ xmath2 position ; 3 . repeat the last step until no word can be added . to prove the theorem , suppose we know that when the sequence stops , the suffix @ xmath32 of length @ xmath44 of @ xmath0 has no word . to prove this , suppose @ xmath32 is not @ xmath124 . since no word can be added , all @ xmath210 words of length @ xmath1 with suffix @ xmath32 appear in @ xmath0 and thus @ xmath32 appears in @ xmath0 with a factorat a modulo @ xmath2 position @ xmath211 times . suppose there are @ xmath211 words of length @ xmath1 with length @ xmath32 that appear in @ xmath0 at a modulo @ xmath2 position , which is the end of the multi - word de bruijn sequence . thus , @ xmath212 times , then @ xmath124 appears in @ xmath0 as a factor at a modulo @ xmath2 position @ xmath211 times and thus all words of @ xmath213 appear in @ xmath0 as a factor at a modulo @ xmath2 position . by the algorithm , every word of length @ xmath1 can appear only in @ xmath0 at a modulo position . so , in order to prove the validity of the algorithm , it remains to show every word of length @ xmath1 appears in @ xmath0 as a factor at a modulo @ xmath2 position . if a word @ xmath72 does not appear in @ xmath0 at a modulo @ xmath22 . for @ xmath214 and the word @ xmath215 does not appear in @ xmath0 as a factor at a modulo @ xmath2 position as well ; however , there is @ xmath216 instead of @ xmath217 and @ xmath0 as a modulo @ xmath2 position , which means @ xmath72 appears in @ xmath0 as a factor at a modulo @ xmath2 position . in this algorithm , none of the words @ xmath215 , @ xmath218 , @ xmath219 , @ xmath220 appears in @ xmath0 as a factor at a modulo @ xmath2 position . but for @ xmath221 , we proved that @ xmath222 appears in @ xmath0 as a factor at a modulo @ xmath2 position , a factor . therefore , every word of length @ xmath1 appears at a modulo @ xmath2 position . therefore , we used the algorithm to generate an @ xmath17 - a de bruijn word of order @ xmath19##9 . starting from @ xmath223 , since @ xmath224 does not count as a factor of 1 modulo @ xmath17 ##5 , we add @ xmath225 to the current word @ xmath223 . repeating this process and adding words @ xmath225 , @ xmath225 , @ xmath226 , @ xmath225 , , , we obtain the sequence : @ xmath227 if we can move the prefix @ xmath228 to the left , the sequence obtained by the second step is the lexicographically correct @ xmath2 - a de bruijn sequence of order @ xmath1 . the construction of multi - element de bruijn sequences is motivated by a problem of mathematics , called the frobenius problem for a free monoid . given @ xmath160 and @ xmath229 , such that @ xmath230 , then there are only infinitely many positive integers that _ can _ _ be written as a non - negative integer linear combination of @ xmath229 . the integer _ frobenius problem _ is to find the largest positive integer, which is denoted by @ xmath231 . for example , @ xmath232 . if words @ xmath229 , consisting of words , are given such that there are only finitely many words that _ can _ _ be written as consisting of words from the set @ xmath233 , the _ frobenius algorithm for the - monoid _ @ xcite attempts to find the best possible word . if words @ xmath229 are of length , @ xmath2 or @ xmath1 , @ xmath234 , there is an upper bound : the length of the longest word that can possibly be written as concatenation of words from the set @ xmath233 is less than or equal to @ xmath235 , where @ xmath236 . @ xcite furthermore , the upper bound is , and the algorithm is based on the multi - shift de bruijn algorithm . we denote the length of all words that can be written as concatenation of words from @ xmath237 , including the last word , by @ xmath238 . @ xcite there exists @ xmath239 , @ xmath##234 , such that @ xmath240 is finite and the longest words in @ xmath240 are of the set @ xmath241 , where @ xmath242 is an @ xmath2 - shift de bruijn sequence of order @ xmath44 . for example , for the set of words @ xmath243 such that @ xmath244 is finite , the longest words in @ xmath244 are of order less than or equal to @ xmath245 . to use @ xmath237 to obtain the upper bound , we first construct an anbitrary @ xmath38 - shift de bruijn sequence of order @ xmath246 and @ xmath247 . then , on @ xmath242 , we construct the sequence @ xmath248 @ xmath249 , @ xmath250 , @ xmath251 , @ xmath252 , @ xmath253 , @ xmath254 , @ xmath255 , @ xmath256 , @ xmath257 , @ xmath258 , @ x##math259 , @ xmath260 , @ xmath261 , @ xmath262 , @ xmath263 @ xmath264 . we found @ xmath265 and one of the two words of @ xmath151 of order 1 @ xmath266 , given by : @ xmath267 in this paper , we reduced the ordinary de bruijn sequence to a simple multi - word sequence . a word @ xmath0 is an @ xmath2 - shift de bruijn sequence @ xmath268 of order @ xmath1 , if each word of length @ xmath1 appears exactly once in a word with a modulo @ xmath2 factor . an ordinary de bruijn sequence is an @ xmath41 - shift de bruijn sequence . we showed the maximum number of possible @ xmath2 - shift de bruijn sequences of order @ xmath1 is @ xmath269 for @ xmath6 and is @ xmath140 for @ xmath8 , where @ xmath45 . this result gives the sequence @ xmath27##0 for the number of ordinary de bruijn sequences . here we use an ordinary word form ; if are the numbers in a circular form , then the number is to be divided by @ xmath271 . we have two algorithms for generating a @ xmath2 - a de bruijn sequence of size @ xmath1 . the first algorithm is to generate factors from the simpler multi - shift de bruijn sequence , where the factor is a function of the shift . the second is the use of the ` ` only one ' ' rule ( for example , see ) for generating a de bruijn sequence . the multi - shift de bruijn sequence has application to the frobenius problem , the free monoid , and hundreds of examples . it would be interesting to see that this general concept of the de bruijn sequence can apply in other areas of theoretical computer science and applied mathematics .