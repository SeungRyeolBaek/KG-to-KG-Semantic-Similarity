the kakutani equivalence is one of the most natural results in the theory of the orbit equivalence of ergodic and finite measure preserving linear systems . in this paper we have even kakutani equivalence in the nearly continuous sense . a nearly continuous linear system is given by a triple @ xmath13 , where @ xmath2 is a polish measure , @ xmath14 is a borel finite measure on @ xmath2 , and @ xmath15 is an ergodic measure preserving homeomorphism . recall that a restricted orbit equivalence of two linear systems @ xmath13 and @ xmath16 is an invertible , non - linear , and measure preserving map @ xmath17 that maps sets to sets . a restricted orbit equivalence @ xmath18 is a _ nearly continuous _ equivalence _ if there exist sets and @ xmath11 subsets @ xmath19 and @ xmath20 of full measure such that @ xmath21 is a homeomorphism . the first result in this paper is the fundamental theorem of keane and smorodinsky @ xcite that any two bernoulli measures of equal measure are finitarily independent , namely ,that the isomorphism between them can be made a homeomorphism almost continuously . in a later paper , denker and keane @ xcite established a general method for constructing orbit preserving categories that also preserves their algebraic structure . we refer the article to the paper of del junco , rudolph , and weiss @ xcite for a more complete overview of the area . we should note here that interest in the orbit equivalence theory for this category was more recently stimulated by the work of hamachi and keane in @ xcite where they proved that the binary and binary odometers are nearly continuously orbit equivalent . their work yielded similar results for other pairs of categories ( in @ xcite , @ xcite , @ xcite , @ xcite , @ xcite , and @ xcite ) . these examples were later used as special cases of a dye s theorem for this category proved by del ##ong and ahin @ xcite . around the same time that the nearly continuous ' s theorem was proved , del ##io , rudolph , and weiss proved in @ xcite that if one does not satisfy the condition that the open sets of the category on which the orbit equivalence is a homeomorphism are @ xmath11 ##1 , then the restricted orbit equivalence isis exactly the same thing in the measure theoretic sense . in particular , they showed that an orbit equivalence can be shown to be a homeomorphism on a set of full measure , but could not prove that the set of full measure has a topological structure . the importance of the topological structure in the theory is even more important for the case of even kakutani equivalence . note that in the measurable category two compact and compact measure preserving sets @ xmath13 and @ xmath16 are even kakutani equivalent if there is a unique orbit equivalence @ xmath22 , and the sets @ xmath23 with @ xmath24 with the property that @ xmath25 is a measurable isomorphism of the induced sets @ xmath7 and @ xmath26 . we call the orbit equivalence @ xmath6 _ _ even kakutani equivalence _ between @ xmath0 and @ xmath1 . it follows from @ xcite that an even kakutani equivalence can be shown to be a homeomorphism on a set of full measure . in the same paper they show that if one adds the additional condition that the sets @ xmath12 and @xmath27 is _ nearly clopen _ , meaning if a set of measure zero of an open set and one of a closed set , then there is a new invariant for the kakutani equivalence of nearly continuous linear systems called _ nearly continuous ergodicity _ . they use this new invariant to show that nearly continuous even kakutani equivalence is stronger than measure theoretic even kakutani equivalence . the example they give is , in some sense , not natural , and raises the question whether there are any natural examples of nearly continuous systems that are nearly evenly kakutani equivalent but not nearly continuously even . rudolph started looking for examples in the case of zero entropy loosely bernoulli systems . proved that any two zero entropy loosely bernoulli systems are measurably even kakutani equivalent . furthermore , many natural examples of nearly continuous systems of rotations , all adding machines , and in fact all rational linear systems , are loosely equivalent . in @ xcite , roychowdhury and rudolph proved that any two adding machines are nearly continuous even kakutani equivalence . soon after , dykstra and rudolph showed in @ xcite that all such rotations are nearly continuously kakutani equivalent to the smallest odome##ter . in @ xcite , a machinery , called _ templates _ , was used to construct the nearly continuous kakutani system . here , templates are defined as the canonical binary tower structure used in adding systems . the construction of @ xcite proved that the template machinery can be adapted to the situation where the underlying system does not have a canonical tower structure . more recently , in @ xcite expanded on their ideas and adapted them further to prove that the minimal isometries of the metric spaces are nearly continuously kakutani equivalent to the binary odometer . salvi @ xcite adapted this to the construction of @ xmath28 , and adapted the machinery to prove rudolph s two - dimensional coding problem in the nearly continuous category . each result mentioned above has produced more sophisticated and more efficient incarnations of it . on the other hand each result has also established the usefulness and flexibility of the machinery . in this paper we adapted the template machinery even further to prove our main result : the resulting adding system is nearly - even kakutani equivalent to the binary odometer . the version of the template machinery in this paper is designed to address the additional complication of the additional structure present in the figure two dimensional code . we adapt the machine##ization we see here is the appropriate starting point to prove more precisely that continuous and nearly continuous systems are all nearly continuously kakutani equivalent to the morse system . # we note that this manuscript is the culmination of work that the first author began in 2009 while he was a post - doctoral fellow working with peter rudolph at michigan state university . the initial stages of the project and the main ideas were all developed collaboratively by dykstra and rudolph . the second author joined the project after the untimely death of rudolph in 2010 , and the project was completed in 2014 . in this section , deferring the formal definitions until 2015 , we give an overview of the construction and introduce templates . let @ xmath29 denote the binary minimal system and @ xmath30 the binary equivalence . recall that each system has a unique partition , a set of clopen sets that are given by the initial rank structure of the system . the minimal system is rank two , so at each stage the partition is defined by a pair of towers . the equivalence is rank three , so the sequence of partitions is defined by a sequence of single towers . the construction of the binary equivalence is an inductive back and forthprocedure .intuitively , at each stage we need to construct a set map from the levels of the tower of one system to the levels of the tower of the other system , preserving the domain and properties of the set maps at that stage . the orbit map can be defined on the set of points for which our procedure will converge . in order for this set to be a @ xmath11 set , and the procedure to be a homeomorphism , for each point where we expect convergence we need to have the procedure stabilize over a certain number of stages . in other words , once we have defined the set map at a particular stage @ xmath31 , we can not change its definition at any successive stage . this is an important problem in the construction . at a particular stage @ xmath31 , we need to know that our choice of the set maps on stage @ xmath31 first will be consistent with the choice that we will make for all stages after . to address this complication , roughly speaking , we do not simply choose a particular set map at each stage . instead , at each stage we choose a set of set maps that are all extensions of the stage set map , and that all agree on the set we call _ the good set _ .the convergence then depends on us being able to make optimal choices at each stage @ xmath31 so that it is possible to construct infinitely many sets of maps at stage @ xmath32 that form the @ xmath31 - stage sequence . they are a computational tool that has been developed to facilitate the intensive # ##keeping needed to describe such a procedure . formally , _ template _ is an ordered multiset . for example , the multiset @ xmath33 , together with the template @ xmath34 , forms the template @ xmath35 , which we define as @ xmath36 the elements of the template ( with labels ) are called _ template _ . in our work , each level of a template will correspond to a clopen structure that is a level of a tower . in fact , the towers themselves can be thought of as towers where each level appears exactly once and the ordering on the towers is exactly the ordering on the levels that is imposed by the underlying structure . notice that a set map from one tower to another can be thought of as a re - ordering of the levels of the image tower corresponding to the levels that they are being mapped to in the image tower . we use the definition of a set mapwith maps between templates , where the re - order is not given by the mapping , but rather the ordering given by the image template . more formally , given _ @ xmath35 and @ xmath37 , and @ xmath38 we _ associate _ @ xmath35 and @ xmath37 with the mapping @ xmath39 \ subset { \ mathbb z } \ hspace { 1 cm } \ mbox { and } \ hspace { 1 cm } [ = [ 0 , 1 , \ ldots , m - 1 ] \ subset { \ mathbb z } \ ] ] via the correspondences @ xmath40 and @ xmath41 . _ _ partial _ bijection _ _ an ordered quintuple @ xmath42 $ ] , where @ xmath43 , @ xmath44 , and @ xmath45 is a bijection . this perspective allows for an explicit mathematical understanding of how many maps need to be constructed in one stage in order to construct maps from other stages , on larger scales . it also allows for an explicit mathematical understanding of how maps from one stage are constructed from maps of the previous stage , and it is possibleto show that the convergence has indeed occurred for points in a @ xmath11 set of finite points . for our example we will use the infinite sequence @ xmath46 , " for each system and the interval bijections between template ##s that form the back and forth " , shown in figure [ thefigure ] 1 . the points in the diagram are template ##s . the template ##s on the left ( @ xmath47 , @ xmath48 , @ xmath49 , and @ xmath50 ) belong to the morse code system , and those on the right ( @ xmath51 , @ xmath52 , @ xmath53 , and @ xmath54 ) belong to the binary odometer . the maps @ xmath55 are partial interval bijections . a key feature of the map is its _ almost infinite _ size , as shown by roychowdhury and rudolph in @ xcite . interpreting the sets of templates as levels of towers that represent a finite sequence of stages , we see that each level at stage @ xmath31 of each tower is a partition of a level from the previous stage above , and the map @ xmath56and @ xmath57 are the natural inclusion ##s . the consistency of set maps from one set to another is achieved by ensuring that for the good set , all partial interval bijections agree when starting with @ xmath56 and @ xmath57 . there are some key differences our work here and that of @ xcite or @ xcite in how we use templates from a previous paper to create later stage diagrams . in particular , we can not use the notion of cycles that was introduced in the original paper , so we define _ overlapping ##s _ . in addition , to describe the combinatoric structure of the towers of the resulting star , we introduce a new family of partial interval bijections called _ reordering maps _ . once the family is set up , however , the argument that it is a well - defined nearly complete kakutani equivalence is not identical to the one for both @ xcite and @ xcite . we include it here for clarity ( see also [ convergenceofpibs ] and [ kakequivalence ] ) . it is our hope that one day we will have a more powerful theory that could characterize all classes of systems , perhaps even all zero ##s ( bernoulli. . . at the moment it is not clear how such a machine , if it exists , could be sufficiently powerful to account for the differences between systems . the paper is organized as follows : section [ structure ] : : we define the rules for the templates and partial interval bijections that we will use in the diagram . section [ morsepreliminaries ] - [ binarypreliminaries ] : : we define the structures of the morse minimal system and the minimal system . in particular , we define the template sets @ xmath58 , @ xmath59 , @ xmath60 , and @ xmath61 , for @ xmath62 . these template ##s are given by the towers of the minimal system . section [ omegaksection ] : : we define the template sets @ xmath63 and @ xmath64 , for @ xmath62 . these are templates in the odometer system that are independent of the other towers , reflecting the connections that connect tower towers to other towers . section [ stage2 ] : : we construct stage @ xmath65 of the system by explicitly defining @ xmath66 , along with the partial intervalbijections @ xmath67 . section [ tksection ] : : we define the data , @ xmath68 and @ xmath69 , for @ xmath62 . these are new templates for the new system , describing how these data can be compared to morse code . sections [ sequence ] : : we define the sequence @ xmath46 recursively . sections [ freqnotation ] - [ stage8 ] : : we assume the diagram has been built down to stage @ xmath31 , where @ xmath31 is defined , and show how to build it up to stage @ xmath70 . because the result depends on whether @ xmath71 or @ xmath72 , we proceed as follows : + * in sections [ freqnotation ] - [ blockpartitionsoftauhat ] , we show tools and code that are valid for each stage @ xmath31 . * in sections [ thegoodset ] - [ stage4missingextra ] , we illustrate the @ xmath73 problem by building the diagram up to stage @ xmath74 . * in sections [ stage6bigp##icture ] - [ stage6missingextra ] , we solve the @ xmath72 problem by building the diagram down to stage @ xmath75 . * in section [ stage8 ] , we show how the diagram looks at stage @ xmath76 . sections [ convergenceofpibs ] - [ kakequivalence ] : : we use the structure of the diagram to show that our induction has a unique continuous kakutani relation between the two systems . in this section we introduce the tools and techniques used to define and solve partial interval bijections . [ domainandrange ] given a @ xmath35 and @ xmath37 , and [ partial interval bijection @ xmath42 $ ] from @ xmath35 to @ xmath37 , the _ domain _ of @ xmath77 consists of those levels in @ xmath35 that are represented by @ xmath12 . the _ domain _ of @ xmath77 consists of those levels in @ xmath37 that are represented by @ xmath27 . for the following example , a @ xmath78 is a system which , like @ xmath37 , is athen @ xmath79 . then there exists a partial interval bijection @ xmath80 $ ] from @ xmath35 to @ xmath81 . suppose that @ xmath82 and @ xmath83 are on their first three levels ( @ xmath84 , @ xmath85 , and @ xmath12 ) . [ match ] . @ xmath86 and @ xmath87 are two partial interval bijections , [ [ @ xmath42 $ ] and @ xmath88 $ ] . then @ xmath77 and @ xmath89 _ equivalent _ if , for some value @ xmath90 , the level in @ xmath37 that is represented by @ xmath91 is equal to the level in @ xmath81 that is represented by @ xmath92 . two partial interval bijections are _ equivalent _ if one is a multiple of the other . more precisely , @ xmath93 \ sim [ i ' , j ' , o ' , o ' , u ' ] $ ] if there exists @ xmath94 and @ xmath9##5 , @ xmath96 , @ xmath97 , @ xmath98 , and @ xmath99 . for a partial interval bijection @ xmath42 $ ] , the _ element _ of @ xmath77 is the partial interval bijection @ xmath100 $ ] . [ @ xmath101 $ ] for @ xmath102 are all partial interval bijections , and that of @ xmath103 and @ xmath104 terminates at @ xmath105 . define @ xmath106 and @ xmath107 . define the _ element _ _ of @ xmath108 and @ xmath109 [ @ xmath110 , \ ] ] where @ xmath111 means that this is an inner semigroup acting on the set of all partial interval bijections . # note that , if @ xmath108 and @ xmath109 are partial interval bijections , then so is @ xmath112 . for our construction , the partial interval bijections will need to be split into the sets @ x##math113 where @ xmath114 and @ xmath115 make up a very small part of the linear map . we will refer to @ xmath114 and @ xmath115 as the _ bottom _ and _ top sticky notes _ of @ xmath77 . the _ body _ of @ xmath116 . we will often need to put " partial " bijections together . top and bottom sticky notes will be our way of doing this via the following steps . [ overlapconcatenation1 ] for @ xmath101 $ ] for @ xmath102 are the partial interval bijections that are constructed via ( [ stage2pibstructure ] ) for @ xmath117 if @ xmath118 , then is the _ overlapping concatenation _ of @ xmath108 and @ xmath109 , denoted @ xmath119 , denoted @ xmath120 the sticky notes described in the [ stickynotes ] will be used only in the initial stages of the algorithm . from then on , top and bottom sticky notes will _ overlap _ with the data , so that a single partial interval bijectionwill have to be decomposed into the form @ xmath121 where again @ xmath114 and @ xmath115 make up a very small portion of the sticky notes . here again , we will refer to @ xmath114 and @ xmath115 as the bottom and top sticky notes , and @ xmath116 as the bottom , of @ xmath77 . once we are far enough along in the process that the result will take the form ( [ stage4pibstructure ] ) , we will no longer be able to use the [ overlapconcatenation1 ] to group partial interval bijections together . we will instead use the following . [ overlapconcatenation2 ] [ @ xmath101 $ ] for @ xmath102 are two partial interval bijections that are connected via ( [ stage4pibstructure ] ) for @ xmath122 if @ xmath118 , then _ the _ overlapping concatenation _ of @ xmath108 and @ xmath109 , denoted @ xmath119 , denoted @ xmath123 _ _ _ map _consider a partial interval bijection of the form @ xmath124 $ ] . unlike other partial interval bijections , in a reordering , each of the first four components is the same interval . therefore it is possible to compose four different maps , as follows . if @ xmath125 and @ xmath126 are two bijections , then , as a usual class of maps , @ xmath127 is a bijection . then we can define @ xmath128 _ composed with _ @ xmath129 to be the [ map @ xmath130 $ ] . these maps can be used to move certain levels in the bottom part " of a template " to the top part , " while moving certain levels in the top part " down . for example , take the template @ xmath131 and all of @ xmath132 as the middle part " . suppose we wish to shift this middle part down by two levels . we could do this , for example , by moving @ xmath133 and @ xmath134 from the bottom part to the top part , as follows . let @ xmath135 $] and replace @ xmath125 by @ xmath136 and @ xmath137 by @ xmath138 so that @ xmath139 is the ( old ) template @ xmath140 and @ xmath141 is the ( new ) template @ xmath142 we can also replace [ [ [ @ xmath124 $ ] with an explicit pseudo - bijection @ xmath42 $ ] by [ @ xmath143 $ ] , where @ xmath144 is the value of @ xmath145 to @ xmath27 . for a single symbol @ xmath146 of template @ xmath147 , the _ value _ of @ xmath27 is the symbol @ xmath148 , where @ xmath149 if @ xmath150 and @ xmath151 if @ xmath152 . let @ xmath153 apply the same rule to the symbols @ xmath105 and @ xmath154 followed by @ xmath155 and @ xmath156 . let @ xmath153then the sequence @ xmath105 determines , for each @ xmath157 , a word @ xmath158 of length @ xmath159 : @ xmath160 observe that @ xmath161 and that @ xmath162 . the sequence _ is the sequence of @ xmath163 whose first @ xmath159 words are the words @ xmath164 . let @ xmath2 be the set of all partially ordered words @ xmath165 and @ xmath166 such that every single subword of @ xmath167 counts as a subword of the morse sequence . for @ xmath167 and @ xmath168 in @ xmath2 , define @ xmath169 if @ xmath170 ; otherwise , define @ xmath171 , where @ xmath31 is a metric that @ xmath172 for each @ xmath173 . then @ xmath174 is a metric on @ xmath2 that is the borel metric on @ xmath175 . the _ _ _ system _ is where the sequence @xmath176 , where @ xmath177 is the left distribution , and @ xmath14 is the unique , ergodic borel normal distribution . the above results are given by @ xcite . [ partitionprop ] for each @ xmath178 and @ xmath157 , there exists a unique partition of @ xmath179 into intervals of length @ xmath180 so that the subword of @ xmath167 on each interval of this partition is either @ xmath181 or @ xmath182 . [ partitioncor ] for each @ xmath178 and @ xmath157 , there exists a unique partition of @ xmath179 into intervals of length @ xmath159 so that the subword of @ xmath167 on each interval of this partition is either @ xmath164 or @ xmath183 . [ 0coordinate ] for @ xmath178 and @ xmath157 , partition @ xmath179 into intervals of length . [ partitioncor ] and let @ xmath184 take the interval occupied by @ xmath10##5 is its successor , @ xmath185 . the functions @ xmath186 are equivalent . for @ xmath178 and @ xmath157 , let @ xmath184 denote as defined by the [ 0coordinate ] . for @ xmath187 , let @ xmath188 denote the @ xmath189th symbol in @ xmath164 , and let @ xmath190 denote the @ xmath189th symbol in @ xmath191 . for both @ xmath192 and @ xmath193 . @ xmath194 and @ xmath195 are obtained by taking the clopen set where @ xmath196 and rotating it according to whether the point at the top is @ xmath105 or @ xmath154 . then @ xmath194 and @ xmath195 are clopen . these @ xmath180 cylinders , all of equal size , are called the _ @ xmath147 - canonical cylinders _ _ @ xmath2 . we will now refer to @ xmath147 - canonical cylinders as _ _ _ .define the _ height - canonical template _ in @ xmath2 as : @ xmath197 and @ xmath198 such that the @ xmath147 - canonical template has height @ xmath159 . the order on the @ xmath147 - canonical template is exactly the order given by the action of @ xmath0 . the set of levels in the @ xmath147 - canonical template is a map of @ xmath2 . let @ xmath199 . given @ xmath200 , each set @ xmath201 is a copy of a unique set @ xmath202 . sending @ xmath203 back gives a map @ xmath204 . note that @ xmath57 is # ##able in the sense that the size of the sending end of a set in @ xmath205 is the same as its size . consider three modified versions of each @ xmath147 - canonical template : one in which the bottom copy is removed , a second in which there is an extra copy of @ xmath206 tacked on to the top , and a third in which there is an extra copyof @ xmath207 . on to the top . the superscripts @ xmath208 , @ xmath209 , and @ xmath210 will be missing by : " , extra copy of @ xmath206 " , and extra copy of @ xmath207 " , " : @ xmath211 , @ xmath212 , and @ xmath213 by : . let @ xmath214 be the set of all the canonical classes in stage @ xmath147 . of @ xmath215 . then @ xmath3 is complete and metrizable ; the metric @ xmath216 , where @ xmath217 , is the topology and determines the borel version of @ xmath218 . define @ xmath219 and @ xmath220 , where @ xmath221 and the metric are bit - wise and @ xmath222 with a bit . the _ _ _ _ is the metric @ xmath223 , where @ xmath224 is the non - zero borel sigma operator . @ xmath##147 - canonical cylinder _ in each level @ xmath225 , where @ xmath226 is a canonical cylinder of height @ xmath147 . these @ xmath147 - canonical cylinders are the set of templates for the canonical representation . the _ 147 - canonical cylinder _ in @ xmath3 , above @ xmath227 , is the set of @ xmath147 - canonical cylinders , with the level @ xmath228 derived from the action of @ xmath1 , where @ xmath229 is an element of the first level . for example , the @ xmath230 - canonical template is @ xmath231 in particular , let @ xmath232 denote the @ xmath189 - canonical level in @ xmath227 , such that @ xmath233 note that @ xmath227 has height @ xmath159 , and the set of levels in @ xmath227 gives a partition of @ xmath3 . let @ xmath234 . let @ xmath200 , each level @ xmath235 is a partition of a single level@ xmath236 . removing @ xmath237 also creates a new @ xmath238 . observe that @ xmath57 is measure preserving in the sense that the measure of the pull ##back of a value from @ xmath239 is the same as its measure . consider two different versions of the @ xmath147 - based template @ xmath227 : one in which the value @ xmath240 is removed , and one in which there is an extra copy of @ xmath240 added on to the top . the values @ xmath208 and @ xmath241 would be missing @ xmath240 " and extra copy of @ xmath240 " , so : @ xmath242 and @ xmath243 are the set of the modified canonical template ##s sending @ xmath147 . define @ xmath244 , so that : @ xmath245 and @ xmath246 are the modified canonical templates for the entire odometer ( each consisting of just one level ) as indicated by the [ thefigure ] . the template sets @ xmath6##3 and @ xmath247 , defined by the [ omegakdefinition ] consists of elements of the following types : normal , diminished , normal , normal and null . we begin by describing these types of template . the _ basic template _ at stage @ xmath147 is a template that satisfies all of the following conditions : it has level @ xmath159 ; its elements are @ xmath147 - canonical cylinders ; and its ordering is allowed " by the action of @ xmath1 . for the ordering of a template @ xmath248 to be allowed " by the action of @ xmath1 , @ xmath248 must satisfy all of the following conditions . " this is the _ basic template @ xmath249 that we will refer to as the _ zero - template _ , or for example ( unique ) @ xmath250 , @ xmath248 : : @ xmath251 let @ xmath252 be the set of all basic values for the basic template at stage @ xmath147 . in a basic template , the level @ xmath240 occurs once and only once . callthis is the _ global cut _ . if @ xmath253 is a basic template , define the _ successor _ template for @ xmath35 , denoted @ xmath254 , to be the basic template whose global cut is one position higher ( mod @ xmath159 ) , and define the _ successor _ template for @ xmath248 , denoted @ xmath255 , to be the basic template whose global cut is one position lower ( mod @ xmath159 ) . for example , if @ xmath253 is : @ xmath256 , @ xmath254 is @ xmath257 and @ xmath255 is @ xmath258 in a basic template @ xmath253 , define two levels , _ successor _ for @ xmath259 and @ xmath260 as follows : * @ xmath259 is @ xmath248 with the global cut removed , and with an additional level added on at the bottom ( the level that would normally be the top level of @ xmath248 , not the pre - set of the top level of @ xmath248under the map @ xmath1 ) . * @ xmath260 is @ xmath248 with the global cut removed , and with an extra level added right at the top ( the level that would naturally follow the top level in @ xmath248 , is the level of the top level in @ xmath248 under the map @ xmath1 ) . for example , if @ xmath253 is given by @ xmath256 then @ xmath259 is given by @ xmath261 the " o " and u " correspond to down " and up " , respectively , for reasons that will be made clear later . let @ xmath262 be the set of all diminished values for the first sub - stage @ xmath147 . note that all diminished templates in @ xmath262 have value @ xmath159 . for a diminished template @ xmath253 , consider two additional , _ augmented _ values as follows : * @ xmath263 is @ xmath248 with an extra level of the global cut , @ xmath240 , placed right next to the actual cutcut , and with the top level removed . * @ xmath264 is @ xmath248 with an extra level of the global cut , @ xmath240 , inserted right next to the original global cut , and with the top level removed . for example , if @ xmath253 is given by @ xmath256 then @ xmath263 is given by @ xmath265 let @ xmath266 be the set of all augmented templates for the binary odometer at stage @ xmath147 . note that all augmented templates after @ xmath266 have height @ xmath159 . given a basic template @ xmath253 , define one template , _ augmented _ template , , @ xmath267 , to be @ xmath248 with its top level removed . for example , if @ xmath248 is the zero - cut , then @ xmath268 let @ xmath269 be the set of all augmented templates for the binary odometer at stage @ xmath147 . note that all augmented template have height @ xmath270 . given a basic template@ xmath253 , define an additional , _ , _ , , , @ xmath271 , to stage @ xmath248 with an additional extra level added on at the end ( the one that would naturally be the first one ) . for example , if @ xmath253 is given by @ xmath256 and @ xmath271 is given by @ xmath272 let @ xmath273 be the set of all extra templates for the binary odometer to stage @ xmath147 . note that the canonical levels in @ xmath273 have height @ xmath274 . then @ xmath276 , note that the canonical levels in @ xmath277 have height @ xmath74 . for each canonical template @ xmath278 for the morse system , and for each template @ xmath279 for the binary system , we can define a partial binary bijection @ xmath280 from a subset of the levels in @ xmath281 to a subset of the levels in @ xmath248 . only after we have done this will we define .the bijections from the four basic template in @ xmath282 to the canonical template in @ xmath283 . there are the four basic template in @ xmath284 : * @ xmath285 , * @ xmath286 , * @ xmath287 , and * @ xmath288 . for @ xmath289 and @ xmath290 , define @ xmath291 to be the [ canonical bijection @ xmath292 $ ] , where : * @ xmath293 \ to { \ mathbb $ } $ ] , * @ xmath294 , * @ xmath295 , * @ xmath296 , and * * @ xmath297 form the canonical bijection @ xmath298 . note that * @ xmath299 is equivalent to @ xmath300 as a formal map of intervals in @ xmath179 . but of course @ xmath301 and @ xmath302 are defined as formal maps because the intervals defined by @ xmath12 , @ xmath303 and @ x##math304 is different . now consider definition [ domainandrange ] , where the domain and range of the closed loop bijection are defined . the following properties are obvious . [ nobottomortop ] for the canonical template @ xmath278 , neither the bottom level nor the top level is in the range of stage @ xmath305 . [ nobottomtoporcut ] for @ xmath306 , the vertical cut of @ xmath248 is not in the range of @ xmath305 . we then place the good " " at stage @ xmath222 , and assume the most important property ( definition [ stage2goodsetprop ] ) , which is obvious at this point because @ xmath245 is the first canonical template . let @ xmath307 . assume the vertical slice @ xmath308 which was defined in definition [ pkpi ] . we then define @ xmath309 . the result is , since @ xmath310 . [ stage2goodsetprop ] if @ xmath311 and @ xmath312 , then @ xmath313 is in the range of stage@ xmath305 and @ xmath314 , and @ xmath315 . let @ xmath248 be the basic template for @ xmath284 . define @ xmath316 to match with @ xmath305 , and define @ xmath317 to match with @ xmath318 , as in proposition [ 1 ] . that these bijections are so defined follows from : [ nobottomtoporcut ] ; for example , suppose @ xmath248 is matched with @ xmath319 where the x indicates the level that is in the ranges of @ xmath305 . then , using this " " " " to indicate the level in the ranges of the corresponding partial interval bijections , we define @ xmath320 @ xmath321 and @ xmath322 now note that @ xmath323 , and the corresponding partial interval bijection , indicates : @ xmath324 that @ xmath325 matches with @ xmath317 is not a match : [ stage2diminishedmatching ] for the basic template @ xmath306 , @ xmat##h317 matches with @ xmath326 . both @ xmath317 and @ xmath326 are defined to match with @ xmath318 . similarly , for @ xmath306 , define @ xmath327 to match with @ xmath305 , and define @ xmath328 to match with @ xmath318 . that these statements are equivalent also follows from proposition [ nobottomtoporcut ] . [ stage2augmentedmatching ] in the modified function @ xmath306 , @ xmath328 matches with @ xmath329 . both @ xmath328 and @ xmath329 are defined to match with @ xmath318 . in the function # ##s @ xmath282 and @ xmath330 match with and . given @ xmath331 and @ xmath332 , we know from statements [ nobottomortop ] and [ nobottomtoporcut ] that the top level of @ xmath281 is not within the scope of @ xmath333 , nor is the top level of @ xmath248in the example above , if @ xmath334 $ ] , where @ xmath335 $ ] , then we may define @ xmath336 by @ xmath337 $ ] , where @ xmath338 $ ] . in other words , @ xmath339 is identical to @ xmath340 except that the top level of @ xmath248 is technically missing . similarly , if @ xmath341 and @ xmath342 , if [ @ xmath334 $ ] , then we may define @ xmath343 by @ xmath344 $ ] , where @ xmath345 $ ] . in other words , @ xmath343 is identical to @ xmath280 except that there is technically an extra level at the top . similarly to @ xmath63 and @ xmath247 , the # ##s @ xmath68 and @ xmath69 , described in the [ tkdefinition ] below , consist of templates of the following types : normal , extended , reduced , missing , and extra . we define these types as . _ _ _ _ _ _template @ xmath147 is any template that meets the all of the following conditions : it has elements @ xmath159 , has elements " @ xmath147 - canonical " , and its ordering " allowed " by the action of @ xmath0 . for the ordering of a template @ xmath35 to be allowed " by the action of @ xmath0 , @ xmath35 must have one of the following conditions : 1 . this is a special basic template we call the _ zero - template _ . 2 . this is a special basic template we call the _ one - template _ . 3 . [ fourforms ] for example ( unique ) @ xmath250 , @ xmath35 has one of the following four levels : @ xmath348 @ xmath349 @ xmath350 @ xmath351 let @ xmath352 be the first of four basic templates for the source code . stage @ xmath147 . for a basic template , each one of the levels is either @ xmath206 or @ xmath207 . call that template the _ _ cut _ . if @ xmath##353 is a basic template whose global cut is neither the bottom level nor the top level , so @ xmath35 must be one of the basic templates listed in item [ fourforms ] of section [ morsebasictemplates ] below . in this case , define the _ predecessor _ template for @ xmath35 , denoted @ xmath354 , to be the basic template of that same form whose global cut is one position lower , and define the _ successor _ template for @ xmath35 , denoted @ xmath355 , to be the basic template of that same form whose global cut is one position higher . for example , if @ xmath353 is the template @ xmath356 then @ xmath357 is @ xmath358 and @ xmath359 is @ xmath360 if @ xmath353 is the basic template whose global cut is the top level , then @ xmath35 is either the zero - template or the one - template . in this case , define two basic templates for @ xmath35 , denoted @ xmath361 and @ xmath362 , as follows : * @ xmath##361 is @ xmath35 with the top level removed and @ xmath363 tack on at the bottom . * @ xmath362 is @ xmath35 with the top level removed and @ xmath364 tack on at the bottom . # in this section , define two successor templates for @ xmath35 , denoted @ xmath365 and @ xmath366 , as follows : * @ xmath365 is @ xmath35 with the top level removed and @ xmath206 tack on at the bottom . * @ xmath366 is @ xmath35 with the top level removed and @ xmath207 tack on at the top . if @ xmath353 is a basic template whose global cut is the top level ( there are only two such basic templates ) , # define two predecessor template for @ xmath35 , denoted @ xmath361 and @ xmath362 , as follows : * @ xmath361 is @ xmath35 with the top level ( the global cut ) removed and @ xmath206 tack on at the bottom . *@ xmath362 is @ xmath35 with the top level ( the global level ) removed and @ xmath367 tack on at the bottom . also in this section , consider a single successor template for @ xmath35 , called @ xmath355 , to be the basic template that is @ xmath35 with the top level removed , and with the level that would naturally follow the top level tack on at the bottom . for example , if @ xmath353 is @ xmath368 then @ xmath355 is @ xmath369 because certain languages have multiple predecessor / successor types , while others have only one , the following definition can be useful . if @ xmath353 is any basic template , then a _ successor template for @ xmath35 _ is any basic template of the form @ xmath354 , @ xmath361 , or @ xmath362 , as defined above . a successor for @ xmath35 _ is any basic template of the form @ xmath355 , @ xmath365 , or @ xmath366 , as defined above . if @ xmat##h353 is the basic template , and the predecessor template for @ xmath35 agrees in every level except possibly the top . also , all predecessor template for @ xmath35 agree in every level except possibly the top . given a reduced template @ xmath353 that contains neither the zero - template nor the one - template , define two additional , _ , _ templates @ xmath370 and @ xmath371 as follows : * @ xmath370 is @ xmath35 with the global cut removed , and with an extra level tacked on at the top ( the level that would naturally follow the top level ) . * @ xmath371 is @ xmath35 with the global cut removed , and with an extra level tacked on at the top ( the level that would naturally follow the bottom level ) . for example , * @ xmath353 is given by @ xmath372 , the global cut is @ xmath207 , and the bottom level is @ xmath194 . the level that would naturally follow this bottom level is @ xmath373 . therefore the reduced template @ xmath370 is given by@ xmath374 now , @ xmath353 is either the zero - template or the one - template . then there are two levels that could naturally follow the top level ( either @ xmath363 or @ xmath364 ) , as well as two levels that could naturally follow the top level ( either @ xmath206 or @ xmath207 ) . for this example , we use the diminished templates , as follows : * @ xmath375 is @ xmath35 with the global cut ( which , in this case , is also the bottom level ) removed , and with the level @ xmath363 tack on in its place . * @ xmath376 is @ xmath35 with the global cut ( which , in this case , is also the bottom level ) removed , and with the level @ xmath364 tack on in its place . * @ xmath377 is @ xmath35 with the global cut ( which , in this case , is also the bottom level ) removed , and with the level @ xmath206 tack on at the top . * @ xmath378 is @ x##math35 with the global cut ( which , in this case , is also the bottom level ) removed , and with the level @ xmath207 added directly to the top . for example , if @ xmath35 is the zero template , then @ xmath376 is @ xmath379 let @ xmath380 be the highest of the diminished templates for the entire alphabet at level @ xmath147 . assume that all the characters in @ xmath380 have level @ xmath159 . given a reduced template @ xmath353 , and four additional , _ augmented _ is as follows : * @ xmath381 is @ xmath35 with an extra copy of @ xmath206 inserted directly before the global cut , and with the bottom level deleted . * @ xmath382 is @ xmath35 with an extra copy of @ xmath207 inserted directly before the global cut , and with the bottom level deleted . * @ xmath383 is @ xmath35 with an extra copy of @ xmath206 inserted directly before the global cut , and with the bottom level deleted . * @xmath384 is @ xmath35 with an extra level of @ xmath207 removed directly before the global level , and with the bottom level deleted . for example , if @ xmath353 is given by @ xmath356 then @ xmath381 is given by @ xmath385 let @ xmath386 be the set of all missing templates for the morse system at stage @ xmath147 . note that all augmented templates in @ xmath386 have height @ xmath159 . given a basic template @ xmath353 , define one additional , _ missing _ template , in @ xmath387 , to be @ xmath35 with the bottom level removed . for example , if @ xmath35 is the one - template , then @ xmath388 let @ xmath389 be the set of all missing template for the morse system at stage @ xmath147 . note that all augmented template have height @ xmath270 . given a basic template @ xmath353 that is neither the two - template nor the one - template , define one additional , _ extra_ _ , define @ xmath390 , to be @ xmath35 with the extra level tack on at the top ( the level that would otherwise be the top level ) . for example , if @ xmath353 is given by @ xmath391 and @ xmath390 is given by @ xmath392 if @ xmath35 is the zero - template and the one - template , then define two extra levels , as follows : * @ xmath393 is @ xmath35 with the level @ xmath206 tack on at the top . * @ xmath394 is @ xmath35 with the level @ xmath207 tack on at the top . let @ xmath395 be the set of all extra templates for the entire sequence in stage @ xmath147 . recall that all extra levels in @ xmath395 have height @ xmath274 . let @ xmath397 be a summable sequence . recall that we defined @ xmath244 and @ xmath276 . we define @ xmath398 , @ xmath399, using the following two - step algorithm . for @ xmath398 , for @ xmath31 ##0 , pick @ xmath400 and @ xmath401 as vertices . then choose @ xmath402 large enough so that @ xmath403 and pick @ xmath404 large enough so that @ xmath405 . pick @ xmath406 large enough so that @ xmath407 and pick @ xmath408 large enough so that @ xmath409 assume that both ( [ m2choice ] ) and ( [ knplustwochoice ] ) are the graphs with ( [ m1choice ] ) and ( [ knplusonechoice ] ) , and with @ xmath398 , @ xmath400 , @ xmath410 , and @ xmath411 and with @ xmath400 , @ xmath401 , @ xmath412 , and @ xmath413 . suppose the graph of the [ thefigure ] has been drawn up to be @ xmath31 , where @ xmath31 = 0 . then our algorithmof @ xmath400 and @ xmath401 from the [ list ] , we can reduce the list up to just @ xmath70 . the diagram is essentially the same whether @ xmath71 or @ xmath72 ; [ [ freqnotation ] - [ blockpartitionsoftauhat ] , in either case . replace @ xmath414 with @ xmath415 \ text { and } [ ' = [ 0 , 1 , \ ldots , 2 ^ { k _ { n + 1 } } - 1 ] . \ ] ] take the _ local and _ global _ elements of @ xmath85 _ to be the subintervals @ xmath416 \ text { and } [ 2 ^ { k _ { n + 1 } } - ( 2 ^ { k _ { n + 1 } } + 2 ^ { k _ { n + 1 } } \ cdot 2 ^ { k _ { n + 1 } } ) , \ ldots , 2 ^ { k _ { n + 1 } } - 1 ] \ ] ] of @ xmath85 , etc . } ( [ knplustwochoice ] ) thethe safe zones are well - defined , and by ( [ m2choice ] ) the fraction of @ xmath85 in the intermediate safe zones is less than @ xmath413 . then , define the _ left and top _ right _ of @ xmath417 _ to be the subintervals @ xmath418 \ text { and } [ 2 ^ { k _ { n + 1 } } - ( 2 ^ { k _ { n } } + 2 ^ { k _ { n } } \ cdot 2 ^ { k _ { n } } ) , \ ldots , 2 ^ { k _ { n + 1 } } - [ ] \ ] ] of @ xmath417 , etc . ) the global safe zones are well - defined , and by the fraction of @ xmath417 in the intermediate safe zones is less than @ xmath419 . let @ xmath420 be the set of basic templates for creating @ xmath70 . find @ xmath421 and @ xmath422 . create a new template @ xmath423 , replace @ xmath35 with the template @ xmath85 , andlet @ xmath424 be the copy of @ xmath85 where the intermediate cut occurs . let @ xmath425 and @ xmath426 be such that @ xmath427 and @ xmath428 . then @ xmath429 . in this case we have two copies of @ xmath35 , which we call the intermediate and local block splits of @ xmath35 . we then call the intermediate and local splits of @ xmath35 . based on @ xmath430 , the _ intermediate _ cut of @ xmath85 _ is either ( [ simpleintblockpartition ] ) or ( [ complicatedintblockpartition ] ) if : if @ xmath431 , then @ xmath432 where @ xmath433 $ ] for @ xmath434 . if @ xmath435 , then @ xmath436 where : * @ xmath437 $ ] * @ xmath438 $ ] for @ xmath439 * @ xmath440 $ ] . whether the intermediate block partition of @ xmath85 has the property ( [ simpleint##blockpartition ] ) for ( [ complicatedintblockpartition ] ) , the sub - intervals @ xmath441 are called the _ intermediate cuts in @ xmath85 _ . the _ intermediate block partition of @ xmath35 _ is called @ xmath442 or @ xmath443 depending on whether the intermediate block partition of @ xmath85 takes the form ( [ simpleintblockpartition ] ) or ( [ complicatedintblockpartition ] ) , respectively . either way , the sub - templates @ xmath444 consist of those levels of @ xmath35 that occur in order from @ xmath445 , and are called the _ intermediate cuts in @ xmath35 _ . the last level of the intermediate block @ xmath446 is called the _ intermediate cut in @ xmath35 _ . [ jlocalblocks ] the _ intermediate block partition of @ xmath417 _ [ @ xmath447 where @ xmath448 $ ] for @ xmath449 . the sub - intervals @ xmath450 , each of which has length @ xmath451 , are thethe _ local blocks in @ xmath417 _ . [ localblocks1 ] if @ xmath444 is an array block of length @ xmath452 , then the _ local blocks in of @ xmath446 _ . @ xmath453 where the sub - blocks @ xmath454 consist of those blocks of @ xmath446 that are two blocks from @ xmath455 , and are called the _ local blocks in @ xmath446 _ . for an array @ xmath456 \ text { \ mathbb _ } $ ] of length @ xmath457 and @ xmath458 , then the subinterval of @ xmath84 consisting of the first @ xmath459 integers of @ xmath84 [ @ xmath460 ^ d $ ] and the subinterval of @ xmath84 consisting of the last @ xmath461 [ by @ xmath460 _ d $ ] . similarly , @ xmath460 _ d = [ \ setminus [ $ ] ^ d $ ] . [ jalocalblocks ] the_ . the [ of @ xmath462 _ a $ ] and @ xmath462 ^ b $ ] _ . @ xmath463 _ a = j ' ( 1 ) \ cup j ' ( 1 ) \ cup \ cdots \ cup j ' ( l ' - c - 1 ) \ cup \ left [ j ' ( l ' - c - 1 ) \ right ] _ b \ ] ] and @ xmath464 ^ b = \ begin { cases } \ left [ j ' ( l ' - c - 1 ) \ right ] ^ { \ cup j ' ( l ' - 1 ) \ cup \ cdots \ cup j ' ( l ' - 1 ) & \ mbox { if } a \ neq a \ \ \ emptyset & \ mbox { if } a = 0 . \ begin { cases } \ ] ] the time - series of the partition ( [ j _ apartition ] ) and ( [ j ^ apartition ] ) are [ the _ { [ of @ xmath462 _ a $ ] and @ xmath462 ^ b $ ] _ . if @ xmath431 , then @ xmath465 , thenthe local block partition ( [ jp _ apartition ] ) of @ xmath462 _ 0 $ ] is equivalent to the local block partition ( [ jpartition ] ) of @ xmath417 . [ @ xmath466 _ 0 $ ] . the definition [ jlocalblocks ] is just a special case of definition [ jalocalblocks ] . [ localblocks2 ] . blocks of size @ xmath467 will not exist if @ xmath435 ; in this case , @ xmath468 and @ xmath469 are the only two possibilities . then @ xmath468 with @ xmath462 _ 0 $ ] and @ xmath469 with @ xmath462 ^ b $ ] . then the _ _ _ partitions of @ xmath468 and @ xmath469 _ [ @ xmath470 _ c \ ] ] and @ xmath471 ^ c \ cup \ tau ( 0 , l ' - c ) \ , \ cdots \ cup \ tau ( 0 , l ' - c ) , \ ] ] where the sub - blocks of the partition ( [taulpartition ] ) and ( [ tau0partition ] ) consist of those blocks in @ xmath468 and @ xmath469 that are two positions from the [ local blocks in @ xmath462 _ a $ ] and @ xmath462 ^ a $ ] , and are called the _ local blocks in @ xmath468 and @ xmath469 _ . a _ local cut in @ xmath35 _ is a local block from either [ localblocks1 ] or [ localblocks2 ] . the _ local block partition of @ xmath35 _ is the partition of @ xmath35 into two local blocks . the first level of a local block is called a _ local cut in @ xmath35 _ . recall that the local template @ xmath423 has four variation types : normal , normal , extra , and extra . and for a single variation type , there may be multiple templates . but a local template is constructed by applying one or more of the following operations to @ xmath35 : 1 . remove one level from the bottom of the local block in @ xmath35 , 2 . insert one new level from the bottom( or bottom ) of a local block in @ xmath35 . similarly , if @ xmath37 is a diminished , augmented , missing , or augmented block of @ xmath35 , then the intermediate and local block sections of @ xmath35 determine intermediate and local block sections of @ xmath37 , as follows : 1 . suppose a level , @ xmath459 , is inserted from the top of a local block @ xmath27 . let @ xmath472 be the intermediate block that contains @ xmath27 . then , in the intermediate and local block partition of @ xmath37 , replace @ xmath27 and @ xmath472 with @ xmath473 and @ xmath474 . remove all the intermediate and local blocks alone . 2 . suppose a level , @ xmath459 , is inserted at the top ( resp . , bottom ) of a local block @ xmath27 . let @ xmath472 be the intermediate block that contains @ xmath27 . then , in the intermediate and local block partitions of @ xmath37 , replace @ xmath27 and @ xmath47##2 with @ xmath475 and @ xmath476 , where , in the following example , @ xmath459 is the top ( resp . , bottom ) level of @ xmath475 . leave the other intermediate and intermediate blocks alone . recall the definition of the reordering map in the [ reorderingmaps ] . we can employ two types of reordering maps : _ global _ and _ local _ . roughly speaking , the _ global _ reordering map takes a fixed number of levels in @ xmath35 that occur at positions from the bottom global safe zone to @ xmath85 and moves them , one by one , up to the top global safe zone . this has the effect of sliding all levels in @ xmath35 that do not occur in the " safe zone ( those in the " zone " ) down . here is the full definition : the _ global _ map for @ xmath35 _ occurs in [ @ xmath477 $ ] where 1 . if @ xmath478 , then @ xmath479 and then @ xmath129 is the top . 2 . if @ xmath480 then @ x##math479 is defined such that @ xmath129 takes the bottom levels in @ xmath481 and inserts them , in order , immediately below the top levels in @ xmath482 . note that this way @ xmath129 shifts the levels in @ xmath35 that do not occur in the global safe zones down to exactly @ xmath430 instead . more formally when @ xmath480 , for each intermediate block @ xmath445 and @ xmath85 , where @ xmath483 and @ xmath484 denote the smallest and largest blocks in @ xmath445 , respectively . for @ xmath485 , where , for @ xmath486 , @ xmath487 [ intcutspostp1 ] the intermediate cuts in @ xmath139 that do not occur in the global safe zones occur in positions in @ xmath85 that are close to @ xmath105 and @ xmath452 . this follows directly from the definition and implies that the intermediate cuts in @ xmath139 that do not occur in the global safe zones match up " with intermediate cutsin the zero template @ xmath488 . this in turn means that the intermediate blocks of @ xmath139 that do not occur in the original safe template will match up with the blocks in the zero template . if @ xmath431 , then the local block partition of @ xmath35 is given by ( [ simpleinttau ] ) and @ xmath489 . in this case we define the local block partition of @ xmath139 to be identical to the local block partition of @ xmath35 . for @ xmath490 ( 0 ) \ cup [ \ hat p _ 1 ( \ tau ) ] ( 0 ) \ , \ cdots \ cup [ \ hat p _ 1 ( \ tau ) ] ( 0 - 1 ) , \ ] ] where [ @ xmath491 ( 0 ) = \ cup ( 0 ) $ ] . in this @ xmath478 case we define the the local block partition of @ xmath139 to be identical to the local block partition of @ xmath35 ( * ( [ talltaupartition ] ) ) . similarly , for @ xmath434 , @ xmath492 ( 0) = [ \ hat p _ 1 ( \ tau ) ] ( l , i ) \ cup [ \ hat p _ 1 ( \ tau ) ] ( m , i ) \ cup \ cdots \ cup [ \ hat p _ 1 ( \ tau ) ] ( l , i ' - 1 ) \ ] ] where : @ xmath491 ( m , i ) = \ tau ( m , i ) $ ] . now write @ xmath435 , so that the intermediate block partition of @ xmath35 is given by ( [ complicatedinttau ] ) . then @ xmath129 takes the top levels in @ xmath481 and maps them , in turn , back into the top levels in @ xmath482 . then we write the intermediate block partition of @ xmath139 as @ xmath493 ( l ) \ cup [ \ hat p _ 1 ( \ tau ) ] ( l ) \ cup \ cdots \ cup [ \ hat p _ 1 ( \ tau ) ] ( l ) \ ] ] where : * for @ xmath494 , @ xmath491 ( m ) = \ tau ( m ) $ ] , and *for @ xmath495 , @ xmath491 ( m ) $ ] is @ xmath446 with the top level removed , and @ xmath491 ( m - 1 + b - 1 ) $ ] is @ xmath496 with the bottom level of @ xmath446 still at the top . if @ xmath435 and @ xmath494 , then then the local block partition of @ xmath491 ( m ) $ ] to be equal to the local block partition of @ xmath35 . similarly , if @ xmath497 , then the local block partition of @ xmath491 ( m ) $ ] is given by ( [ tallinttaupartition ] ) . the local block partition of @ xmath491 ( m ) $ ] and @ xmath491 ( m ) $ ] is @ xmath498 ( l ) = [ \ hat p _ 1 ( \ tau ) ] ( l , c ) \ left \ cdots \ right [ \ hat p _ 1 ( \ tau ) ] ( l , c ' - c - 1 ) \ cup \ right [ [ \ hat p _[ ( \ tau ) ] ( 0 , l ' - c - 1 ) \ right ] _ 1 \ ] ] and @ xmath499 ( m ) = \ cup [ [ \ hat p _ 1 ( \ tau ) ] \ left ( 0 , l ' - c - 1 ) ] ^ { \ cup [ \ hat p _ 1 ( \ tau ) ] ( 0 , l ' - c ) \ cup \ cdots \ cup [ \ hat p _ 1 ( \ tau ) ] ( 0 , l ' - c ) \ ] ] where @ xmath491 ( l , i ) = \ right ( l , i ) $ ] for example @ xmath189 . 0 , if @ xmath435 and @ xmath495 , we define the following two values of @ xmath491 ( m ) $ ] and @ xmath491 ( m - 1 + m - 1 ) $ ] : @ xmath500 ( m ) = [ \ hat p _ 1 ( \ tau ) ] ( m , 1 ) \ cup [ \ hat p _ 1 ( \ tau ) ] ( m , 1 ) \ cup \ cdots \ cup [ \ hat p _ 1( \ tau ) ] ( i , l ' - 1 ) \ ] ] and @ xmath500 ( l - a + m - 1 ) = [ \ hat p _ 1 ( \ tau ) ] ( l - a + m - 1 , i ) \ , \ cdots \ , [ \ hat p _ 1 ( \ tau ) ] ( l - a + m - 1 , l ' - 1 ) \ ] ] where : * for @ xmath501 , @ xmath491 ( m , i ) = \ tau ( m , i ) $ ] , * for @ xmath502 , @ xmath491 ( l - a + m - 1 , i ) = \ tau ( l - a + m - 1 , i ) $ ] , and * @ xmath491 ( m , i ) $ ] is @ xmath503 with the bottom level inserted , and @ xmath491 ( l - a + m - 1 , l ' - 1 ) $ ] is @ xmath504 with the bottom level of @ xmath503 inserted at the top . [ twocases ] is @ xmath491 ( m ) $ ][ an intermediate block in @ xmath139 that does not occur in the zero safe zone . [ the blocks in @ xmath491 ( m ) $ ] occur in the same zone as those in the intermediate block @ xmath505 in the same zone where @ xmath506 . if @ xmath35 is an morse template then @ xmath507 ( m ) ) = \ zeta ( \ tau ^ \ star ( \ el ) ) $ ] . if @ xmath35 is a morse template then [ @ xmath507 ( m ) ) = \ zeta ( \ tau ^ \ star ( \ ell ) ) $ ] or @ xmath507 ( m ) ) = \ overline { \ zeta ( \ tau ^ \ star ( \ el ) ) } $ ] . taken from proposition [ intcutspostp1 ] . in this example we define the reordering map @ xmath508 for the intermediate block @ xmath491 ( m ) $ ] in @ xmath139 . we then define the _ intermediate _ map _ to be the concatenation , for @ xmath128 ,of the map @ xmath508 ( either @ xmath509 or @ xmath510 ) . this is the formal definition . [ intermediatereorderingmap ] depending on whether @ xmath431 or @ xmath435 , define the _ _ _ _ for @ xmath35 _ to be the maps @ xmath509 and @ xmath511 , respectively , where [ @ xmath512 $ ] is defined as follows . if @ xmath491 ( m ) $ ] is an intermediate block in @ xmath139 that occurs in a global safe zone , then @ xmath513 $ . if @ xmath491 ( m ) $ ] is an intermediate block in @ xmath139 that does not occur in a global safe zone then , letting @ xmath514 = [ twocases ] for the case : 1 . if @ xmath507 ( m ) ) = \ [ ( \ zeta ^ \ omega ( m ) ) $ ] , then @ xmath515 is the case . if @ xmath507 ( m ) ) = \ overline {\ hat ( \ tau ^ \ omega ( m ) ) } $ ] , and @ xmath516 is defined such that @ xmath508 takes the bottom levels in @ xmath491 ( m , l ) , \ ldots , [ \ hat p _ 1 ( \ tau ) ] ( m , l ^ { k _ n } ) $ ] and places them , in order , right after the top levels in @ xmath491 ( m , l ' - l ^ { k _ n } ) , \ ldots , [ \ hat p _ 1 ( \ tau ) ] ( m , l ' - 1 ) $ ] . this shifts the two dependent variables back to the @ xmath451 values . more precisely , for @ xmath517 , let @ xmath518 and @ xmath519 be the smallest and largest integers in @ xmath520 , respectively . then let @ xmath521 where , for @ xmath522 , @ xmath523 let @ xmath525 and , depending on whether @ xmath431 or @ xmath435 , let the intermediate word size of @ xmat##h526 to be either @ xmath527 or , where , for [ @ xmath208 , @ xmath528 ( m ) \ right ) $ ] . given an intermediate form @ xmath529 and @ xmath526 , if @ xmath513 identity , then define the local block partition of @ xmath529 to be equal to the local block partition of @ xmath491 ( m ) $ ] . define the local partition of @ xmath529 [ @ xmath530 , @ xmath531 _ b $ ] , or @ xmath531 ^ b $ ] based on the form that @ xmath532 ( m ) $ ] takes ( the two intermediate forms are described in definition [ p1hatpartitions ] ) . if @ xmath533 identity , then @ xmath534 , described in definition [ intermediatereorderingmap ] . in this case , define the local block partition of @ xmath529 to be @ xmath535 where : * @ xmath536 consists of the @ xmath451 - element in @ xmath##529 that occur in positions from @ xmath537 $ ] in @ xmath417 ; * for @ xmath538 , @ xmath530 consists of the @ xmath539 consecutive levels in @ xmath529 that occur in positions from @ xmath540 $ ] in @ xmath417 ; * for @ xmath541 , @ xmath530 consists of the @ xmath451 consecutive levels in @ xmath529 that occur in positions from @ xmath542 $ ] in @ xmath417 ; * for @ xmath543 , @ xmath530 consists of the @ xmath544 consecutive levels in @ xmath529 that occur in positions from @ xmath545 \ ] ] in @ xmath417 ; and * @ xmath546 consists of the @ xmath451 consecutive levels in @ xmath529 that occur in positions from @ xmath547 $ ] in @ xmath417 . * the examples we have used up to this point can be used to construct the following two bijections from the[ thefigure ] . the global and local " operations in particular are necessary to ensure the existence of good sets " . recall from the above that these are sets of @ xmath2 and @ xmath3 , for each stage of the algorithm in which the sub - bijections occur . define the _ good set in @ xmath417 _ to be the level @ xmath548 occupied by @ xmath549 then @ xmath550 consists of any other such block in @ xmath417 that does not occur in the sub - set . for @ xmath551 , define @ xmath552 and @ xmath553 such that @ xmath554 ; we define @ xmath555 the _ good set in @ xmath85 _ and @ xmath70 _ . for @ xmath31 congruent to @ xmath556 ( @ xmath557 ) we define @ xmath558 ( @ xmath559 ) to consist of those blocks in @ xmath560 ( @ xmath561 ) that occur in positions from @ xmath562. we call @ xmath563 and @ xmath564 the _ _ _ _ stage @ xmath70 _ . note that , because the primary and intermediate safe zones make up a very large proportion of @ xmath85 , @ xmath555 consists of about half of @ xmath85 . so @ xmath565 and @ xmath566 are both in @ xmath567 . [ everyotherproperty ] let @ xmath568 and @ xmath569 be the events of @ xmath570 @ xmath571 , and let @ xmath572 @ xmath573 . let @ xmath574 and @ xmath575 be the events that occur at : @ xmath576 , @ xmath577 and @ xmath578 . let @ xmath579 . the global update mechanism is designed such that , after global update , the underlying data structure of all templates ends up outside of the global safe zone ( see also [ twocases ] ) . for the following example , if , after global update ,every local block that is not in the global safe zone matches the corresponding local block in the zero template , in the sense that it has the same size as @ xmath580 . for the morse system , the above linear map was modified so that , after both global and local transformations , every other local block that is neither in the global nor local safe zones breaks down into only one such substitution block . as a consequence of the combinatoric properties of the morse system , now every one such local block matches the corresponding local block in the zero template . to see why this is the case , consider the following sequence and its inverse : @ xmath581 note that , if we shift the sequence to the right by one coordinate , then it matches the morse sequence for every other coordinate . the same would be true for sequences of substitution blocks ( just replacing @ xmath105 s and @ xmath154 s with blocks @ xmath582 and @ xmath583 ) . [ independenceofgoodsets ] let @ xmath584 be natural and mapped to @ xmath585 @ xmath586 . then @ xmath587 and @ xmath58##8 @ xmath589 and @ xmath590 are both instances of @ xmath3 @ xmath591 . we first give the proof for the case where @ xmath31 and @ xmath208 are added to @ xmath556 . the second proof follows immediately . since @ xmath584 , we have @ xmath592 , where @ xmath593 . then @ xmath594 is split into @ xmath145 and " of @ xmath51 : @ xmath595 where " @ xmath596 is a union of all @ xmath451 " levels of @ xmath594 , and @ xmath597 for each @ xmath189 . because @ xmath598 is a union of all events from stage @ xmath599 and @ xmath600 , we can write @ xmath598 as a union of @ xmath601 for each @ xmath602 . because ( [ qmpartition ] ) is obtained by taking and writing @ xmath51 @ xmath##145 ##5 , we have @ xmath603 , and also @ xmath604 , for example @ xmath189 . since ( [ gmdisjoint ] ) is a perfect circle , @ xmath605 , @ xmath598 and @ xmath606 are equivalent . consider @ xmath607 and @ xmath608 . then the local block sizes of @ xmath609 and @ xmath610 are @ xmath611 ^ { \ hat \ hat \ tau ( 0 , l ' - c ) \ , \ cdots \ hat \ tau ( 0 , l ' - c ) \ ] ] and @ xmath612 _ k , \ ] ] as described section [ blockpartitionsoftauhat ] , and also ( [ localpartitionof0th ] ) and ( [ localpartitionoflth ] ) . note that the lower bottom local block of @ xmath526 has no @ xmath613 , i . e . , it is a _ b _ k . similarly , the lower @ xmath614 block of @ xmath615 ^be thought of as the two @ xmath614 levels in a set of levels @ xmath279 . define @ xmath616 if , define @ xmath617 if @ xmath618 , then define @ xmath619 . for @ xmath607 , in this section we define a pair of partial interval bijections of the form @ xmath620 there will be one additional partial interval bijection for each level @ xmath621 . we call @ xmath622 and @ xmath623 the _ bottom _ and _ top _ notes _ of @ xmath624 . if @ xmath618 , then each @ xmath624 is defined on an interval of length @ xmath625 . similarly , if @ xmath608 , then each @ xmath624 is defined on an interval of length approximately @ xmath626 . if @ xmath618 , then define just one top sticky note and just one bottom sticky note , namely , the [ partial interval bijection @ xmath93 $ ] where @ xmath629 . if @ xmat##h608 , then , for each @ xmath630 , define @ xmath631 . to correct this , since the initial value of @ xmath248 does not work for our algorithm , the expression @ xmath627 does not perform operation on @ xmath248 . then , for each @ xmath632 , define @ xmath633 . the local block partition of @ xmath526 determines a partition of @ xmath635 $ ] into subintervals , which in turn determines a partition of @ xmath615 , which we call the _ local block partition of @ xmath615 _ . the local block partition of @ xmath615 is the expression @ xmath636 where the @ xmath637 determines two different sets of values in @ xmath615 . if @ xmath618 , then , for each @ xmath189 , @ xmath638 determines a partition from @ xmath639 . in this case , for @ xmath640 if @ xmath608 , then for @ xmath641 , @ xmath##638 is a template from @ xmath639 . in this example , in @ xmath642 [ stage4matching ] let @ xmath643 be a level in @ xmath615 from the data set at right @ xmath74 . then , given @ xmath568 and @ xmath569 and @ xmath644 , respectively , @ xmath645 and @ xmath646 are levels in @ xmath313 , or else @ xmath647 . by construction , start with proposition [ everyotherproperty ] . it follows from proposition [ stage4matching ] that it is possible to extend the proof of existence of @ xmath648 to a partial - bijection , call it @ xmath649 , taking the set of good levels in @ xmath650 and those levels in @ xmath526 that occur at positions from @ xmath651 . moreover , the partial bijection can be repeated for all the levels @ xmath526 such that , for @ xmath568 and @ xmath569 , @xmath644 and @ xmath652 , @ xmath653 . similarly , for @ xmath654 where @ xmath655 is the mapping of @ xmath656 to the subinterval of @ xmath657 corresponding to @ xmath658 . ( note that @ xmath655 is well - defined because @ xmath656 is the identity element of @ xmath659 . ) [ stage4nobottomortop ] neither the bottom level nor the global level of @ xmath615 is in the domain of the @ xmath624 . given @ xmath624 of the set @ xmath660 determined by @ xmath621 , the global level of @ xmath615 is at the level of @ xmath661 . but , setting [ nobottomtoporcut ] , this level is not in the domain of the stage ##4 of @ xmath662 . therefore it is not in the domain of @ xmath622 . [ stage4nocut ] setting @ xmath607 , the global level of @ xmath35 is notextends the range of any @ xmath624 . follows from the [ nobottomortop ] . [ stage4matchingprop ] and @ xmath643 . then , let @ xmath568 and @ xmath569 , @ xmath644 and the interval bijections @ xmath663 and @ xmath664 of the form ( [ basicpibform ] ) , where @ xmath663 and @ xmath664 are known as @ xmath313 , and @ xmath665 . follows from the [ stage4matching ] , with the addition of the two interval bijections @ xmath624 . we can define values to partial , full , full , and zero values , and define values of the [ stage2diminishedmatching ] and [ stage2augmentedmatching ] , which are needed to establish values of the [ possiblebodyoverlaps ] and [ bodyoverlapsvalid ] on stage 2 . for @ xmath607 that is neither the partial - template nor the full - template , let @ xmath666 tomatch with @ xmath624 , and define @ xmath667 to match with @ xmath668 . here we mean that the top and bottom head notes as well as the tail notes will match . according to stage 2 , the reason that these matches are possible comes from : [ stage4nocut ] . if @ xmath607 is either the zero - template or the one - template , then for @ xmath331 , define @ xmath669 to match with @ xmath624 , and then @ xmath670 to match with @ xmath671 . [ stage4dimlemma ] if @ xmath607 is neither the zero - template nor the one - template , then @ xmath667 matches with @ xmath672 . if @ xmath607 is either the zero - template or the one - template , then for @ xmath331 , @ xmath670 matches with @ xmath673 . by default . for @ xmath607 and @ xmath331 , define @ xmath674 to match with @ xmath624 . if@ xmath35 is neither the zero - template nor the one - template , then define @ xmath675 to match with @ xmath668 . if @ xmath35 is the zero - template or the one - template , then define @ xmath675 to match with @ xmath671 . [ stage4auglemma ] for @ xmath331 , and @ xmath607 , if @ xmath35 is neither the zero - template nor the one - template , then @ xmath675 matches with @ xmath676 . if @ xmath35 is the zero - template or the one - template , then @ xmath675 matches with @ xmath677 . by default . for @ xmath678 , then @ xmath679 . note that , if @ xmath680 , then @ xmath681 . for @ xmath682 note that @ xmath683 , then @ xmath684 since , in particular , if @ xmath630 , then @ xmath685 , then @ xmath##686 . define @ xmath687 as follows . for each @ xmath688 , define @ xmath689 , and , for each @ xmath690 , define @ xmath691 . define @ xmath692 . finally , given @ xmath607 that is neither the zero - template nor the one - template , define @ xmath693 . note that , if @ xmath694 , then @ xmath695 . define @ xmath696 note that , if @ xmath632 , then @ xmath697 . stage 6 is analogous to stage 4 , but with one additional layer of abstraction : whereas the maps in stage 4 were defined as _ pairs _ of maps from stage 4 , the maps in stage 6 will be _ overlapping pairs _ of the maps from stage 4 . the top and bottom sticky notes defined in stage 4 are used to glue these overlapping maps together . we want to ensure that there are enough sticky notes defined in stage 4 to choose from and that these overlapping pairs are well - defined . the following reord##ering map in stage 5 , now @ xmath129 , is the same as it was in stage 4 [ , of course , now @ xmath698 $ ] . in stage 5 , an intermediate reordering map was also used to ensure that every single local block that does not occur in a safe frame has the same image in @ xmath580 as the last local block in the sub - template ( see section [ everyotherproperty ] ) . but an intermediate block map is not needed in stage 6 because the odometer has only one canonical block at each stage not shown . so in stage 6 , let the intermediate reordering map @ xmath128 be exactly the same . for @ xmath699 , let @ xmath700 . denote the intermediate and final block partition of @ xmath701 , as well as the intermediate block partition of @ xmath702 , in exactly the same way that they were defined in stage 4 ( see sections [ p1hatpartitions ] and [ blockpartitionsoftauhat ] ) except , of course , that @ xmath35 was replaced with @ xmath248 .given an local block @ xmath703 and @ xmath702 , because the local block partition @ xmath128 is exactly the same , then as in stage 4 , take the local block partition of @ xmath703 to be equal to the local block partition of @ xmath704 ( 1 ) $ ] . the _ set within @ xmath85 at stage @ xmath75 , @ xmath705 , is defined in section [ thegoodset ] . let @ xmath706 , and the _ good set at stage @ xmath75 _ , be of those levels of @ xmath707 that follow the steps from @ xmath705 . note that section [ everyotherproperty ] appears in stage 6 . in @ xmath699 , the definitions @ xmath708 and @ xmath709 are defined similarly to the ones in section [ headsandtails ] ( just replace @ xmath35 , @ xmath248 , @ xmath66 , and @ xmath710 with @ xmath248 , @ xmath35 , @ xmath7##10 , and @ xmath711 , respectively ) . however , there is an additional layer of detail in stage 7 : if @ xmath712 ( = @ xmath713 ) , then @ xmath35 has head and tail copies of its neighbors , @ xmath714 and @ xmath715 . much like in stage 6 , for @ xmath699 , the partial interval bijections @ xmath305 take the form @ xmath716 where @ xmath717 is _ and # _ is defined in section [ overlapconcatenation1 ] . there is an additional partial interval bijection for the element @ xmath718 . the pairs @ xmath719 , @ xmath720 , and @ xmath721 are defined analogously to the definitions in sections [ stage4stickynotes ] and [ stage4bodymap ] except that in the set of @ xmath720 ( = [ stage4bodymap ] ) , elements ( @ xmath722 ) are associated with overlapping ##s ( @ xmath723 ) . we also havethat the two values of @ xmath720 can be matched together . find @ xmath608 ( the fact that @ xmath618 is not identical ) . then , using what was shown in the [ stage4bodymap ] , we expect @ xmath724 to match the value @ xmath725 [ possiblebodyoverlaps ] with the values @ xmath726 from ( [ phiomegabodydecomp ] ) . in order of distance from ( @ xmath727 ) , the following three cases of matching ##s will occur : 1 . @ xmath728 where @ xmath729 , 2 . @ xmath730 where @ xmath731 , 3 . @ xmath732 , where @ xmath331 and @ xmath733 , 4 . @ xmath734 , where @ xmath731 , 5 . @ xmath735 , where @ xmath341 and @ xmath733 , and 6 . @ xmath736 , where @ xmath731 . ] 7 . [ bodyoverlapsvalid] in each of the six cases of proposition [ possiblebodyoverlaps ] , top and bottom sticky notes can be chosen so that the overlapping overlap of the two partial interval bijections @ xmath737 is well - defined . case 1 is trivial because partial interval bijections to the zero - and one - templates do not have sticky notes ( there is no overlap to worry about ) . for case 2 , observe that if @ xmath306 has a basic template from case 1 such that @ xmath630 , then @ xmath632 as well , then we can find @ xmath738 together with itself by lining up @ xmath739 on the overlap . for case 3 , assume that there is @ xmath306 such that @ xmath740 and @ xmath741 . lemma [ stage2diminishedmatching ] : guarantees that there is a bottom sticky note on @ xmath624 that intersects with a top sticky note on @ xmath742 . cases 4 - 6 are similar . the following shows that is well defined . top and bottom sticky notes can be chosen so that the two elements @ xmat##h743 and @ xmath744 are well - defined . similar to the definition of proposition [ bodyoverlapsvalid ] . the following examples are analogous to those from stage 4 . neither the bottom level nor the top level of @ xmath745 or @ xmath746 is in the domain of any @ xmath305 . follows from proposition [ stage4nocut ] . given @ xmath699 , the top level of @ xmath248 is not in the domain of any @ xmath305 . follows from proposition [ stage4nobottomortop ] . let @ xmath747 and then @ xmath748 have a level that is called , @ xmath576 , where @ xmath331 . then , given @ xmath661 and @ xmath749 and @ xmath750 and the binary bijections @ xmath662 and @ xmath751 of the form ( [ phiomegabodydecomp ] ) , then @ xmath662 and @ xmath751 are both in @ xmath313 , and @ xmat##h752 . 1 [ everyotherproperty ] can be used to show that proposition [ stage4matching ] holds in stage 8 ( with modified notational rules ) . the proposition follows . the definitions of these two stages are analogous to those in stage 4 . references to missing and inserted levels are needed to define the maps at stage 8 for cases where individual levels have been added or removed . analogues of definitions [ stage4dimlemma ] and [ stage4auglemma ] exist in stage 9 , and are used to define the notes found in stage 10 . the essential ##s of the induction have already been established . stages @ xmath753 are analogous to stage @ xmath74 , and stages @ xmath754 are analogous to stage @ xmath75 . in each stage @ xmath76 , all of the ( parts of ) the two interval bijections at stage @ xmath755 are glued together by definition [ overlapconcatenation2 ] . at a level @ xmath643 , proposition [ stage4matchingprop ] shows that @ xmath756 has a level in @ xmath277 that doesthese depend on which @ xmath757 is used . however , the [ stage4matchingprop ] holds for the case @ xmath72 , which allows us to define @ xmath758 to be the restriction of @ xmath759 to @ xmath606 . similarly , for @ xmath73 , we can define @ xmath760 to be the restriction of @ xmath761 to @ xmath606 . given @ xmath72 and @ xmath762 , let @ xmath763 denote the unique @ xmath398 - canonical cylinder in @ xmath3 that contains @ xmath764 . let @ xmath765 denote the set of @ xmath762 such that @ xmath766 for infinitely many @ xmath31 . similarly , given @ xmath73 and @ xmath178 , let @ xmath767 denote the unique @ xmath398 - canonical cylinder in @ xmath2 that contains @ xmath167 . let @ xmath768 denote the set of @ x##math178 shows that @ xmath769 for infinitely many @ xmath31 . the sets @ xmath770 and @ xmath771 are @ xmath11 sets of finite independence . by definition [ independenceofgoodsets ] , the sets @ xmath606 for @ xmath72 are independent with respect to @ xmath224 . then @ xmath772 proves the borel - cantelli theorem . also , the sets @ xmath606 are independent , because @ xmath770 is an @ xmath11 subset of @ xmath3 . the proof for @ xmath771 is simple . [ containmentlemma ] for @ xmath773 , if @ xmath72 and @ xmath774 and @ xmath775 are sets such that @ xmath776 , then @ xmath777 . then , if @ xmath73 , @ xmath778 , @ xmath779 , and @ xmath780 , then @ xmath781 . then @xmath782 , the map @ xmath624 at stage @ xmath783 is an extension of a concatenation of the maps @ xmath624 at stage @ xmath31 it follows that @ xmath784 where , depending on the context , @ xmath57 refers either to the map @ xmath785 or to the map @ xmath786 . the argument when @ xmath73 is not exact . given @ xmath787 , let @ xmath788 be the increasing sequence of indices , all belonging to @ xmath585 , such that = @ xmath789 . then , by lemma [ containmentlemma ] , the levels @ xmath790 form a decreasing sequence . it follows that there is a unique point in the intersection @ xmath791 . similarly , if @ xmath792 is the increasing sequence of indices for @ xmath793 , then there is a unique point in the intersection @ xmath794 . this gives the following definition . if @ xmath793 , then @ x##math795 is the unique point in the intersection @ xmath794 . choose @ xmath787 , let @ xmath796 be the unique point in the intersection @ xmath791 . the intersections @ xmath6 and @ xmath797 are defined in the following way for @ xmath770 and @ xmath771 . choose @ xmath793 and @ xmath798 . choose @ xmath73 small enough so that @ xmath799 and so that @ xmath800 . choose @ xmath801 small enough so that @ xmath802 implies @ xmath803 . in particular , @ xmath802 implies @ xmath804 . it then follows from lemma [ containmentlemma ] that , for all @ xmath773 such that @ xmath805 , @ xmath806 and , for all @ xmath807 such that @ xmath808 , @ xmath809 therefore @ xmath810 the intersection of @ xmath797is proved that . the levels @ xmath6 and @ xmath797 are order preserving . fix a natural number @ xmath811 and a level @ xmath459 and @ xmath594 . we want to prove that @ xmath812 . for @ xmath813 , define @ xmath814 where @ xmath56 is the level @ xmath815 . then @ xmath816 and @ xmath817 . note that @ xmath818 as shown in the [ thegoodset ] , for example @ xmath31 , @ xmath819 consists of about half of the levels in @ xmath820 , so we can ( correctly ) prove @ xmath819 consists of at least @ xmath821 of them . define @ xmath822 for @ xmath823 , let @ xmath824 be the set of levels from @ xmath820 that are not in levels from @ xmath825 , and recursively define @ xmath826 and @ xmath827 . observe that @ xmath828and @ xmath829 ( however , @ xmath821 has a slightly lower value and is not equal to @ xmath830 ) . it follows from ( [ dnequation ] ) and ( [ dnminusaequation ] ) that @ xmath831 it also follows from ( [ enequation ] ) and ( [ enminusaequation ] ) that @ xmath832 this implies that @ xmath833 and @ xmath834 and @ xmath835 . this is true for . and @ xmath836 this implies that @ xmath837 . if @ xmath793 and @ xmath838 , then @ xmath839 . similarly , if @ xmath787 and @ xmath840 , then @ xmath841 . if @ xmath798 and then @ xmath73 be such that @ xmath842 and @ xmath843 . let @ xmath844 be such that @ xmath845 . then @ xmath846 where , depending on the case , @xmath57 belongs either to the map @ xmath847 or to the map @ xmath848 . since @ xmath849 , we have @ xmath850 , which implies @ xmath851 . then @ xmath852 . the last result is given below . let @ xmath853 , @ xmath854 and @ xmath855 are all @ xmath11 sets of full measure . let @ xmath856 and @ xmath857 . then @ xmath9 and @ xmath10 are full measure sets because @ xmath6 is not 1 . and @ xmath9 and @ xmath10 are @ xmath11 ##s because @ xmath6 is invariant in the same way as @ xmath854 . in this case we show that @ xmath9 and @ xmath10 are invariant and that @ xmath4 has an inner product that is a conjugacy when restricted to @ xmath858 , the smallest set in x @ xmath222 . [ orbitsintoorbits ] for @ xmath859, @ xmath6 maps the @ xmath0 - orbit of @ xmath167 into the @ xmath1 - orbit of @ xmath795 . and for @ xmath860 , @ xmath797 maps the @ xmath1 - orbit of @ xmath764 into the @ xmath0 - orbit of @ xmath796 . let @ xmath861 and @ xmath862 for each @ xmath863 . suppose that the root of the tree at level @ xmath31 has been @ xmath864 . let @ xmath865 such that @ xmath866 and @ xmath867 . then @ xmath868 and @ xmath869 result in the same order as @ xmath870 and @ xmath871 . then , since each @ xmath872 consists of two data points from height @ xmath755 , for each @ xmath873 ( @ xmath73 ) such that @ xmath874 , we have @ xmath875 and @xmath876 . map to @ xmath31 . for @ xmath877 , let @ xmath878 be such that @ xmath879 . let @ xmath880 be such that @ xmath881 and @ xmath882 . let @ xmath883 ( @ xmath884 ) such that @ xmath885 . for @ xmath877 , let @ xmath886 be such such that @ xmath887 . then because the two possible bijections @ xmath305 at stage @ xmath208 are products of products of those at stage @ xmath31 , we have @ xmath888 . since @ xmath208 is added , it follows that @ xmath889 . then @ xmath6 maps the backward @ xmath0 - orbit of @ xmath167 into the @ xmath1 - orbit of @ xmath795 . by this definition , @ xmath6 maps the backward @ xmath0 - orbit of @ x##math167 into the @ xmath1 - orbit of @ xmath795 . the definition for @ xmath797 is very simple . we have already shown that @ xmath9 and @ xmath10 are @ xmath11 points of equal order . let @ xmath892 . then @ xmath859 and @ xmath893 . because of @ xmath894 for example @ xmath895 . then @ xmath896 because @ xmath854 is @ xmath0 - invariant . and @ xmath897 . using [ orbitsintoorbits ] ( and because @ xmath893 ) . let @ xmath898 , so @ xmath9 is @ xmath0 - invariant . therefore , @ xmath10 is @ xmath1 - invariant . # # @ xmath764 is a point in the @ xmath1 - orbit of @ xmath795 . let @ xmath899 , so @ xmath796 is in the orbit of @ xmat##h167 . hence @ xmath840 . hence @ xmath6 carries the orbit of @ xmath167 onto the orbit of @ xmath795 . the map @ xmath6 is a conjugacy between the two induced maps @ xmath900 and @ xmath901 . hence @ xmath858 and @ xmath902 are almost clopen . therefore @ xmath6 is a locally compact kakutani map of @ xmath0 and @ xmath1 . let @ xmath868 and @ xmath903 be two points of @ xmath904 . then , by theorem [ x0theorem ] , @ xmath905 for all @ xmath906 . we want to show that @ xmath907 and @ xmath147 have the same orbit . this will show that @ xmath6 corresponding to @ xmath904 is order preserving on orbits , and is a conjugacy between the induced maps . as we have in the case of theorem [ orbitsintoorbits ] , @ xmath908 for a sufficiently large @xmath73 . let @ xmath909 be one among stage @ xmath31 . if @ xmath910 , then @ xmath907 and @ xmath147 will have the same level because the partial interval bijection @ xmath305 in stage @ xmath222 connects the stages in @ xmath858 in an order - preserving way , and this is then shown through the diagram via concatenations . if @ xmath911 , then because @ xmath909 is above , @ xmath912 and @ xmath913 will be in different stages in @ xmath914 . and the partial interval bijections at stage @ xmath909 are extensions of some of those at stage @ xmath915 . so if @ xmath863 , then the stage - ( @ xmath915 ) partial interval bijection that acts on @ xmath868 in stage @ xmath909 is above the stage - ( @ xmath915 ) partial interval bijection that acts on @ xmath869 in stage @ xmath##909 . this sign - change at _ @ xmath909 is also achieved by the algorithm via concatenations , _ @ xmath916 . 1 , @ xmath917 and @ xmath918 . s . r . roychowdhury , _ @ xmath919 - - and the binary numbers are finitarily - generated _ , number theory and finite fields , contemp . 430 , amer . soc . , providence , ri , 2007 , 123 - 134 .