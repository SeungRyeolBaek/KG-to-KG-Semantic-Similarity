in the last years , radio systems struggled with the problem of delivering reliable signals while maintaining high throughput . this problem has often been faced resorting to turbo codes able to correct errors even at low signal to noise ratios . as pointed out in chapter i of @ xcite , many standards for radio systems adopt binary or even binary turbo codes @ xcite and exploit their excellent error correction capability . however , due to the high computational complexity required to implement turbo codes , optimized architectures ( e . g . @ xcite , @ xcite ) have been usually employed . recently , many works emphasize the parallelization of turbo code designs to achieve higher throughput . in particular , many works concentrate on preventing , or reducing , the interference phenomenon that arises with such architectures ( e . g . @ xcite ) . although throughput and area have been the main factors driving the design of turbo codes , recently , the need for flexible systems able to support multiple transmission modes , or support different modes , has changed the perspective . in particular , the so called digital digital radio ( sdr ) has made possible a limiting factor @ xcite of future receivers , which will be able to support a wide range of different modes . some recent works( e . g . @ xcite , @ xcite , @ xcite ) deal with the implementation of application - specific instruction - set processor ( asip ) architecture for turbo decoders . in order to obtain architectures that support very high speed and performance multi - asip is an ideal approach . however , along with flexible and high throughput processing elements , the multi - asip architecture must provide also a flexible and high throughput communication backbone . to that end , the network - on - chip ( nic ) approach has been used to provide processing elements in turbo link designs able to support the standards @ xcite , @ xcite , @ xcite , @ xcite , @ xcite , @ xcite . in addition , network and turbo link designs have the ultimate goal of adaptively increasing the communication bandwidth through the elimination of unnecessary extrinsic information exchange . this can be obtained by exploiting high - level knowledge - based networks where unnecessary requirements for data exchange are eliminated @ xcite . in @ xcite , @ xcite , @ xcite ring , mesh , and network graph topologies are used whereas in @ xcite previous studies are limited to mesh and network top##ologies . net , in @ xcite butterfly and benes topologies are considered , and in @ xcite binary de - bruijn architecture are considered . however , none of these works provide a unified framework to design a node based turbo link , showing the complexity / performance trade - offs . this work aims at filling this gap and introducing two novel tools in the area of parallel turbo link : i ) a comparative study of noc based turbo links , conducted by means of a simple network analysis ; ii ) a list of obtained results , showing the complexity / performance trade - offs offered by different topologies , routing algorithms , node and asip architectures . the paper is structured as follows : in section [ sec : co _ analysis ] the requirements and requirements of a parallel turbo link architecture are analyzed , whereas in section [ sec : noc ] noc based approach is presented . section [ sec : ra ] summarizes the problems considered in previous works and introduces generalized de - bruijn and generalized kautz algorithms as promising solutions for noc based turbo decoder architectures . in section [ sec : ra ] the main routing algorithms are presented , whereas in section [ sec : tnoc ] the turbo noc isis required . section [ sec : co _ algo _ arch ] presents the details of the various routing algorithms used in this work , section [ sec : cas ] presents the final results and section [ sec : concl ] draws the conclusions . a parallel turbo decoder can be modeled using @ xmath0 processing elements that need to read from and write to @ xmath0 memories . each processing element , usually referred to as soft - in - hard - out ( siso ) module , performs the bcjr algorithm @ xcite , whereas the memories are responsible for distributing the input from @ xmath1 among the sisos . the whole system is parallel and therefore the siso uses only the bcjr algorithm for the two constituent codes used on the encoder module ; for further details on the siso module the reader can refer to @ xcite . as a consequence , each iteration is made of two half iterations referred to as interleaving and de - splitting . during each half iteration the extrinsic information stored by siso @ xmath2 and memory @ xmath3 ( @ xmath4 ) is transferred to the memory @ xmath5 at the end@ xmath6 , where @ xmath7 and @ xmath8 are combinations of @ xmath2 and @ xmath3 derived from the power supplies ( @ xmath9 , interleaver ) employed at the encoder level . thus , the time required to complete the algorithm is directly related to the number of clock cycles required to complete a half iteration . without loss of detail , we can express the number of cycles required to complete a half iteration ( @ xmath10 ) as @ xmath11 where @ xmath12 is the total number of clock steps in a data frame , @ xmath13 is the number of clock steps processed by each siso , @ xmath14 is the siso output rate , is the number of trellis steps processed by each siso in a clock cycle , and @ xmath15 is the data frame rate . thus , the average throughput expressed as the number of data frames over the time required to complete the decoding process is @ xmath16 where @ xmath17 is the clock cycle , @ xmath18 is the number of iterations , @ xmath##19 for binary codes and @ xmath20 for binary binary codes . when the interconnection layer size is negligible with respect to the number of cycles required by the siso , we obtain @ xmath21 and , to achieve the maximum of @ xmath22 and maximum data storage performance , the minimum number @ xmath23 of cycles should be used . the minimum @ xmath0 ( @ xmath24 ) to satisfy @ xmath22 with @ xmath23 iterations can be calculated from ( [ eq : tapprox ] ) for the asip ##s available in the table . if we consider @ xmath25 , then the @ xcite , @ xcite , @ xmath0 ranges in [ 36 , 37 ] to satisfy @ xmath26 cycles / s ( see table [ tab : pasip ] ) . it is worth pointing out that the @ xmath27 cycles in table [ tab : pasip ] are the minimum number of cycles required by the siso to update the soft bit of the code ( see table h in @ xcite and table l in @ xcite ) . moreover , @ xmath28 cycle depends on thethe architecture of the siso and in particular tends to increase with the code complexity . as a result , several conditions can significantly affect @ xmath0 , namely 1 ) performance level with larger @ xmath15 ; 2 ) higher @ xmath29 ##0 ; 3 ) higher @ xmath22 ; 4 ) higher @ xmath23 ; 5 ) higher clock rate . thus , we consider as relevant for example a much wider range for @ xmath0 : @ xmath30 . . the time required to obtain @ xmath26 mb / s for @ xmath25 with some asip architectures . in the literature [ result = " ^ , ^ , ^ , ^ , ^ , ^ , ^ " , ] the area and the time are not exactly known , but they are negligible compared with the i m and lm contribution to the total performance . the most important conclusions that can be drawn from results in table [ tab : wimax _ results ] and [ tab : mhoms _ results ] are : 1 . the asp - ft ##p algorithm is the best performing solution both in terms of performance and area when @ xmath31 . 2 . the routing memory isof the t - ft algorithm ( in fig . [ fig : 1 ] ( b ) ) is faster as @ xmath14 , and ssp solutions are the best , mainly for @ xmath32 and @ xmath33 . 3 . in most cases solutions with @ xmath34 = 1 achieve higher performance with lower computational cost than those with @ xmath34 = 1 when @ xmath35 . 3 . in most cases , generalized burger - bruijn and generalized kautz algorithm are the best performing solutions . as a further example , in fig . [ fig : r1 _ t - ft ] , we show the best results obtained with @ xmath31 and t - ft - algorithm for the wimax interleaver with @ xmath36 ( a ) and the time shifting interleaver with @ xmath37 ( b ) . each point represents the throughtput and the result obtained for a certain algorithm with a certain parallelism degree @ xmath0 . results corresponding to the highest @ xmath0 degree are bounded into the black box and a ring is applied to each point to represent the corresponding result , these points are identified as r - ring, k - honeycomb , h - random ##ized , h - generalized kautz with the corresponding @ xmath34 algorithm ( k2 , k3 , k4 ) . as it can be seen , the kautz algorithms with @ xmath38 ( k4 ) are always the best solutions to achieve high throughput with small area requirements . in fig . [ fig : raw _ results ] significant information extracted from the [ tab : wimax _ results ] and [ tab : mhoms _ results ] are displayed in vector form . in general , for @ xmath31 the asp - ft routing algorithm is the best solution , whereas for @ xmath39 ssp routing algorithms , such as in fig . [ fig : 2 ] ( b ) , tend to achieve the same performance as the asp - ft routing algorithm with less complexity . ( see fig . [ fig : tar _ tot ] ( a ) and ( b ) for the wimax interleaver , @ xmath36 and fig . [ fig : tar _ t ] ( c ) and ( d ) for the phase shifting interleaver , @ xmath37 ) . an interesting feature that varies with the interleaver size is thethe saturation that can be seen in the table [ tab : mhoms _ results ] for @ xmath40 network , namely the area tends to decrease and thus @ xmath14 has the effect of increasing the area with a negligible increase or even with a decrease of throughput . as an example , the modified kautz topology with @ xmath41 and ram - based routing networks achieves more than 1 mb / s with @ xmath31 , @ xmath42 , @ xmath43 . however , the solution with the largest area is the one obtained with @ xmath43 . the size problem of the @ xmath34 network can be explained by observing that high values of @ xmath14 tend to increase the area . also , high values of @ xmath14 lengthen the input fifos as highlighted in table [ tab : results ] , where the total area of the network is given by the size of the data registers , namely the address registers , the crossbars ( cb ) , the address bus , the data register / memory ( i / gm ) , the address memory ( i ##gm )and the length parameter ( l ) is defined for three significant values : the highest area ( light - gray ) , the highest area ( dark - gray ) , and lowest area ( dark - gray ) points for the @ xmath34 points in the [ ref : mhoms _ results ] . in this paper a general framework to the network element - based turbo coding architecture has been presented . the proposed model can be adapted to accommodate different topologies , degrees of complexity , message injection rates and routing algorithms . the results show that the burger - bruijn and generalized kautz models provide high performance with a limited bandwidth overhead . moreover , depending on the network throughput and different complexity degrees , message injection rates and routing algorithms can be used to reduce the network complexity overhead . a . giulietti , l . j . le perre , and m . gilbert , ` ` parallel turbo coding interleavers : avoiding collisions between accesses to network elements , ' ' _ iet electronics _ _ , vol . 10 , no . 5 , pp . 232234 , december 2002 . m . s . thul , m . gilbert , and j . wehn , ` ` a concurrent network architecture forhigh - speed turbodecoding , ' ' in _ ieee international conference on networks , circuits and systems _ , 2002 , pp . 10991102 . c . neeb , j . a . thul , and n . wehn , ` ` system - on - chip - based approaches to design of high throughput communication networks , ' ' in _ ieee international conference on circuits and systems _ , 2005 , pp . 17661769 . m . moussa , o . muller , a . baghdadi , and m . . jezequel , ` ` butterfly and benes - type on - chip communication systems for digital turbo machines , ' ' in _ research , implementation and testing _ _ conference and exhibition _ , 2007 , pp . 654659 . m . benedetto , m . divsalar , m . montorsi , and f . pollara , ` ` multi - input and - output methods for the linear and distributed - decoding of communication systems , ' ' _ ieee transactions on communications _ , vol . 11 , no . 2 , pp . 155172 , mar / apr 1998 . o . muller , a . baghdadi , and m . jezequel, ` ` asip - based _ soc ##s for efficient and fast digital turbo coding , ' ' in _ research , implementation and test in _ conference and proceedings _ , 2006 , pp . 13301335 . o . wang , a . baghdadi , and a . jezequel , ` ` ` parallel ##ization techniques for convolutional turbo coding , ' ' in _ ieee international conference on information and communication technologies : from theory to practice _ , 2006 , pp .