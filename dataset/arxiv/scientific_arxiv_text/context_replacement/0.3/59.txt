it can refer to the transfer of genetic information between living organisms in a non - reproduction manner . horizontal gene transfer is believed to be a particularly significant evolutionary process occurring in single - cell organisms ( wang and bapteste 2007 ; treangen and rocha 2011 ) . other reticulation processes include introgression , recombination and hybridization ( fontaine et al . 2015 ; mcbreen and lockhart 2006 ; marcussen et al . 2014 ) . in the last few decades , phylogenetic networks have increasingly been used for the modeling and analysis of evolutionary networks ( gusfield 2014 ; huson et al . 2011 ) . galled trees , rooted networks , and visible networks are some of the popular classes of phylogenetic networks used to study the combinatorial and evolutionary aspects of phylogenetics ( wang et al . 2001 ; gusfield et al . 2004 ; huson and kloepper 2007 ; huson et al . 2011 ) . the visible networks include rooted trees and galled trees . they are tree - based ( gambette et al . 2015 ) . the tree - based networks are introduced by francis and steel ( 2015 ) recently . it is well known that the concept ofthe nodes of a regular tree with @ xmath0 leaves is @ xmath4 . in contrast , an arbitrary regular network with n nodes must have as many internal nodes as possible . however , one important research question is how large a regular network in a given context can be . for example , it is well known that a tree - like network with @ xmath0 leaves has @ xmath2 non - leaf nodes at most . a regular network with @ xmath0 leaves has @ xmath5 nodes at most ( willson 2010 ) . to investigate whether or not the network containment problem is # ##ly solvable , surprisingly , gambette et al . ( 2015 ) proved that a reticulation visible network with @ xmath0 leaves has at most @ xmath6 non - leaf nodes . the class of nearly - stable networks was first introduced in their paper . they also proved the existence of a linear upper bound for the number of reticulation nodes in a nearly - stable network . in the following paper , we compute the tight upper bound for the size of a network characterized by the visibility property using a spanning - tree property that was introduced by gambette et al . the rest of this paper is divided into twosections . section [ sec : stable ] presents concepts and concepts that are important for our study . previously , bordewich and semple ( 2015 ) proved that there are at most @ xmath2 active nodes in a fully connected network . in section [ sec : stable ] , we present a simple proof of the @ xmath2 upper bound for reticulation visible networks . section [ sec : stable ] proves that there are at most @ xmath1 reticulation nodes in a galled networks with @ xmath0 nodes . section [ sec : nearlystable ] and [ sec : stablechild ] establish the tight upper bound for the sizes of nearly - child and stable - child networks , respectively . in section [ conc ] , we conclude the work with a few remarks . an incidence graph is a simply connected graph with no internal edges . let @ xmath7 be an incidence graph and let @ xmath8 and @ xmath9 be the edges of @ xmath10 . if @ xmath11 , it is called the _ outgoing _ edge of @ xmath8 and _ outgoing edge _ of @ xmath9 ;@ xmath8 and @ xmath9 are said to be the tail and head of the node . the sets of incoming and outgoing edges of a node are called the _ indegree _ and _ outdegree _ , respectively . @ xmath10 is said to be _ root _ if there is a unique node @ xmath12 with indegree ##s ; @ xmath12 is called the _ root _ of @ xmath10 . note that in a directed acyclic graph there is a directed path from the root to every other node . for @ xmath13 , @ xmath14 denotes the digraph with the same node set and the edge set @ xmath15 . for @ xmath16 , @ xmath17 denotes the node with the node set @ xmath18 and the edge set @ xmath19 . if @ xmath20 and @ xmath21 are subdigraphs of @ xmath10 , @ xmath22 denotes the subdigraph with the node set @ xmath23 and the edge set @ xmath24 . for _ _ tree _ _ a directed set of trees , @ xmath25, is a _ tree digraph in which each non - root node has either indegree 1 or outdegree 2 and there are also @ xmath26 nodes of outdegree 1 and indegree 2 , called _ leaves _ , that are one - to - one with the taxa in the network . in a phylogenetic network , a node is called a _ tree node _ if it is either the root or leaf node having indegree one ; it is called a _ tree node _ if its indegree is greater than one . note that there are tree nodes and a tree node may have both indegree and outdegree one . a non - root node is said to have _ leaf _ . a phylogenetic network without tree nodes is called a _ phylogenetic tree _ . for a phylogenetic network @ xmath27 , we use the following notation : * @ xmath28 : the root of @ xmath27 . * @ xmath29 : the set of roots . * @ xmath30 : the set of root nodes . * @ xmath31 : the set of reticulation ##s . * @ xmath32 : the set of nodes . * @ xmat##h33 : the set of trees . for the trees @ xmath34 and @ xmath29 , if @ xmath35 , @ xmath8 is said to be an _ ancestor _ of @ xmath9 and , equivalently , @ xmath9 is a _ descendant _ of @ xmath8 . in particular , if there is a simple path from @ xmath8 to @ xmath9 , @ xmath8 is an _ ancestor _ of @ xmath9 and @ xmath9 is a _ descendant _ of @ xmath8 . we can say that @ xmath9 is not @ xmath8 when @ xmath8 is an ancestor of @ xmath9 . let @ xmath36 and @ xmath37 be two simple paths from @ xmath8 to @ xmath9 and @ xmath27 . we use @ xmath38 and @ xmath39 to represent their base pairs , respectively . they are _ _ binary _ if @ xmath40 . similarly , a binary tree is _ binary _ , if a node has outdegree 2 and indegree 3 , allall roots have length s , and all the leaves have indegree ##s . here , we are interested in how large a binary phylogenetic network can be . in the rest of the article , a binary phylogenetic network is simply called a network and a phylogenetic network a tree . for purposes of convenience for discussion , we can add an additional edge at the root of the network . a node @ xmath9 in a network is _ visible _ ( or visible ) with respect to a leaf @ xmath41 if @ xmath9 appears on every path from the network root to @ xmath41 . we call @ xmath9 visible if it is visible with respect to a leaf in the network . [ prop1 ] let @ xmath27 be a network and @ xmath42 a subnetwork of @ xmath27 with the same root and leaf as @ xmath27 . then , a node is visible in @ xmath42 if it is visible in @ xmath27 . equivalently , a node is not visible in @ xmath27 if it is not visible in @ xmath42 . then @ xmath43 is visible with respect to a leaf @ xmath41 in @ x##math27 . for every path @ xmath36 from @ xmath44 to @ xmath41 , since there is also a path from @ xmath28 to @ xmath41 in @ xmath27 , it must pass through @ xmath9 . thus , @ xmath9 is also visible with respect to the same path as @ xmath42 . _ reticulation ##s _ networks are networks in which the nodes are all distinct ( huson et al . they are also called stable networks by gambette et al . ( 2015 ) . a network is _ stable _ if every internal node @ xmath45 has an ancestor @ xmath46 and that there are two distinct shortest paths from @ xmath46 to @ xmath45 ( huson and kloepper 2007 ) . similarly , a network is tree visible if its internal nodes are all the nodes of the network . these networks are tree visible and are also known as tree - 1 networks . _ nearly - stable _ networks are networks in which for every pair of nodes @ xmath8 and @ xmath9 , either @ xmath8 or @ x##math9 is visible if @ xmath47 is an edge ( gambette et al . 2015 ) . _ stable - child _ networks are networks in which each node has a single edge . tree - based networks are another important class of networks that were introduced in ( francis and francis 2015 ) . a network is _ tree - based _ if it can be obtained from a tree with the same leaves by the insertion of a set of edges between the edges in the tree . [ stable _ 1 ] ( gambette et al . 2015 ) for every reticulation - based network @ xmath27 , there is a subset of nodes @ xmath48 such that @ xmath49 contains exactly one adjacent edge for each reticulation , and @ xmath50 is a subtree with the same edges as @ xmath27 . } [ stable _ 1 ] implies that every reticulation visible network is tree - based . however , tree - stable networks and stable - child networks are not necessarily tree - based . we finish this section by presenting a technical lemma that can frequently be used in proving the maximum upper bound on the size of a network in each of the four dimensions listed above . [ lemma22 ] implies @ x##math27 be a leaf , @ xmath51 , and @ xmath52 have a finite series of parent nodes , @ xmath8 . if a @ xmath53 has a parent @ xmath54 such that : ( a ) @ xmath54 is below another @ xmath55 in @ xmath52 , or ( b ) there is a path from @ xmath56 to @ xmath54 that avoids @ xmath8 , then there exists a path from @ xmath56 to @ xmath41 in @ xmath8 for every leaf @ xmath41 is a leaf of @ xmath53 . let @ xmath57 . if @ xmath41 is below another @ xmath58 . then , there exists a path @ xmath59 from @ xmath60 to @ xmath41 that avoids @ xmath8 . since @ xmath52 is finite and @ xmath27 is finite , there exists a series of parent nodes , @ xmath61 such that : \ ( i ) = @ xmath62 has a parent @ xmat##h63 from @ xmath64 for @ xmath65 , and \ ( ii ) the path @ xmath66 has a value @ xmath67 such that there is a path @ xmath68 from @ xmath28 to @ xmath67 that avoids @ xmath8 . since @ xmath63 is below @ xmath64 , there is a path @ xmath69 from @ xmath64 to @ xmath70 for avoiding @ xmath71 . since @ xmath27 is above and @ xmath64 is below @ xmath8 , the path @ xmath69 avoids @ xmath8 . using these paths , we have the shortest path @ xmath72 from @ xmath73 to @ xmath41 that avoids @ xmath8 . gambette et al . ( 2015 ) showed that there are at most @ xmath74 reticulation ##s in a rooted tree only with @ xmath0 ##4 leaves . on the other hand , there are as many as @ xmath2 reticulations .the only example is the figure [ fig1 ] . now , what is the tight upper bound on the number of internal nodes ? indeed , @ xmath2 is the tight upper bound , which was independently proved by bordewich and semple ( 2015 ) using the continuum hypothesis . here , we have an alternative proof to support our conjecture . nodes of degree 2 [ fig1 ] , scaledwidth = 80 . 5 % ] given a reticulation visible network @ xmath27 with @ xmath0 leaves , we let @ xmath49 be a set of nodes such that @ xmath50 has a subtree with the same root and leaf as @ xmath27 ( figure [ 1 _ 2 ] ) . since @ xmath50 has @ xmath0 leaves , there are exactly @ xmath4 nodes of degree 3 . thus , there are @ xmath75 paths whose internal nodes are of degree 3 , starting at a degree - 3 node and ending at either a node of degree 3 or a leaf . let these @ xmath75 paths intersect @ xmath76 . the edges of @ xmath50 not in @ xmath77 .find a node @ xmath78 that contains the edge @ xmath56 ( figure [ fig1 ] ) . if @ xmath56 is of degree 2 , @ xmath78 passes through @ xmath28 and ends in a degree - 3 node . if @ xmath28 is of degree 3 , @ xmath78 is simply the first node entering @ xmath56 . altogether , these @ xmath79 paths are called the _ trivial paths _ of @ xmath50 . note that @ xmath80 . it is not hard to see that , for each edge in @ xmath49 , the head and tail are also found in these trivial paths . an edge @ xmath81 is called a _ cross _ edge if @ xmath82 and @ xmath83 for @ xmath84 ; it is a _ non - cross _ edge otherwise . the graphs in the following table appear in the section of figure 1 by gambette et al ( 2015 ) . [ 31 ] * the two cross edges @ xmath85 have their origin in the same trivial path in @ xmath50 . * for each non - cross edge@ xmath47 such that @ xmath86 for each @ xmath87 , there are at least two cross edges @ xmath88 such that @ xmath89 is between @ xmath8 and @ xmath9 in @ xmath90 . for a cross path @ xmath47 such that @ xmath82 and @ xmath83 ( @ xmath91 ) , we say @ xmath47 _ crosses _ @ xmath90 and _ leaves _ @ xmath92 . for a non - cross path @ xmath47 and a cross path @ xmath93 , if @ xmath8 and @ xmath9 ##3 in @ xmath94 and @ xmath89 is a path between @ xmath8 and @ xmath9 in @ xmath90 , we say @ xmath47 _ jumps _ _ @ xmath93 . it is easy to see that the cross path is the cross edge @ xmath78 . theorem [ 1 ] states that @ xmath49 has at most @ xmath75 cross edges and has at most @xmath75 non - cross edges . by proposition [ 1 _ 1 ] , @ xmath95 . to obtain the # ##est bound @ xmath96 for @ xmath97 , we define the weight @ xmath98 of a cross edge @ xmath85 as : @ xmath99 we then assign the weight of a cross edge to the trivial path it enters and call it the _ weight _ of the trivial path . if a cross edge enters a trivial path , the weight of this trivial path is set to be 1 . by proposition [ 1 ] , the weight of a trivial path is at most 1 . we use @ xmath100 to denote the weight of a trivial path @ xmath90 , @ xmath101 . . @ xmath102 is the three cross edges leading to the degree - 1 node @ xmath103 ; @ xmath104 is the cross edge ending over @ xmath105 for @ xmath106 and the non - cross edge @ xmath107 ending over @ xmath104 for @ xmath108 . here , @ xmath109 is the trivial . (* a * ) @ xmath110 and @ xmath111 are both below @ xmath103 and @ xmath112 in @ xmath113 . ( * b * ) @ xmath110 is below @ xmath103 and @ xmath112 in @ xmath113 , and @ xmath111 is below @ xmath112 in @ xmath113 . ( * c * ) the node @ xmath110 is below @ xmath112 and @ xmath114 is below @ xmath115 . this problem is difficult to solve , because it is a directed graph . [ fig2 ] , scaledwidth = 0 . 5 % ] for an arbitrary node @ xmath103 of degree 3 in @ xmath50 , we use @ xmath116 to denote the trivial path and @ xmath103 and @ xmath117 to denote the two trivial paths leaving @ xmath103 . [ fig _ 2 ] let @ xmath103 be a degree - 3 node in @ xmath50 . \ ( i ) if @xmath118 and @ xmath119 , then @ xmath120 . \ ( ii ) if @ xmath121 , then @ xmath122 and @ xmath123 . for purposes of simplicity , we take @ xmath124 and then @ xmath125 to denote the shortest path from @ xmath126 to @ xmath127 for each in @ xmath126 and a path @ xmath127 of @ xmath126 to @ xmath128 . @ xmath27 and @ xmath128 have the same head and tail . the common ancestor of @ xmath27 and @ xmath128 is in @ xmath73 . \ ( iii ) suppose that @ xmath118 and @ xmath119 . then , there is a cross edge @ xmath129 and @ xmath130 and a non - cross edge @ xmath131 passing over @ xmath129 for each @ xmath132 . we shall prove that @ xmath120 , and that the cross edge entering @ xmath11##6 . assume @ xmath110 is between @ xmath103 and @ xmath112 in @ xmath113 . when @ xmath111 is between @ xmath110 in @ xmath133 ( see [ fig2 ] below ) , there are two cases . if @ xmath114 is in the leaf @ xmath134 not below it , then , @ xmath135 does not pass @ xmath111 . if @ xmath114 is not in @ xmath103 , @ xmath135 does not pass @ xmath103 and not @ xmath111 . then , by the [ lemma22 ] , there is one from @ xmath73 to a node in @ xmath112 that does not pass @ xmath111 . for every node @ xmath41 ##0 below @ xmath112 , @ xmath128 , @ xmath136 pass @ xmath111 . therefore , @ xmath111 is a lower node in @ xmath27 , and not there . this is the2 . when @ xmath111 is above @ xmath112 in @ xmath128 ( figure [ fig2 ] b ) , @ xmath111 is above @ xmath112 as a reticulation node . since @ xmath137 does not pass @ xmath112 , by lemma [ lemma22 ] , there is a path from @ xmath73 to a leaf of @ xmath112 that does not pass @ xmath112 . for a leaf @ xmath41 is above @ xmath112 in @ xmath128 , @ xmath136 avoids @ xmath112 . therefore , @ xmath112 is not visible , by contradiction . we have proved that @ xmath110 is not between @ xmath103 and @ xmath112 in the case of @ xmath113 . in contrast , @ xmath114 is not between @ xmath103 and @ xmath115 in @ xmath134 . so there is a missing node in @ xmath116 . let @ xmath45 bethe lowest reticulation node in @ xmath116 . then , @ xmath110 and @ xmath114 are both contained in @ xmath138 . therefore , either @ xmath111 or @ xmath139 is between @ xmath45 and @ xmath103 , so that @ xmath45 is the lowest spanning node in @ xmath116 . combining this result with that @ xmath140 is also between @ xmath103 and @ xmath141 and @ xmath128 for @ xmath142 , we find that either @ xmath140 is below @ xmath141 or there is a path from @ xmath73 to @ xmath140 , using @ xmath45 for each @ xmath142 . however , by theorem [ lemma22 ] , @ xmath45 is not optimal with respect to any leaf below @ xmath45 . for any leaf @ xmath41 is below @ xmath45 in @ xmath128 , the shortest path @ xmath136 to @ x##math45 . therefore , @ xmath45 is not visible , a contradiction . we have proved that @ xmath120 . \ ( ii ) if @ xmath121 , then @ xmath103 is an element of any other degree - 1 element in @ xmath50 . since @ xmath27 is visible , there does not exist @ xmath143 such that @ xmath144 for both @ xmath145 and @ xmath146 . hence , @ xmath147 . \ on the contrary the weights of @ xmath134 and @ xmath113 are both zero . hence , @ xmath140 is in both @ xmath103 and @ xmath141 for @ xmath142 , proved that . if @ xmath110 and @ xmath114 is in @ xmath78 , the lowest element of @ xmath78 is not visible , a contradiction . hence , @ xmath110 is above @ xmath112 and @ xmath114 is below @ xmath115 , , a nonthen @ xmath27 ( in [ fig2 ] below ) . this is a node . hence , either @ xmath134 or @ xmath113 has weight less than 2 . @ xmath148 let @ xmath27 be a t - tree with @ xmath0 nodes . then , @ xmath149 let @ xmath150 be the set of @ xmath151 internal nodes of weight 1 for @ xmath50 . note that every trivial path other than @ xmath78 starts with a node in @ xmath150 if : @ xmath152 for @ xmath153 . then , @ xmath154 leaves a pairwise equivalent and hence @ xmath155 when @ xmath156 , @ xmath157 . by proposition [ stable _ 2 ] , @ xmath158 . let @ xmath159 be the internal node of @ xmath160 for : @ xmath156 . then , by proposition [ stable _ 3 ] , @ xmath161 . it is clear that under the condition @ xmath16##2 , at least two nodes in @ xmath163 are mapped to the same node in @ xmath164 , and two nodes in @ xmath163 are mapped to two nodes in @ xmath165 . hence , @ xmath166 . since @ xmath147 , the result is that @ xmath167 \ \ & = & | v _ 0 | + 2 | v _ 2 | + 3 | v _ 1 | + ( | | v _ 4 | + | v _ 1 | ) \ \ & \ leq & 2 ( | v _ 0 | + | v _ 2 | ) + 3 ( | v _ 0 | + | v _ 3 | + | v _ 4 | ) \ \ & \ leq & 2 ( | v _ 0 | + | v _ 1 | + | v _ 2 | + | v _ 3 | + | v _ 4 | ) \ \ & = & = ( [ - 1 ) , \ { { array } \ ] ] where the final result is obtained from the computation of @ xmath168 for @ xmath169 . these networks are a class of locally ordered networks ( hu##son et al . 2011 ) . in this section , we shall show that there are at most @ xmath1 reticulations in a galled network with @ xmath0 leaves . note that the galled network shown in figure [ fig3 ] , has no @ xmath1 reticulations , @ xmath1 is the upper bound on the number of edges ##s in a galled network with @ xmath0 leaves . : there is a non - cross edge @ xmath47 and @ xmath49 such that @ xmath8 and @ xmath9 end in @ xmath78 , and there is a non - cross edge @ xmath170 and a non - cross edge @ xmath109 that end at a point in a given network other than @ xmath78 , where @ xmath171 is not drawn . in ( * b * ) and ( * c * ) , the straight and curved arrows represent vertices and edges in @ xmath50 , respectively ; solid curve arrows represent edges in @ xmath49 , respectively [ fig3 ] , scaledwidth = 0 . 5 % ] [ gn _1 ] for a directed graph @ xmath27 with @ xmath0 leaves , @ xmath172 let @ xmath27 be a directed network with @ xmath0 leaves and let @ xmath173 . since @ xmath27 has reticulation ##s , by theorem [ stable _ 1 ] , there is a set of edges @ xmath49 such that ( a ) @ xmath49 contains only one cross edge for each node , and ( b ) @ xmath50 is a subtree with the same edges as @ xmath27 . we use the same notation as in step 2 . @ xmath78 denotes the trivial path whose cross edge is the open edge entering @ xmath73 ; @ xmath174 denotes the other @ xmath75 trivial path entering @ xmath50 . we prove the result by showing that @ xmath49 does not contain any non - cross edges and that one cross - edge will arrive at each node in between @ xmath90 for @ xmath145 . if @ xmath78 contains only the open edge entering @ xmath73 , there is nonode in @ xmath49 that contains @ xmath78 . we first note that this statement is also true only if @ xmath78 contains all nodes in @ xmath73 . since @ xmath27 is acyclic and there is no trivial path from the end of @ xmath78 to a node in @ xmath90 for all @ xmath145 , there is no cross edge @ xmath81 such that @ xmath8 is in @ xmath90 and @ xmath9 is in @ xmath78 . if there is no non - cross edge @ xmath175 such that @ xmath176 are in @ xmath78 ( see [ fig3 ] below ) , we let @ xmath89 be the cross edge of @ xmath8 ##1 @ xmath78 . therefore , @ xmath89 must be a single node such that @ xmath88 , where @ xmath177 is a reticulation node of some trivial path @ xmath90 , @ xmath145 . ( if @ xmath89 is ahowever , this is not true , by contradiction . ) since @ xmath27 is rooted and @ xmath177 is a leaf node , there exist two paths @ xmath178 and @ xmath179 from a given leaf node to @ xmath177 in @ xmath27 such that ( 1 ) they are internally connected and ( 2 ) @ xmath177 is the single leaf node between them . note that no node in @ xmath49 other than @ xmath93 can be between @ xmath178 and @ xmath179 . therefore , both @ xmath178 and @ xmath179 contains a leaf node . therefore , @ xmath180 is a subtree of @ xmath50 . this means that one of @ xmath178 and @ xmath179 is the single path @ xmath93 and the other is @ xmath181 , the single path from @ xmath89 to @ xmath177 in the tree @ xmath50 . this is impossible , since the reticulation node @xmath9 is in @ xmath181 . we have shown that there is one edge in @ xmath49 that enters @ xmath78 . similarly , we show that there is at most one edge in @ xmath49 that enters @ xmath90 for some @ xmath182 . and that @ xmath183 and @ xmath184 are two edges in @ xmath49 such that @ xmath139 is below @ xmath111 for some @ xmath90 ( @ xmath145 ) ( proposition [ fig3 ] c ) . therefore , @ xmath185 must be a non - crossing edge and @ xmath186 is directly below @ xmath111 . ( therefore , @ xmath111 is not crossing . ) therefore , in fact ( 2 ) in proposition [ 3 ] , there is a crossing edge @ xmath187 such that @ xmath89 is between @ xmath186 and @ xmath139 , @ xmath90 and @ xmath177 is between @ xmath188 , @ xmath189 . since@ xmath177 is a reticulation , and @ xmath27 . galled , there are two internally defined paths @ xmath178 and @ xmath179 from a given tree node to @ xmath177 in which any nodes other than @ xmath177 are a tree node . if @ xmath190 contains an edge in @ xmath49 other than @ xmath93 , the parent of the edge is a tree node and is in either @ xmath178 or @ xmath179 , a contradiction . thus , @ xmath191 is a subtree of @ xmath128 . without loss of detail , we can say @ xmath178 contains @ xmath93 . that is , @ xmath93 contains the top edge of @ xmath178 . note that @ xmath192 are tree nodes in @ xmath90 , ordered from top to bottom . if @ xmath178 contains more than one edge in @ xmath128 , it will belong to @ xmath111 , a contradiction . if @ xmat##h178 is connected to @ xmath93 , then @ xmath179 must go through @ xmath139 , a contradiction . hence , there is at most one edge in @ xmath49 whose head is in the trivial path @ xmath90 , @ xmath145 . in addition , there are @ xmath75 trivial paths other than @ xmath78 and there is at most one edge in @ xmath49 in each of them . hence , @ xmath193 in this case we also have a tight bound for the number of edges in a nearly - stable network . the class of nearly - stable networks is different from the class of nearly visible networks , so here the tight ##est bound is : @ xmath2 . the graph shown in figure [ fig4 ] a is an example for a nearly - stable network with @ xmath2 leaves . we have the following proof , given by gambette et al . ( 2015 ) . [ fig _ 4 ] let @ xmath27 be a nearly - stable network with @ xmath0 leaves . there exists a set @ xmath49 of edges such that( a ) @ xmath50 contains a fully visible subnetwork over the same leaves as @ xmath27 , and ( b ) @ xmath49 contains only one visible edge for each tree node that is not visible in @ xmath27 . with no edges . it contains nine reticulations ( shaded paths ) , five of which are fully visible . the round ##er edges are those removed to obtain the reticulation of network @ xmath42 . ( * b * ) . the shaded paths in @ xmath42 are the cross and non - cross paths removed to obtain a subtree with the same leaves as @ xmath27 . ( * c * ) and ( * d * ) are the cases considered in the proof of the part ( c ) . [ [ fig _ 4 ] : the non - cross path from @ xmath8 and @ xmath9 contains a tree node @ xmath194 of @ xmath27 , and it contains a tree node @ xmath194 of @ xmath27 [ fig4 ] , scaledwidth = 0 . 5 % ] let @ xmath49 be the set of allsatisfy the two conditions of theorem [ ns _ 1 ] and let @ xmath195 ( figure [ fig4 ] a ) . the edges in @ xmath49 are said to be _ 1 - ns _ . we remark that @ xmath42 is a subdivision of a binary - visible network . that is , the binary visible network can be obtained from @ xmath42 by replacing some paths whose internal nodes are of degree 2 with some edges with the same leaves . hence , @ xmath42 contains degree - 2 nodes if @ xmath49 is not complete . for a path @ xmath36 , we use @ xmath196 to find the set of its internal nodes . since @ xmath42 is a subdivision of a binary reticulation visible network with the same leaves as @ xmath27 , by theorem [ ns _ 1 ] , there is a set @ xmath197 of paths in @ xmath198 such that ( 1 ) each path @ xmath199 goes from a degree - 2 tree node to a binary reticulation node in @ xmath42 and its internal nodes are all of degree - 2 . @ xmath42, and ( b ) @ xmath200 is a subtree with the same properties as @ xmath27 . in @ xmath201 . @ xmath128 is formed from the intersection of the internal nodes and edges of the path in @ xmath202 . we can define the paths in @ xmath197 as _ cross paths _ and _ non - cross paths _ accordingly as in fig 3 ( see [ fig4 ] b ) . [ ns _ 1 ] let @ xmath27 be a self - stable tree and let @ xmath49 , @ xmath42 , @ xmath128 and @ xmath197 be defined as . \ ( a ) each internal node of a path in @ xmath197 is not visible in @ xmath27 . \ ( b ) each cross path in @ xmath197 consists of either a single edge or two edges in @ xmath27 . \ ( c ) each non - cross path in @ xmath197 is not an edge in @ xmath27 . \ ( d ) if @ xmath36 has a cross path in @ xmath197 from @ xmat##h89 to @ xmath177 and @ xmath178 is a non - cross path in @ xmath197 from @ xmath8 to @ xmath9 such that @ xmath89 is between @ xmath8 and @ xmath9 ( in [ fig4 ] below ) , then @ xmath36 and @ xmath178 are both a single leaf in @ xmath27 . \ ( e ) the two cross paths in @ xmath197 are not connected . we remark that @ xmath203 is the unique path from @ xmath177 to @ xmath204 for any two leaves @ xmath177 and @ xmath204 in @ xmath128 . \ ( e ) let @ xmath36 be a leaf of @ xmath197 and let @ xmath204 be an internal leaf of it . for any leaf @ xmath205 , the unique path @ xmath136 does not connect @ xmath204 to @ xmath128 . therefore , @ xmath204 is not contained in @ x##math27 . \ ( c ) if there are two or more internal nodes of a node in @ xmath197 , \ ( c ) , they are independent and not contained in @ xmath27 , contradicting that @ xmath27 is nearly - independent . \ ( c ) we use @ xmath73 to be the root of @ xmath27 , which is also the root of @ xmath42 and @ xmath128 . let @ xmath36 be a non - cross path between @ xmath8 and @ xmath9 , where @ xmath8 and @ xmath9 connect in some way @ xmath90 in @ xmath128 . note that @ xmath206 is a non - root of @ xmath90 and is not distinct from @ xmath36 . in proposition ( 31 ) and proposition [ 32 ] , there is an internal node @ xmath89 in @ xmath206 that is the root node of the cross path @ xmath207 in @ xmath197 . similarly , the path @ xmath204 between @ xmath8and @ xmath9 in @ xmath206 is not visible . this is because for any network leaf @ xmath41 not below @ xmath9 in @ xmath128 , @ xmath208 does not pass through @ xmath204 , and for any network leaf @ xmath41 below @ xmath9 in @ xmath128 , @ xmath209 has a leaf not passing through @ xmath204 . therefore , @ xmath89 must be the unique internal node of @ xmath206 . that is , @ xmath89 is the parent of @ xmath8 and the parent of @ xmath9 in @ xmath206 . note that @ xmath36 is not an edge of @ xmath27 . by ( 2 ) , there is a unique edge - two : @ xmath194 in @ xmath8 and @ xmath9 in @ xmath36 . we consider the following two cases . if @ xmath210 ( see [ fig4 ] below ) , and the unique internal node @ xmath211 had been removed to @@ xmath42 . that is , @ xmath212 . in the case of @ xmath49 , @ xmath126 is a internal node and not located above @ xmath27 . that @ xmath194 and @ xmath126 are both not visible . that @ xmath27 is nearly - invisible . if @ xmath213 ( in [ fig4 ] above ) , then the other internal node @ xmath214 has been used to create @ xmath42 . note that @ xmath215 and @ xmath216 , as @ xmath89 have node names in @ xmath42 . in addition , @ xmath127 is not an internal node of a path in @ xmath197 . ( otherwise , in ( d ) , @ xmath194 and @ xmath127 are both not visible ) . so @ xmath127 is a path in @ xmath128 . clearly @ xmath127 is located below @ xmath9 and therefore , above @ xmath89 in @ xmath128 . ( otherwise@ xmath27 is a node . ) therefore , @ xmath217 does not pass through @ xmath8 . consider a single node @ xmath57 . if it is located below @ xmath9 , then @ xmath208 does not pass through @ xmath8 . if @ xmath41 is above @ xmath9 , then @ xmath218 has a node not passing through @ xmath8 in @ xmath27 . therefore , @ xmath8 is not visible . that @ xmath8 and @ xmath89 are both not visible in @ xmath27 implies that @ xmath27 is nearly - visible . \ ( b ) by the proof of ( b ) , @ xmath178 is the single node in @ xmath27 and @ xmath89 is the single node in @ xmath36 and not visible . thus @ xmath36 must be an edge in @ xmath27 . ( otherwise , ( a ) @ xmath89 and its child in @ xmath36 are both visible , implying that @ xmath27 is nearly -( . ) \ ( e ) it can be easily derived from the definition of the cross path . let @ xmath219 be the cross path from @ xmath89 to @ xmath177 . then , @ xmath177 is a visible reticulation node in @ xmath27 . it may have as many as two reticulation parents that are not visible . let @ xmath220 , where @ xmath221 is the set of all children of @ xmath177 and @ xmath222 is the set of all parent nodes that are not visible in @ xmath27 . @ xmath223 = @ xmath224 . define the cost of @ xmath225 as : @ xmath226 where @ xmath224 is used to find @ xmath177 and the first edge of @ xmath89 which is a visible parent node if there is a non - visible edge passing through @ xmath89 . then in case [ sec : 1 ] , we let @ xmath78 denote the cross path whose first edge is the incoming edge to @ xmat##h73 and # @ xmath227 are the other @ xmath75 trivial paths in @ xmath128 . we compare the cost of a cross path to the trivial path @ xmath90 in @ xmath128 in which the cross path enters and call it the weight of @ xmath90 . the weight of @ xmath90 is denoted by @ xmath100 . if the trivial path does not contain any end node of the cross path in @ xmath197 , its weight is said to be 0 . any such end node contributes to at least one unit of weight . by the definition of self - stable networks , any reticulation node that is not visible must have a visible reticulation node as its child , and by the proof of lemma [ ns _ 1 ] ( c ) , any reticulation node that is not visible in @ xmath27 must be . in @ xmath228 , @ xmath177 is the end node of a trivial path , so it also contributes to at least one unit weight . hence , @ xmath229 . to bound this , we first need a simple definition . as in the [sec : * ] , we use @ xmath116 to denote the trivial paths entering @ xmath103 and @ xmath134 , @ xmath113 to denote the trivial paths entering @ xmath103 for a node @ xmath103 of degree 2 leaving @ xmath128 . . square arrows and curves represent the edges and paths entering @ xmath128 , and the dot arrows and curves represent the other edges and paths . @ xmath230 is the left child of @ xmath103 in the trivial path @ xmath134 to @ xmath103 . @ xmath231 is the child of @ xmath103 in the trivial path @ xmath113 . the path from @ xmath114 to @ xmath112 is a cross path entering @ xmath112 . ( * * * ) the trivial path from @ xmath110 to @ xmath115 and @ xmath232 is a node entering @ xmath103 and @ xmath115 , where @ xmath115 is leaving @ xmath134. ( * * * ) the other tree path @ xmath231 between @ xmath103 and @ xmath112 is also a parent of @ xmath230 . @ xmath27 [ fig5 ] , scaledwidth = 50 . 0 % ] [ ns _ 1 ] let @ xmath130 be the tree path defined above and let @ xmath233 be the tree path from @ xmath140 to @ xmath234 , where @ xmath234 is between @ xmath130 and @ xmath235 . define @ xmath236 . \ ( a ) the tree path @ xmath237 consists of either a single edge or two edges in @ xmath130 . if @ xmath237 has two edges , the tree path is not defined . \ ( b ) if there is a node @ xmath238 between @ xmath103 and @ xmath234 and @ xmath130 and @ xmath238 is a parent node in @ xmath27 , then the x - link in the other tree path @ xmath##239 . \ ( c ) note that @ xmath233 has an additional node that is a single node in @ xmath27 . if there is a cross - link @ xmath240 from @ xmath241 to @ xmath242 such that @ xmath242 is in @ xmath239 , then @ xmath140 is not in @ xmath243 . note that @ xmath244 for @ xmath142 . without loss of detail , we can say that @ xmath245 and @ xmath246 , that is @ xmath247 and @ xmath248 . \ ( d ) let @ xmath232 be a node between @ xmath103 and @ xmath115 in @ xmath134 ( see [ fig5 ] below ) and let @ xmath41 be a node in @ xmath27 . if @ xmath41 is not in @ xmath115 in @ xmath128 , the link @ xmath249 does not extend to @ xmath232 . if @ xmat##h41 be the node below @ xmath115 in @ xmath128 . since @ xmath110 is not above @ xmath134 in @ xmath128 , the tree above @ xmath250 does not cross @ xmath232 . by lemma [ lemma22 ] there is a path from @ xmath73 to @ xmath41 that crosses @ xmath232 . therefore , @ xmath232 is not stable . since @ xmath27 is non - stable , there is at most one node in @ xmath251 , as the internal node is not visible . \ ( b ) suppose on the graph , there is a cross path @ xmath252 from @ xmath114 to @ xmath112 in @ xmath113 , where @ xmath112 is in @ xmath113 . \ ( a ) , @ xmath112 is a child of @ xmath103 or there is a single path @ xmath231 between @ xmath103 and @ xmath112 in @ xmath113 . wewe show that @ xmath103 is not visible in @ xmath27 . if @ xmath112 is a node of @ xmath103 or there is a node @ xmath231 in @ xmath133 so that @ xmath231 has a single child in @ xmath27 , @ xmath103 has no reticulation ##s in @ xmath27 . by fig [ lemma22 ] , @ xmath103 is not visible . if @ xmath113 is a node @ xmath231 between @ xmath103 and @ xmath112 in @ xmath27 , @ xmath253 must also contain an edge in @ xmath27 . however , as shown in fig [ fig5 ] b , @ xmath230 and @ xmath231 are then not visible , so that @ xmath27 is self - stable . let @ xmath254 be the edge removed from @ xmath230 in the process of moving @ xmath27 to @ xmath42 . since @ xmath255 , @@ xmath256 is below @ xmath112 and there is a path from @ xmath73 to @ xmath256 that avoids @ xmath103 . since @ xmath114 is not the shortest path and there is no node between @ xmath103 and @ xmath230 in @ xmath134 , @ xmath89 is directly below @ xmath230 and the path @ xmath135 does not cross @ xmath103 . since the paths ##s @ xmath257 are below @ xmath103 and satisfy the condition # r [ lemma22 ] , there is a path from @ xmath73 to @ xmath41 that avoids @ xmath103 for any leaf @ xmath41 above @ xmath230 nor @ xmath112 . for any leaf @ xmath41 above neither @ xmath230 nor @ xmath112 , it is directly below @ xmath103 and the path @ xmath136 does not pass through @ xmath103 . therefore , @ xmath##103 is also not visible . the fact that @ xmath103 and @ xmath230 are both not visible implies that @ xmath27 is nearly - stable . this implies that there is a cross path entering @ xmath113 . \ ( c ) if @ xmath112 is the child of @ xmath103 and @ xmath113 , the case is trivial . suppose that there is an internal node @ xmath231 in @ xmath103 and @ xmath112 in @ xmath113 . by the fact ( c ) , @ xmath231 is not visible . if @ xmath258 , then @ xmath110 and its child in @ xmath259 are both not visible , then @ xmath27 is nearly - stable . . , while square , triangle and circle represent the internal nodes and paths . the path from @ xmath110 to @ xmath115 is the shortest path ending at the node in the cross path . @ xmath103 [ fig6 ] , scaledwidth = 0 . 5 % ] [ ns _ 1 ]for an ancestor of @ xmath103 of degree @ xmath260 and @ xmath128 , \ ( a ) @ xmath261 and @ xmath262 . \ ( b ) if @ xmath263 , then @ xmath264 , where @ xmath265 . \ ( c ) if @ xmath266 and @ xmath119 , then @ xmath120 . next , assume @ xmath267 is the degree - 3 root of @ xmath103 and that @ xmath268 . then @ xmath269 . \ ( d ) if @ xmath270 , then @ xmath271 and @ xmath123 . \ ( a ) we already know that @ xmath261 . if there is a non - cross edge jumping over the start node of the cross path in @ xmath134 , \ eqn . ( [ x _ def ] ) , the degree of @ xmath134 is of degree 3 . if there is a non - cross edge jumping over the start node @ xmath110 of the cross - path@ xmath272 ending at the path @ xmath115 to @ xmath134 , by the fact ( d ) of figure [ ns _ 2 ] , @ xmath272 is equal to the cross edge @ xmath273 . therefore , @ xmath115 has at most one cross edge , which is in @ xmath134 if exists . by eqn . ( [ weight _ def ] ) , @ xmath261 . \ ( b ) assume @ xmath274 . then , there is a single path @ xmath272 from @ xmath110 to @ xmath115 where @ xmath115 is in @ xmath134 . if there is a non - cross edge jumping over @ xmath110 , by eqn . ( [ weight _ def ] ) , @ xmath115 has two cross edges ( figure [ fig6 ] below ) . if there is a non - cross edge jumping over @ xmath110 , by the fact ( d ) of figure [ ns _ 2 ] , @ xmath272 is equal to the singleedge @ xmath273 , and by eqn . ( [ ns _ def ] ) , @ xmath115 has no visible parent @ xmath230 and @ xmath134 ( figure [ fig6 ] c ) . by the fact ( b ) of theorem [ ns _ def ] , there is no cross path that enters @ xmath113 , nor @ xmath275 . \ ( b ) between @ xmath266 and @ xmath119 . let @ xmath233 be the cross path from @ xmath140 to @ xmath234 , with @ xmath234 entering @ xmath276 . since @ xmath119 , by the fact ( a ) of lemma [ ns _ 33 ] , there is no visible node between @ xmath103 and @ xmath234 for each @ xmath277 . hence , for each @ xmath277 , either the parent of @ xmath234 and @ xmath233 is a reticulation , and not itself ( figure [ fig6 ] c ) , or there is nonon - cross edge @ xmath278 jumping over @ xmath279 ( see [ fig6 ] below ) . by the facts ( a ) and ( b ) of theorem [ ns _ 33 ] , either @ xmath234 is the child of @ xmath103 and @ xmath130 or there is a tree node @ xmath238 between @ xmath103 and @ xmath234 , @ xmath130 for @ xmath265 . suppose that there is a tree node @ xmath238 between @ xmath103 and @ xmath234 in @ xmath130 , @ xmath265 . then @ xmath236 . if @ xmath240 has an edge , that is a cross , by the fact ( c ) of theorem [ ns _ 2 ] , @ xmath280 . if there is a non - cross edge jumping over @ xmath241 , by the fact ( d ) of theorem [ ns _ 3 ] , that @ xmath281 implies that the endpoints of the non - cross edge are also between @ x##math103 and @ xmath234 this is impossible , since there is no @ xmath238 between @ xmath103 and @ xmath234 . therefore , @ xmath280 . similarly , @ xmath282 . we have shown that for @ xmath283 , @ xmath140 is not between @ xmath103 and @ xmath242 . therefore , @ xmath140 is not between @ xmath242 or there is a path from @ xmath73 to @ xmath140 that does not pass @ xmath103 . however , by the [ lemma22 ] , there is a path from @ xmath73 to @ xmath41 , passing through @ xmath103 for any leaf below either @ xmath115 nor @ xmath112 . for any leaf @ xmath41 below either @ xmath115 nor @ xmath112 , since it is not below @ xmath103 nor @ xmath128 , @ xmath136 does not pass @ xmath103 . therefore, @ xmath103 is not visible . this also implies that @ xmath115 and @ xmath112 are children of @ xmath103 . hence @ xmath267 is the parent node of @ xmath116 and @ xmath268 . we further assume that @ xmath116 consists of only one parent @ xmath284 and @ xmath27 . but on the contrary there are nodes of @ xmath267 and @ xmath103 in @ xmath285 . we find the parent @ xmath204 ( @ xmath286 ) of @ xmath103 is the other child @ xmath285 . if @ xmath204 is a reticulation graph , that @ xmath103 is not visible implies that @ xmath204 is also not visible , a contradiction . hence @ xmath204 must have a parent node in @ xmath27 . we consider the following two cases . * = * * . @ xmath204 is equal to @ xmath140 and equal to the other parent of the start node of @ x##math233 for some @ xmath287 . without loss of detail , we can use @ xmath247 ( see [ fig7 ] a and b ) . this implies that there is no non - self - jumping in the cross ##tree @ xmath272 and there is no reticulation node @ xmath288 in @ xmath272 . when @ xmath289 , let @ xmath290 be the node inherited from @ xmath288 in the first step . since @ xmath291 is the parent of @ xmath288 , if @ xmath291 is below @ xmath204 , it will be below @ xmath112 . when @ xmath292 , @ xmath110 is below @ xmath112 if it is below @ xmath204 . similarly , @ xmath114 is below @ xmath115 and is below @ xmath288 if it is above @ xmath204 . the set of all nodes @ xmath293 and @ xmath204 and satisfying the conditions of : [ .##mma22 ] , and there is path from @ xmath73 to @ xmath41 that avoids @ xmath204 for each leaf @ xmath41 , @ xmath288 and @ xmath112 . if @ xmath41 is above neither @ xmath288 nor @ xmath112 , it is not below @ xmath204 , and @ xmath136 does not pass to @ xmath204 . hence , @ xmath204 is not below . * * * * . @ xmath204 is neither @ xmath140 nor the internal leaf of the internal leaf of @ xmath233 for each @ xmath283 ( figure [ fig7 ] above ) . in this case , for each @ xmath283 , @ xmath234 is not below @ xmath242 and there is a path from @ xmath73 to @ xmath140 that avoids @ xmath204 . using figure [ lemma22 ] for the set of leaves @ xmath294 and @ xmath204 , we find thatthere is a path from @ xmath73 to @ xmath41 that avoids @ xmath204 for any leaf @ xmath41 below @ xmath115 or @ xmath112 . similarly , for any leaf @ xmath41 from above @ xmath115 or @ xmath112 , @ xmath208 avoids @ xmath204 . therefore , @ xmath204 must be not visible . that @ xmath204 and @ xmath103 are two different nodes and not visible . that @ xmath27 is nearly - stable . after proving that the path @ xmath285 is not an edge @ xmath284 , we can prove that @ xmath269 . prove to the path @ xmath295 . then , the path @ xmath296 of @ xmath267 and @ xmath297 must be a reticulation node ( figure [ fig7 ] . ) . moreover , the set of paths @ xmath298 and @ xmath267 satisfy the conditions in figure [ lemma22 ] , and .find a path from @ xmath73 to @ xmath41 that does not pass through @ xmath267 for any leaf @ xmath41 below @ xmath267 or @ xmath128 . for any leaf @ xmath41 from below @ xmath267 , the tree above @ xmath136 does not pass through @ xmath267 . therefore , @ xmath267 is not visible . that @ xmath267 and @ xmath103 are not visible contradicts that @ xmath27 is self - organizing tree . \ ( 2 ) if @ xmath270 , then @ xmath103 is the ancestor of the layer - 2 node below @ xmath128 . since @ xmath27 is visible , there does not exist a cross path @ xmath299 from @ xmath89 to @ xmath177 , so that @ xmath300 and @ xmath301 for @ xmath145 . for @ xmath147 . if the ancestor of @ xmath134 and @ xmath113 isstep 2 , and if @ xmath279 is the internal node of the cross path @ xmath302 that leaves @ xmath106 for @ xmath303 , either @ xmath110 or @ xmath114 is a node in @ xmath78 . from the statement of fact ( c ) , we know that @ xmath103 and its parent node @ xmath78 are both not true , by contradiction . . the path from @ xmath279 to @ xmath304 is a cross path ending at @ xmath304 in a similar way @ xmath106 leaves @ xmath103 for @ xmath108 . ( * a * ) @ xmath110 is an internal node in @ xmath116 . ( * b * ) @ xmath204 is the common parent of the unique internal node of the cross path from @ xmath110 to @ xmath115 . ( * c * ) neither @ xmath110 nor @ xmath114 is identical to @ xmath204 and has a common ancestor with @ xmath##204 . ( * * * ) @ xmath267 is the parent of @ xmath103 and has the daughter node @ xmath296 as the only child . square arrows and curves represent the edges and paths in @ xmath128 , round dot arrows represent edges in @ xmath49 that were removed to form @ xmath42 , and square dot arrows and curves represent the edges and paths that were removed to form @ xmath42 to @ xmath128 . [ fig7 ] , scaledwidth = 0 . 5 % ] let @ xmath27 be a np - complete network with @ xmath0 ##3 . 5 , @ xmath305 let @ xmath150 denote the set of internal nodes of degree 1 in @ xmath128 , and define @ xmath306 for any @ xmath307 , we define @ xmath159 to be the starting point of the new node @ xmath160 that enters @ xmath9 . by proposition [ p _ 1 ] ( c ) and ( d ) , that @ xmath308 enters @ xmath309 . then, there are at most two trivial nodes @ xmath310 and @ xmath311 in @ xmath163 such that @ xmath312 , and there are only two trivial nodes and a base - 2 trivial node in @ xmath128 ; for different @ xmath310 and @ xmath311 , if @ xmath313 and @ xmath314 are in @ xmath315 , then @ xmath316 . taken together , the above properties imply that @ xmath317 . since @ xmath147 , @ xmath318 \ \ & = & | v _ 1 | + 2 | v _ 1 | + 3 | v _ 2 | + 3 | v _ 4 | \ \ & \ leq & 3 | v _ 0 | + 2 | v _ 1 | + 3 | v _ 2 | + 2 | v _ 1 | + 3 | v _ 2 | \ \ & \ leq & 3 ( | v _ 0 | + | v _ 1 | + | v _ 2 | + | v _ 3 | + | v _ 4 | ) \ \ & = & 3 ( v - 1) . \ end { } } \ ] ] the stable - child network shown in figure [ fig8 ] only has as many as @ xmath3 shadow nodes . in this case , we shall prove that a stable - child network must have @ xmath3 reticulation nodes at all . we first transform the stable - child network to a fully shadow network and then to a shadow network with the same nodes , removing the shadow into the nodes . if it is not true : ( * b * ) @ xmath45 and its sibling @ xmath319 have a common parent . ( * c * ) @ xmath45 has a sibling @ xmath320 and a sibling @ xmath55 and @ xmath320 such that @ xmath55 and @ xmath320 have a common parent @ xmath89 . ( * d * ) neither ( * b * ) nor ( * c * ) is true . ( * e * ) both ( * d * ) and ( * e * ) exist at the same time [ fig8 ] , scaledwidth = 60 . 5 % ] [ sc _ 1 ] , @ xmath##27 is a stable - child graph . there is a set of edges @ xmath49 such that ( 1 ) @ xmath50 is a subdivision of a tree visible network containing the same edge as @ xmath27 , and ( 2 ) @ xmath49 contains only one incoming edge for each tree node if it is not visible in @ xmath27 . for a tree node @ xmath45 that is not visible in @ xmath27 , its unique child must be a visible tree node . furthermore , since a node has a unique child , its parents must have a unique child other than @ xmath45 and are both a tree node . to transform @ xmath27 into a tree visible network , we must delete one or more edges around a reticulation if it is not visible . for each reticulation node @ xmath45 that is not visible , we consider the following two cases . if @ xmath45 and its unique child @ xmath319 have a tree parent @ xmath320 ( see [ fig8 ] b ) , then @ xmath321 is visible . if @ xmath45 andits parent @ xmath319 does not have a common parent , but @ xmath45 has a common sibling @ xmath55 . that the parent @ xmath89 of the common parent @ xmath320 of @ xmath45 and @ xmath55 is the other parent of @ xmath55 ( figure [ fig8 ] c ) , @ xmath322 and @ xmath323 are both deleted at the same time . when none exists ( figure [ fig8 ] c ) , we arbitrarily choose an additional edge of @ xmath45 to remove . the edge removed by the removal process is called _ sc - edges _ . each sc - edge jumps from a hidden node to a visible node . a sc - edge is _ hidden _ if the head is a visible hidden node ; it is _ hidden _ otherwise . note that a concealed sc - edge is deleted only when the condition shown in figure [ fig8 ] c is satisfied . similarly , a hidden sc - edge jumps over the associated hidden sc - edge that is deleted at the same time . it is not easy to see that the sc - edges that are deleted when the retic##ulation networks are not locally connected . let @ xmath49 be the set of sc - trees . first , we had deleted an outgoing edge for each reticulation node and did not delete the incoming edge for each tree node , so the resulting network @ xmath50 is connected . second , @ xmath50 has the same leaves as @ xmath27 . the reasons for this are that ( i ) we did not remove any outgoing edge of a reticulation node , and ( ii ) for each tree node @ xmath103 , if an outgoing edge of it is removed , the remaining outgoing edge enters a tree node and it has also not been removed . now , we show that @ xmath50 is a subdivision of a binary - visible network . since we had deleted an outgoing edge for a tree node if it is locally connected , all the remaining reticulation nodes are connected . @ xmath50 is reticulation visible . we can also show that there are no two internally connected paths from a common tree node to a common tree node in which each internal node is of degree 1 , implying that @ xmath50 is a subdivision of a binary rechild network . according to the following there are two mutually disjoint path @ xmath259 and @ xmath324 in @ xmath8 and @ xmath9 such that their internal nodes are all of degree 2 . if neither @ xmath259 nor @ xmath324 is a single edge , then the internal edges of @ xmath8 in @ xmath259 and @ xmath324 are also not visible , so that @ xmath27 is a parent - child network . thus , either @ xmath259 or @ xmath324 is a single edge from @ xmath8 and @ xmath9 . without loss of generality , we can say that @ xmath324 is equal to the edge @ xmath175 . according to the same definition which we use to define the edges in @ xmath49 , if an incoming edge of a graph is removed , the child of @ xmath50 is visible in @ xmath27 . this means that @ xmath50 does not have a node consisting of two or more degree - 2 edges that are not visible in @ xmath27. . , @ xmath259 has only one internal node @ xmath177 . if @ xmath177 is a tree node in @ xmath27 , then , we removed an outgoing edge of @ xmath177 according to either the second or third case . in the first case , we removed @ xmath325 at the same time . in the second case , @ xmath47 does not exist in @ xmath27 . this is false . when @ xmath177 is a tree node , we remove an outgoing edge of it . again , the edge @ xmath47 does not exist in @ xmath27 in each other case , by contradiction . we have proved that @ xmath50 is a subdivision of a visible network . let @ xmath326 be the subnetwork created after the removal of the edge in @ xmath49 . @ xmath42 is a subdivision of a reticulation visible network . by theorem [ 1 _ 1 ] , there is a set of nodes @ xmath197 such that ( 1 ) @ xmath327 is a subtree of @ xmath27 with the same sizeand ( b ) if the internal nodes in each node in @ xmath197 are of length 2 . again , we use @ xmath328 to denote the trivial path in @ xmath128 , where @ xmath78 denotes the trivial path starting with @ xmath28 . as in the last section , a path in @ xmath197 is called a non - cross path if its start and end nodes are visible in @ xmath188 for all @ xmath277 ; it is called a trivial path otherwise . [ sc _ 1 ] let @ xmath36 be a path in @ xmath197 . \ ( a ) every internal node in @ xmath36 is not visible in @ xmath27 . \ ( b ) if @ xmath36 is a non - cross path , it is simply an edge . \ ( c ) if @ xmath36 is a cross path and starts at the node @ xmath177 in the trivial path @ xmath188 , every node in the internal node of @ xmath188 and @ xmath177 in @ xmath128 is not visible in @ x##math27 . \ ( a ) if @ xmath36 is a cross path and there is a non - cross path @ xmath178 takes over it , then either @ xmath36 is an edge or the start node of @ xmath36 is the start of the start node of @ xmath178 in @ xmath128 . \ ( a ) and ( b ) are simply the ends of the nodes ( b ) and ( c ) in the [ x _ 2 ] . \ ( c ) let @ xmath204 be a node between the start node of @ xmath188 and @ xmath177 in @ xmath128 . for any leaf @ xmath41 that is not below @ xmath177 in @ xmath128 , @ xmath249 is the leaf that does not pass @ xmath177 and leaves @ xmath204 . for any leaf @ xmath41 below @ xmath177 in @ xmath128 , the leaf @ xmath329 leaves @ xmath204 , and @ xmath89 is the start node of@ xmath36 is a trivial path removed from @ xmath188 . hence , @ xmath204 is not visible in @ xmath27 . \ ( a ) \ ( b ) , @ xmath178 is simply an edge @ xmath47 from @ xmath42 . let @ xmath36 arrive at the edge @ xmath89 . if neither @ xmath330 nor @ xmath36 is a single node , the - children of @ xmath89 , @ xmath36 and @ xmath331 are also not visible , contradicting that @ xmath27 is a - child . let @ xmath45 be a single node and not visible in @ xmath27 . therefore , a single stable - edge @ xmath332 is removed from @ xmath45 to reach @ xmath42 from @ xmath27 . we define the cost @ xmath333 of @ xmath45 to be : @ xmath334 after that @ xmath335 . we also define the cost of a trivial path @ xmath219 from @ xmath##89 to @ xmath177 as follows : @ xmath336 we still assign the weight of @ xmath225 to the trivial path @ xmath90 to which @ xmath177 belongs and give it the weight of @ xmath90 , then @ xmath100 . if there is no trivial path in @ xmath90 , the weight of @ xmath90 is said to be 0 . as for non - trivial paths , we say that @ xmath337 for an internal node @ xmath103 with degree - 3 in @ xmath128 , we can use @ xmath134 and @ xmath338 to denote the trivial paths and @ xmath103 and @ xmath116 to denote the trivial paths in @ xmath103 . [ # _ 1 ] for an internal node @ xmath103 of degree 4 in @ xmath128 , \ ( a ) @ xmath339 , @ xmath142 . \ ( b ) @ xmath340 . \ ( c ) if @ xmath266 and @ xmath341 , then @xmath271 . first , if @ xmath267 is the start node of @ xmath116 and @ xmath268 . then @ xmath342 . \ ( d ) if @ xmath270 , then @ xmath271 and @ xmath343 . \ ( e ) we can also prove that @ xmath344 . let @ xmath272 denote the cross edge starting from start node @ xmath115 to @ xmath134 . let @ xmath110 be the start node of @ xmath272 in a trivial way starting from @ xmath134 . prove that @ xmath345 . if there is no non - cross edge jumping over @ xmath110 , then there are at most two elements in @ xmath346 , and each element can have two cross edges at most . therefore , by eqn . ( [ scformula ] ) , @ xmath347 . if there is no non - cross edge @ xmath183 jumping over @ xmath110 . consider the fact ( 2 ) . lemma [ sc _ 1 ], @ xmath348 is a class a edge . therefore , by the equation ( a ) \ to [ 1 _ 2 ] ( a ) , either @ xmath272 is an edge , or @ xmath349 is an edge in @ xmath128 . if @ xmath272 is an edge , then @ xmath350 . if @ xmath349 is an edge , @ xmath351 . both imply that @ xmath352 . hence , by eqn . ( [ scformula ] ) , @ xmath353 . we remark that , if the parent of @ xmath115 in @ xmath128 is not a reticulation edge in @ xmath27 , then @ xmath354 , and then @ xmath355 . this holds even if there is a non - empty edge crossing at @ xmath177 . \ ( b ) if @ xmath356 and @ xmath357 , we note that the shortest path @ xmath302 starting at the parent @ xmath115 in @ xmath106 ends at @ xmat##h279 for @ xmath108 . by the section ( c ) of \ [ sc _ 1 ] , the parent node of @ xmath358 and @ xmath359 is always stable . if there is a match between @ xmath103 and @ xmath304 for example @ xmath360 , then the other children of @ xmath103 are not contained in @ xmath27 , so that @ xmath27 is non - stable . hence @ xmath103 is the parent of either @ xmath115 or @ xmath112 . without loss of detail , we can assume that @ xmath103 is the parent of @ xmath115 and @ xmath128 . by the remark at the end of the section of ( c ) , @ xmath355 and hence @ xmath361 . \ ( c ) implies that @ xmath266 and @ xmath267 are the only children of @ xmath116 after that @ xmath268 . if @ xmath341 , \ ( c ) , the weights of @ x##math134 and @ xmath113 are both not zero . however , there is a trivial path @ xmath302 ending at a node @ xmath304 and @ xmath106 and beginning at a node @ xmath279 and a trivial path different from @ xmath106 for in @ xmath362 . we first assume that @ xmath279 is ( i ) in @ xmath363 , and ( ii ) neither above @ xmath116 nor below @ xmath103 for @ xmath364 and @ xmath224 . without loss of detail , we use @ xmath364 . * case 1 * . @ xmath110 is in @ xmath359 ( see [ fig9 ] below ) . if there is a non - zero edge @ xmath183 passing through @ xmath110 , @ xmath111 is either in @ xmath365 or @ xmath111 is in @ xmath112 and @ xmath113 . the former implies that @ xmath111 is not zero , whereas the latternote that @ xmath112 is not visible . this means that both @ xmath111 and @ xmath112 are visible in @ xmath42 . since @ xmath110 is an internal node in @ xmath103 and @ xmath112 in @ xmath128 , then @ xmath103 is the parent of @ xmath115 and @ xmath128 . by the conditions ( a ) and ( b ) of the [ graph _ theorem ] , an internal node in @ xmath272 or @ xmath365 is not visible . thus , @ xmath366 or @ xmath367 is an edge . however , the internal children of @ xmath110 are not visible , so @ xmath27 ##2 stable - convergence theorem . if @ xmath366 is an edge in @ xmath27 , then @ xmath368 and then @ xmath343 , a contradiction . if @ xmath367 is an edge , then @ xmath369 . since @ xmath110 is not a vertex ,in the notation at the end of the proof of ( a ) , @ xmath370 . therefore , @ xmath343 . this is true . * case 2 * . @ xmath110 is a node in the path @ xmath116 . without loss of detail , we can say @ xmath110 is lower than @ xmath114 if @ xmath114 is also below @ xmath116 . we note that @ xmath103 and all the internal nodes in @ xmath371 are not below . let @ xmath8 be below @ xmath103 or the internal node in @ xmath371 . if @ xmath114 is below @ xmath372 , the proof is equivalent to case 2 . so there are two cases to consider : either @ xmath114 is below @ xmath115 ( figure [ fig9 ] b ) , or @ xmath114 is not below @ xmath110 ( figure [ fig9 ] c ) . in both cases , the internal node in @ xmath373 is below the path @ xmath8, and by the statement in lemma [ lemma22 ] , that @ xmath8 is not visible with respect to a leaf @ xmath41 below either @ xmath115 or @ xmath112 . for each leaf @ xmath41 located below @ xmath115 or @ xmath112 , the leaf @ xmath208 crosses @ xmath8 . otherwise @ xmath8 is not visible in @ xmath27 . there are two observations from this result . first , there is a non - cross path @ xmath183 jumping to @ xmath110 , so @ xmath111 is not visible . second , the child of @ xmath110 and @ xmath116 is not visible , and so the cross path @ xmath272 is not an edge . and by the definition ( a ) of theorem [ sc _ 1 ] , the two children of @ xmath110 are both not visible in @ xmath27 . and ( b ) of lemma [ sc _ 2 ] , either @ xmath374 or @ xmath375 is an edge in @xmath128 . if @ xmath103 is the parent of @ xmath115 in @ xmath128 , then @ xmath376 according to eqn . ( [ scformula ] ) . then ( b ) , @ xmath343 . if @ xmath103 is the parent of @ xmath112 , @ xmath369 and @ xmath370 according to the statement at the end of the clause of ( a ) . taken together , both cases imply that @ xmath343 , which contradicts the statement that @ xmath341 . * = : * . @ xmath110 is above @ xmath112 and @ xmath114 is above @ xmath115 ( see [ fig9 ] below ) . this statement is true since there is no contradiction in @ xmath27 , contradicting @ xmath27 is true . to sum up , @ xmath341 implies that either ( i ) or ( j ) is true . so in both cases , if we let @ xmath8 imply that @ xmath103 orany internal node of @ xmath116 , the set of reticulations @ xmath294 are in @ xmath8 and satisfy the conditions of lemma [ lemma22 ] . therefore , @ xmath103 and any internal node of @ xmath116 are not visible . there are two consequences from this result . first , @ xmath271 because there is no cross path that ends at @ xmath116 . ( suppose the cross path leaves @ xmath116 with a node that is not visible in @ xmath27 . ) second , the child of @ xmath267 in @ xmath268 is not visible . third , @ xmath377 if there is no cross path that ends at @ xmath297 . assume there is a cross path @ xmath378 from @ xmath379 to @ xmath380 with @ xmath380 in @ xmath297 . because ( 1 ) of theorem [ sc _ 2 ] , any internal node in @ xmath381 is not visible . consider the child of @ xmath267 in @xmath285 is not visible . hence , @ xmath382 is an node in @ xmath128 . then , in the notation at the end of section of ( a ) , @ xmath342 . ( b ) if @ xmath270 , then @ xmath103 is an instance of any class - 1 node in @ xmath128 . since @ xmath27 is invisible , there does not exist any other in @ xmath383 except that @ xmath384 for @ xmath145 and @ xmath385 . hence , @ xmath147 . if @ xmath341 , then , each node in @ xmath78 is not visible in @ xmath27 , shown in ( b ) . this means that @ xmath78 is the node in @ xmath28 and @ xmath28 is visible with respect to each node in @ xmath27 . . ( * a * ) @ xmath110 is both @ xmath103 and @ xmath112 . ( * b * ) @ xmath110take the trivial path @ xmath116 to @ xmath103 , and @ xmath114 is below @ xmath115 . ( * c * ) @ xmath110 is below @ xmath116 , and @ xmath114 is not below @ xmath115 . ( * c * ) @ xmath110 is below @ xmath114 and @ xmath114 is not below @ xmath115 . this means [ for a node [ fig9 ] , scaledwidth = 1 . 5 % ] let @ xmath27 be a two - state node with @ xmath0 ##3 . then , @ xmath386 and @ xmath150 denote the start of the @ xmath151 starting node of node 3 in @ xmath128 . define @ xmath387 # : [ # _ 1 ] ( 1 ) , @ xmath388 . then , @ xmath389 and thus @ xmath390 . let @ xmath159 denote the start node of the trivial path to @ xmath9 in @ xmath12##8 . by proposition [ sc _ 3 ] ( c ) and ( d ) , if @ xmath391 , then @ xmath392 for all @ xmath393 . by proposition [ sc _ 3 ] ( d ) , by the property @ xmath162 , at least two nodes in @ xmath394 are mapped to the same node in @ xmath164 , and only one node can be mapped to @ xmath395 . thus , @ xmath396 since @ xmath147 , the above property implies that @ xmath397 \ \ & = & \ sum _ { i = 0 } ^ { 10 } | | v _ i | \ \ & \ leq & | v _ 1 | + 2 | v _ 2 | + 3 | v _ 3 | + 4 | v _ 4 | + 7 \ sum _ { i = 0 } ^ { 10 } | v _ 1 | + | v _ 5 | + 2 | v _ 6 | + 5 | v _ { 0 } | ) \ \ & \ leq & | v _ 1 | + 2 | v _ 2 | + 3 | v _ 9 | + 5 |v _ 4 | + 5 \ sum _ { i = 5 } ^ { 10 } | v _ 1 | + 6 | v _ 2 | + 3 \ sum _ { i = 5 } ^ 4 | v _ 1 | \ \ & = & 6 | v _ 0 | + 4 | v _ 1 | + 5 | v _ 2 | + 6 | v _ 3 | + 7 | v _ 4 | + 8 \ sum _ { i = 5 } ^ { 10 } | v _ i | \ \ & \ leq & 1 \ sum _ { i = 5 } ^ { 10 } | v _ i | \ \ & = & 1 ( 1 - 1 ) . \ begin { aligned } \ ] ] we have established the tight upper bounds for the sizes of galled , nearly - linear , and one - dimensional networks . since the number of rooted leaf nodes is equal to the number of edges and the number of root nodes of a binary network , we can publish our results in table [ table1 ] . without question , these tight bounds provide insight to the study of combinatorial and topological aspects of the complexity classes defined by this property . . the tight upper bounds for the sizes of binary networks with @xmath0 is defined by this property . the definition for the visible ##ness is given in bordewich and semple ( 2015 ) . [ table1 ] [ options = " < , ^ , ^ " , options = " header " , ] gambette a , gunawan adm , labarre a , vialette a , zhang l ( 2015 ) , a node in a neural network in canonical form , in proc . of the ieee intl conf . j . , comput . ( recomb ) , pp . 96107 , warsaw , poland .