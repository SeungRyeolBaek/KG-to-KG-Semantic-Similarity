it may refer to the transfer of genetic material between two cells in a co - operative process . horizontal gene transfer is considered to be a highly specialized genetic process occurring in single - cell organisms ( wang and bapteste 2007 ; treangen and rocha 2011 ) . other specialized processes include introgression , repair and transcription ( fontaine et al . 2015 ; mcbreen and lockhart 2006 ; marcussen et al . 2014 ) . in the last few decades , phylogenetic networks have increasingly been used for the study and modeling of evolutionary processes ( gusfield 2014 ; huson et al . 2011 ) . visible networks , rooted networks , tree based networks are three of the main types of phylogenetic networks used to study the cellular and evolutionary aspects of phylogenetics ( wang et al . 2001 ; gusfield et al . 2004 ; huson and kloepper 2007 ; huson et al . 2011 ) . the two networks are rooted networks and visible networks . they are tree - based ( gambette et al . 2015 ) . the tree - based networks were introduced by francis and jones ( 2015 ) , . it is well known that the structure ofthe nodes of a phylogenetic network with @ xmath0 leaves are @ xmath4 . in contrast , an entire phylogenetic tree with n nodes must have as many internal nodes as possible . however , an important theoretical question is how large a phylogenetic network in a given case can be . for example , it is well known that a parent - child network with @ xmath0 leaves has @ xmath2 non - leaf nodes at most . a phylogenetic network with @ xmath0 leaves has @ xmath5 nodes at most ( willson 2010 ) . to test whether or not the network size problem is # ##ly ##f , however , gambette et al . ( 2015 ) proved that a large phylogenetic network with @ xmath0 leaves has at most @ xmath6 non - leaf nodes . the class of nearly - stable networks is well defined in their paper . they also proved the existence of a tight upper bound on the number of # ##s in a nearly - stable network . in the following paper , we compute the tight upper bound for the size of a network defined by a certain parameter using a sub - exponential method that was introduced by gambette et al . the paper of this paper is divided into two2 . section [ sec : stable ] presents concepts and methods that are useful for our understanding . previously , bordewich and semple ( 2015 ) proved that there are at most @ xmath2 leaf nodes in every nearly visible network . in section [ sec : stable ] , we give a simple proof of the @ xmath2 upper bound for nearly visible networks . section [ sec : stable ] proves that there are at most @ xmath1 leaf nodes in all child networks with @ xmath0 nodes . sections [ sec : nearlystable ] and [ sec : stablechild ] give the same upper bound for the existence of nearly - invisible and nearly - visible networks , respectively . in section [ conc ] , we begin the section with a few examples . an elementary network is a simply connected graph with no internal nodes . let @ xmath7 be an elementary graph and let @ xmath8 and @ xmath9 be two copies of @ xmath10 . if @ xmath11 , then is called the _ incoming _ edge of @ xmath8 and _ outgoing edge _ of @ xmath9 ;@ xmath8 and @ xmath9 are said to be the root and base of the node . the sets of incoming and outgoing edges of the node are called the _ indegree _ and _ outdegree _ , respectively . @ xmath10 is said to be _ root _ if there is a rooted node @ xmath12 with indegree ##s ; @ xmath12 is called the _ root _ of @ xmath10 . note that in every finite phylogenetic tree there is a shortest path from the root to every other node . for @ xmath13 , @ xmath14 denotes the node with the same node set and the edge set @ xmath15 . for @ xmath16 , @ xmath17 denotes the node with the node set @ xmath18 and the edge set @ xmath19 . if @ xmath20 and @ xmath21 are subdigraphs of @ xmath10 , @ xmath22 denotes the subdigraph with the node set @ xmath23 and the edge set @ xmath24 . for _ _ root _ of a finite family of trees , @ xmath25, is a binary tree , in which every non - root node has either indegree 1 or outdegree 2 and there are also @ xmath26 nodes of outdegree 1 and indegree 2 , with _ internal _ , that are one - to - one with the nodes in the network . in a phylogenetic network , a node is called a _ root node _ if it is either the root or leaf node of indegree 1 ; it is called a _ leaf node _ if its indegree is greater than one . note that nodes are tree nodes and every tree node must have both indegree and outdegree 1 . a non - root node is said to have _ leaf _ . a phylogenetic network without tree nodes is called a _ _ tree _ . for a phylogenetic network @ xmath27 , we have the following definitions : * @ xmath28 : the set of @ xmath27 . * @ xmath29 : the set of nodes . * @ xmath30 : the set of root nodes . * @ xmath31 : the set of leaf nodes . * @ xmath32 : the set of nodes . * @ xmat##h33 : the number of nodes . for the graphs @ xmath34 and @ xmath29 , if @ xmath35 , @ xmath8 is said to be an _ ancestor _ of @ xmath9 and , equivalently , @ xmath9 is an _ descendant _ of @ xmath8 . in particular , if there is a directed path from @ xmath8 to @ xmath9 , @ xmath8 is an _ ancestor _ of @ xmath9 and @ xmath9 is an _ ancestor _ of @ xmath8 . we can say that @ xmath9 is in @ xmath8 when @ xmath8 is an ancestor of @ xmath9 . let @ xmath36 and @ xmath37 be the directed paths from @ xmath8 to @ xmath9 and @ xmath27 . we use @ xmath38 and @ xmath39 to represent their edge pairs , respectively . they are _ _ connected _ if @ xmath40 . similarly , a binary graph _ _ connected _ , if each edge is outdegree 1 and indegree 2 , thenall nodes have rank d , and all the edges are indegree ##d . therefore , we are interested in how stable a binary binary network can be . in the context of the following , binary binary network a is sometimes called a network and binary binary network a network . for purposes of allowing for stability , we will consider an alternative path to the root of the network . a node @ xmath9 in a network is _ _ _ ( _ _ ) with respect to a leaf @ xmath41 if @ xmath9 is on the path from the root node to @ xmath41 . we call @ xmath9 stable if it is stable with respect to a node in the network . [ prop1 ] let @ xmath27 be a node and @ xmath42 a subnetwork of @ xmath27 with the same node and leaf in @ xmath27 . then , a node is visible in @ xmath42 if it is visible in @ xmath27 . equivalently , a node is not visible in @ xmath27 if it is not visible in @ xmath42 . then @ xmath43 is stable with respect to a leaf @ xmath41 . @ x##math27 . for every path @ xmath36 from @ xmath44 to @ xmath41 , since there is already a path from @ xmath28 to @ xmath41 from @ xmath27 , it must pass through @ xmath9 . therefore , @ xmath9 is not connected with respect to the other internal node @ xmath42 . _ nearly visible _ networks are networks in which internal nodes are all trees ( huson et al . they are also called tree networks by gambette et al . ( 2015 ) . a path is _ tree _ if every internal node @ xmath45 has an edge @ xmath46 such that there are no other edge paths from @ xmath46 to @ xmath45 ( huson and kloepper 2007 ) . similarly , a path is # ##less if the internal nodes are all leaf nodes in the network . tree networks are hierarchical networks and are also known as k - 2 networks . _ nearly - visible _ networks are networks in which for every pair of nodes @ xmath8 and @ xmath9 , either @ xmath8 or @ x##math9 is stable if @ xmath47 contains an edge ( gambette et al . 2015 ) . _ stable - child _ networks are networks in which every node has a visible edge . tree - based networks are an important class of networks that are emerging today ( francis and francis 2015 ) . a network is _ tree - based _ if it can be formed from a tree with the same nodes by the addition of a pair of edges between the nodes in the tree . [ stable _ 1 ] ( gambette et al . 2015 ) for a tree - based network @ xmath27 , there is a set of nodes @ xmath48 such that @ xmath49 contains exactly one visible edge for each leaf , and @ xmath50 contains a subtree with the same edges as @ xmath27 . the [ stable _ 1 ] states that every such a network is tree - based . however , tree - based networks and stable - child networks are not necessarily tree - based . we end this section by providing a simple proof that will then be useful for establishing the following ##est ##imating on the properties of the network in each of the three cases listed above . [ lemma22 ] : @ x##math27 be a node , @ xmath51 , and @ xmath52 be a finite set of connected nodes , @ xmath8 . if : @ xmath53 has a parent @ xmath54 such that : ( a ) @ xmath54 is below another @ xmath55 or @ xmath52 , and ( b ) there exists a path from @ xmath56 to @ xmath54 that avoids @ xmath8 , then there exists a path from @ xmath56 to @ xmath41 . @ xmath8 for every node @ xmath41 has a connected node @ xmath53 . avoid @ xmath57 . if @ xmath41 is below another @ xmath58 . then , there exists a path @ xmath59 from @ xmath60 to @ xmath41 that avoids @ xmath8 . since @ xmath52 is connected and @ xmath27 is connected , there exists a set of connected nodes , @ xmath61 such that : \ ( x ) = @ xmath62 has a parent @ xmat##h63 = @ xmath64 for @ xmath65 , and \ ( 2 ) the path @ xmath66 is a path @ xmath67 such that there is a path @ xmath68 from @ xmath28 to @ xmath67 that avoids @ xmath8 . since @ xmath63 is above @ xmath64 , there is a path @ xmath69 from @ xmath64 to @ xmath70 for above @ xmath71 . since @ xmath27 is above and @ xmath64 is below @ xmath8 , the path @ xmath69 avoids @ xmath8 . using these paths , we have the shortest path @ xmath72 from @ xmath73 to @ xmath41 that avoids @ xmath8 . gambette et al . ( 2015 ) showed that there are at most @ xmath74 - nodes in a fully connected network with @ xmath0 appearing first . on the other hand , there are as many other @ xmath2 nodes .the two node are in pairs [ fig1 ] . now , what is the tight upper bound on the number of such nodes ? indeed , @ xmath2 is the tight upper bound , which was first proved by bordewich and semple ( 2015 ) using the same method . now , we give an elementary example to prove our theorem . nodes of degree 2 [ fig1 ] , scaledwidth = 0 . 5 % ] for a complete directed graph @ xmath27 with @ xmath0 leaves , we let @ xmath49 be a set of nodes such that @ xmath50 is a subtree with the same edges and vertices as @ xmath27 ( figure [ 1 _ 2 ] ) . since @ xmath50 has @ xmath0 leaves , there are no @ xmath4 nodes of degree 2 . also , there are @ xmath75 paths whose edge lengths are of degree 2 , starting at a degree - 2 node and ending at either a node of degree 2 or a vertex . all these @ xmath75 paths intersect @ xmath76 . the edges of @ xmath50 also intersect @ xmath77 .consider a graph @ xmath78 that contains the vertex @ xmath56 ( see [ fig1 ] ) . if @ xmath56 is of degree 2 , @ xmath78 passes through @ xmath28 and ends at the degree - 3 vertex . if @ xmath28 is of degree 4 , @ xmath78 is on the same side of @ xmath56 . therefore , these @ xmath79 paths are called the _ trivial paths _ of @ xmath50 . note that @ xmath80 . it is not hard to see that , for each vertex in @ xmath49 , the head and tail are both included in these trivial paths . an edge @ xmath81 is called a _ cross _ edge if @ xmath82 and @ xmath83 for @ xmath84 ; it is a _ non - cross _ edge if . the proof of the above theorem appears in the proof of theorem 2 of gambette et al ( 2015 ) . [ 1 ] * the two distinct edges @ xmath85 have their origin in the _ trivial paths of @ xmath50 . * for each non - cross edge@ xmath47 such that @ xmath86 for _ @ xmath87 , there is at most one cross edge @ xmath88 such that @ xmath89 is between @ xmath8 and @ xmath9 in @ xmath90 . for a cross edge @ xmath47 such that @ xmath82 and @ xmath83 ( @ xmath91 ) , we say @ xmath47 _ leaves _ @ xmath90 and _ leaves _ @ xmath92 . for a non - cross edge @ xmath47 and a cross edge @ xmath93 , if @ xmath8 and @ xmath9 ##3 and @ xmath94 and @ xmath89 is a cross between @ xmath8 and @ xmath9 in @ xmath90 , we say @ xmath47 _ leaves _ _ @ xmath93 . it is easy to see that the cross edge is the cross edge @ xmath78 . theorem [ 1 ] states that @ xmath49 has at most @ xmath75 _ leaves and has at most @xmath75 non - trivial edges . by theorem [ 1 _ weight ] , @ xmath95 . to calculate the upper upper bound @ xmath96 for @ xmath97 , we define the weight @ xmath98 of a cross edge @ xmath85 as : @ xmath99 we then compare the weight of a cross edge to the trivial path it enters and call it the _ weight _ of the trivial path . if a cross edge enters a trivial path , the weight of this trivial path is defined to be 1 . by theorem [ 2 ] , the weight of a trivial path is at least 1 . we use @ xmath100 to calculate the cost of a trivial path @ xmath90 , @ xmath101 . . @ xmath102 is the non trivial edges leading to a degree - 2 vertex @ xmath103 ; @ xmath104 is the cross edge ending at @ xmath105 for @ xmath106 and the non - cross edge @ xmath107 ending at @ xmath104 for @ xmath108 . therefore , @ xmath109 is non trivial . (* a * ) @ xmath110 and @ xmath111 are located between @ xmath103 and @ xmath112 in @ xmath113 . ( * b * ) @ xmath110 is between @ xmath103 and @ xmath112 in @ xmath113 , and @ xmath111 is above @ xmath112 in @ xmath113 . ( * c * ) the node @ xmath110 is between @ xmath112 and @ xmath114 and above @ xmath115 . this problem is difficult to solve , because it involves a single node . [ fig2 ] , scaledwidth = 0 . 5 % ] for an arbitrary node @ xmath103 of degree 3 in @ xmath50 , we use @ xmath116 to denote the trivial path and @ xmath103 and @ xmath117 to denote the two trivial paths in @ xmath103 . [ fig _ 1 ] let @ xmath103 be a degree - 3 node in @ xmath50 . \ ( 2 ) if @xmath118 and @ xmath119 , then @ xmath120 . \ ( i ) if @ xmath121 , then @ xmath122 and @ xmath123 . for purposes of computation , we use @ xmath124 and then @ xmath125 to find the shortest path from @ xmath126 to @ xmath127 for each node @ xmath126 and a node @ xmath127 of @ xmath126 in @ xmath128 . @ xmath27 and @ xmath128 have the same node and leaf . the common ancestor of @ xmath27 and @ xmath128 is called @ xmath73 . \ ( i ) suppose that @ xmath118 and @ xmath119 . then , there is a cross edge @ xmath129 in @ xmath130 and a non - cross edge @ xmath131 passing through @ xmath129 for each @ xmath132 . we shall find that @ xmath120 , showing that the cross edge enters @ xmath11##6 . when @ xmath110 is above @ xmath103 and @ xmath112 passes @ xmath113 . when @ xmath111 is below @ xmath110 in @ xmath133 ( figure [ fig2 ] below ) , there are three possibilities . if @ xmath114 is above the leaf @ xmath134 and below it , then , @ xmath135 does not pass @ xmath111 . if @ xmath114 is directly above @ xmath103 , @ xmath135 does not pass @ xmath103 and passes @ xmath111 . then , in figure [ lemma22 ] , there is one from @ xmath73 to the leaf in @ xmath112 that does not pass @ xmath111 . for every node @ xmath41 or from @ xmath112 to @ xmath128 , @ xmath136 passes @ xmath111 . therefore , @ xmath111 is a possible path to @ xmath27 , but not there . this is a2 . when @ xmath111 is above @ xmath112 in @ xmath128 ( example [ fig2 ] above ) , @ xmath111 is above @ xmath112 in a leaf of . since @ xmath137 does not pass @ xmath112 , by contradiction [ lemma22 ] , there is a path from @ xmath73 to a leaf of @ xmath112 that does not pass @ xmath112 . for every path @ xmath41 and above @ xmath112 in @ xmath128 , @ xmath136 passes @ xmath112 . therefore , @ xmath112 is not connected , by symmetry . we have shown that @ xmath110 is connected between @ xmath103 and @ xmath112 by the shortest connection @ xmath113 . by symmetry , @ xmath114 is not between @ xmath103 and @ xmath115 in @ xmath134 . suppose there is a shortest connection in @ xmath116 . let @ xmath45 .the lowest spanning node is @ xmath116 . therefore , @ xmath110 and @ xmath114 are both nodes in @ xmath138 . therefore , either @ xmath111 or @ xmath139 is between @ xmath45 and @ xmath103 , so that @ xmath45 is the lowest spanning node in @ xmath116 . combining this result with that @ xmath140 is not between @ xmath103 and @ xmath141 and @ xmath128 for @ xmath142 , we find that either @ xmath140 is below @ xmath141 or there is a path from @ xmath73 to @ xmath140 for in @ xmath45 for in @ xmath142 . however , by theorem [ lemma22 ] , @ xmath45 is not connected with paths to any leaf in @ xmath45 . for any leaf @ xmath41 is below @ xmath45 in @ xmath128 , the shortest path @ xmath136 to @ x##math45 . \ , @ xmath45 is not visible , a contradiction . we have proved that @ xmath120 . \ ( 2 ) if @ xmath121 , then @ xmath103 is an instance of a possible degree - 2 polynomial in @ xmath50 . since @ xmath27 is visible , there does not exist @ xmath143 and that @ xmath144 for both @ xmath145 and @ xmath146 . hence , @ xmath147 . \ in the graph the values of @ xmath134 and @ xmath113 are degree 2 . \ , @ xmath140 is visible above @ xmath103 and @ xmath141 for @ xmath142 , as above . if @ xmath110 and @ xmath114 are above @ xmath78 , the corresponding polynomial in @ xmath78 is not visible , a contradiction . \ , @ xmath110 is above @ xmath112 and @ xmath114 is above @ xmath115 , so the correspondingthen @ xmath27 ( in [ fig2 ] above ) . this is a contradiction . therefore , either @ xmath134 or @ xmath113 has length less than 3 . @ xmath148 let @ xmath27 be a type of graph with @ xmath0 ##0 . then , @ xmath149 let @ xmath150 denote the set of @ xmath151 starting nodes of # 0 and @ xmath50 . note that the shortest path longer than @ xmath78 ends with a node in @ xmath150 if : @ xmath152 for @ xmath153 . therefore , @ xmath154 and are pairwise in and in @ xmath155 when @ xmath156 , @ xmath157 . by proposition [ stable _ 2 ] , @ xmath158 . let @ xmath159 denote the starting node of @ xmath160 for example @ xmath156 . then , by proposition [ stable _ 3 ] , @ xmath161 . it is known that under the condition @ xmath16##2 , at least two nodes in @ xmath163 are mapped to the same node in @ xmath164 , and two nodes in @ xmath163 are mapped to two nodes in @ xmath165 . hence , @ xmath166 . since @ xmath147 , the result is that @ xmath167 \ \ & = & | v _ 1 | + 2 | v _ 2 | + 1 | v _ 1 | + ( | | v _ 2 | + | v _ 1 | ) \ \ & \ leq & 2 ( | v _ 0 | + | v _ 2 | ) + 3 ( | v _ 1 | + | v _ 2 | + | v _ 4 | ) \ \ & \ leq & 3 ( | v _ 0 | + | v _ 1 | + | v _ 2 | + | v _ 3 | + | v _ 4 | ) \ \ & = & [ ( 1 - 1 ) , \ { { 1 } \ ] ] where the following definition is derived from the definition of @ xmath168 for @ xmath169 . these networks form a class of locally ordered networks ( hu##son et al . 2011 ) . in this case , we shall assume that there are at most @ xmath1 leaves in the simple network with @ xmath0 leaves . note that the simple network shown in figure [ fig3 ] also has many @ xmath1 leaves , @ xmath1 is the upper bound on the number of connected vertices in the simple network with @ xmath0 leaves . : there is a non - cross edge @ xmath47 and @ xmath49 such that @ xmath8 and @ xmath9 meet in @ xmath78 , and it is a non - edge . @ xmath170 and a non - cross edge @ xmath109 both meet at a point in the simple network other than @ xmath78 , where @ xmath171 is not connected . in ( * b * ) and ( * c * ) , the straight and curved arrows represent edges and vertices in @ xmath50 , respectively ; solid line arrows represent vertices in @ xmath49 , [ [ fig3 ] , scaledwidth = 0 . 5 % ] [ gn _1 ] for a directed network @ xmath27 with @ xmath0 leaves , @ xmath172 let @ xmath27 be a directed network with @ xmath0 leaves and edges @ xmath173 . since @ xmath27 is not free , and setting [ 1 _ 1 ] , there is a set of nodes @ xmath49 such that ( a ) @ xmath49 contains only one empty edge for each node , and ( b ) @ xmath50 is a subtree with the same edges as @ xmath27 . we use the same notation as in theorem 1 . @ xmath78 denote the shortest path whose outgoing edge contains the empty edge entering @ xmath73 ; @ xmath174 denote the shortest @ xmath75 trivial path entering @ xmath50 . we prove the theorem by showing that @ xmath49 does not contain any non - empty edges and that each non - edge must end at a point in between @ xmath90 for @ xmath145 . if @ xmath78 contains only the empty edge entering @ xmath73 , there is aedge of @ xmath49 that intersects @ xmath78 . we can see that this statement is not true even if @ xmath78 has no node in @ xmath73 . since @ xmath27 is trivial and there is a trivial path from the edge of @ xmath78 to a node in @ xmath90 for instance @ xmath145 , there is a cross edge @ xmath81 such that @ xmath8 is in @ xmath90 and @ xmath9 is in @ xmath78 . if there is a non - cross edge @ xmath175 such that @ xmath176 is in @ xmath78 ( see [ fig3 ] below ) , we let @ xmath89 be the left edge of @ xmath8 ##1 @ xmath78 . therefore , @ xmath89 must be a cross edge such that @ xmath88 , where @ xmath177 is a cross node in the trivial path @ xmath90 , @ xmath145 . ( if @ xmath89 is atherefore , which is also true , . ( . ) since @ xmath27 is connected and @ xmath177 is a tree node , there are two paths @ xmath178 and @ xmath179 from a single tree node to @ xmath177 and @ xmath27 such that ( i ) they are not connected and ( ii ) @ xmath177 is the unique tree node between them . note that any node in @ xmath49 other than @ xmath93 will be between @ xmath178 and @ xmath179 . therefore , both @ xmath178 and @ xmath179 are a tree node . therefore , @ xmath180 is a subtree of @ xmath50 . this means that one of @ xmath178 and @ xmath179 is the unique path @ xmath93 and the other is @ xmath181 , the unique path from @ xmath89 to @ xmath177 in the tree @ xmath50 . this is correct , because the single path @xmath9 is above @ xmath181 . we have shown that there is no edge in @ xmath49 that enters @ xmath78 . however , we know that there is at least one edge in @ xmath49 that enters @ xmath90 for some @ xmath182 . suppose that @ xmath183 and @ xmath184 are two edges in @ xmath49 such that @ xmath139 is above @ xmath111 for some @ xmath90 ( @ xmath145 ) ( see [ fig3 ] below ) . therefore , @ xmath185 must be a non - crossing edge and @ xmath186 is directly above @ xmath111 . ( therefore , @ xmath111 is non crossing . ) therefore , in figure ( 2 ) in figure [ 3 ] , there is a cross in @ xmath187 such that @ xmath89 is above @ xmath186 and @ xmath139 , @ xmath90 and @ xmath177 is above @ xmath188 , @ xmath189 . since@ xmath177 is a tree node and @ xmath27 . thus , there are two mutually exclusive paths @ xmath178 and @ xmath179 from a given tree node to @ xmath177 in which all edges other than @ xmath177 are a tree node . if @ xmath190 contains an edge in @ xmath49 other than @ xmath93 , the end of the path is a tree node and is therefore either @ xmath178 or @ xmath179 , a contradiction . thus , @ xmath191 is a subtree of @ xmath128 . without loss of detail , we can say @ xmath178 contains @ xmath93 . that is , @ xmath93 contains the top node of @ xmath178 . note that @ xmath192 contains all nodes in @ xmath90 , counting from top to bottom . if @ xmath178 contains more than one node in @ xmath128 , it will lead to @ xmath111 , a contradiction . if @ xmat##h178 is equivalent to @ xmath93 , so @ xmath179 will pass through @ xmath139 , trivial path . therefore , there is at most one edge in @ xmath49 whose position is on the trivial path @ xmath90 , @ xmath145 . in addition , there are @ xmath75 ##0 paths other than @ xmath78 and there is at most one edge in @ xmath49 in each of them . therefore , @ xmath193 in this case we also have a lower bound for the number of edges in a nearly - stable network . the class of nearly - stable networks is different from the class of # ##s in , and so the graph ##est ##in is not @ xmath2 . the graph shown in figure [ fig4 ] below is an example for a nearly - stable network with @ xmath2 vertices . we have the following proof , given by gambette et al . ( 2015 ) . [ fig _ 4 ] let @ xmath27 be a nearly - stable network with @ xmath0 vertices . there is a set @ xmath49 of vertices such that( a ) @ xmath50 contains a fully visible subnetwork with the same edge as @ xmath27 , and ( b ) @ xmath49 contains only one visible edge for each vertex , that is not connected to @ xmath27 . with four vertices . it contains eight edges ( shaded circles ) , two of which are fully visible . the # ##er ##s are those removed to obtain the fully visible edge @ xmath42 . ( * b * ) . the shaded circles of @ xmath42 are the crosses and non - cross paths removed to obtain a subtree with the same leaves as @ xmath27 . ( * c * ) and ( * d * ) are two examples used in the proof of the statement ( 1 ) of theorem [ 1 _ 3 ] : the non - cross path from @ xmath8 and @ xmath9 contains a crossing node @ xmath194 of @ xmath27 , and it contains a crossing node @ xmath194 of @ xmath27 [ fig4 ] , scaledwidth = 0 . 5 % ] let @ xmath49 be the set of allconsider the following version of theorem [ ns _ 1 ] and then @ xmath195 ( theorem [ fig4 ] 2 ) . the paths in @ xmath49 are said to be _ _ - ns _ . we say that @ xmath42 is a subdivision of a binary - visible network . that is , the binary visible network can be obtained from @ xmath42 by replacing all paths whose internal nodes are of degree 2 with some paths with the same degree . thus , @ xmath42 has degree - 2 only if @ xmath49 is not empty . for a path @ xmath36 , we use @ xmath196 to find the orientation of its internal nodes . since @ xmath42 is a subdivision of a binary - visible network with the same degree as @ xmath27 , by theorem [ ns _ 1 ] , there is a subdivision @ xmath197 of paths in @ xmath198 such that ( 1 ) a path @ xmath199 runs from a degree - 2 internal node to a single internal node in @ xmath42 and its internal nodes are all of degree - 2 . @ xmath42, and ( b ) @ xmath200 is a subtree with the same properties as @ xmath27 . in @ xmath201 . @ xmath128 is formed from the union of the internal nodes and all of the paths in @ xmath202 . we can split the paths in @ xmath197 into _ cross paths _ and _ non - cross paths _ , as in fig 4 ( see [ fig4 ] below ) . [ fig _ 4 ] let @ xmath27 be a self - organizing tree and let @ xmath49 , @ xmath42 , @ xmath128 and @ xmath197 behave as follows . \ ( a ) each internal node of a path in @ xmath197 is always contained in @ xmath27 . \ ( b ) each cross path in @ xmath197 consists of either a single edge or multiple edges in @ xmath27 . \ ( c ) each non - cross path in @ xmath197 is always an edge in @ xmath27 . \ ( d ) if @ xmath36 has a cross path in @ xmath197 from @ xmat##h89 to @ xmath177 and @ xmath178 is a non - unique path in @ xmath197 from @ xmath8 to @ xmath9 such that @ xmath89 is between @ xmath8 and @ xmath9 ( in [ fig4 ] below ) , and @ xmath36 and @ xmath178 are between a single node in @ xmath27 . \ ( b ) the two unique paths in @ xmath197 are not unique . we assume that @ xmath203 is the unique path from @ xmath177 to @ xmath204 for any two nodes @ xmath177 and @ xmath204 in @ xmath128 . \ ( c ) let @ xmath36 be a node in @ xmath197 and let @ xmath204 be an independent element of x . for any node @ xmath205 , the unique path @ xmath136 does not connect @ xmath204 to @ xmath128 . therefore , @ xmath204 is not contained in @ x##math27 . \ ( b ) if there are two or more internal nodes of a graph in @ xmath197 , \ ( c ) , they are independent and are contained in @ xmath27 , so that @ xmath27 is np - complete . \ ( c ) we use @ xmath73 to find the root of @ xmath27 , which is also the root of @ xmath42 and @ xmath128 . let @ xmath36 be a sub - cross path of @ xmath8 and @ xmath9 , where @ xmath8 and @ xmath9 overlap in some way @ xmath90 and @ xmath128 . suppose that @ xmath206 is a sub - path of @ xmath90 and is not distinct from @ xmath36 . by proposition ( 2 ) of theorem [ 1 ] , there is an internal node @ xmath89 in @ xmath206 that is the root node of the cross path @ xmath207 in @ xmath197 . similarly , the node @ xmath204 in @ xmath8and @ xmath9 in @ xmath206 is not connected . this is because for any network leaf @ xmath41 from to @ xmath9 in @ xmath128 , @ xmath208 does not pass through @ xmath204 , and for any network leaf @ xmath41 from @ xmath9 to @ xmath128 , @ xmath209 has a node not passing through @ xmath204 . therefore , @ xmath89 must be the only connected parent of @ xmath206 . that is , @ xmath89 is the parent of @ xmath8 and the parent of @ xmath9 in @ xmath206 . suppose that @ xmath36 is not an ancestor of @ xmath27 . then ( 1 ) , there is a unique n - 1 node @ xmath194 in @ xmath8 and @ xmath9 in @ xmath36 . we consider the following two cases . if @ xmath210 ( see [ fig4 ] below ) , then the previously unique node @ xmath211 has been connected to @@ xmath42 . that is , @ xmath212 . by the definition of @ xmath49 , @ xmath126 is a exit node and is contained in @ xmath27 . that @ xmath194 and @ xmath126 are both not visible means that @ xmath27 is non - empty . if @ xmath213 ( in [ fig4 ] b ) , then the corresponding exit node @ xmath214 has been used to create @ xmath42 . note that @ xmath215 and @ xmath216 , not @ xmath89 are node 2 in @ xmath42 . in addition , @ xmath127 is clearly the exit node of a node below @ xmath197 . ( however , in ( 2 ) , @ xmath194 and @ xmath127 are both not visible ) . clearly @ xmath127 is a node below @ xmath128 . clearly @ xmath127 is located below @ xmath9 and therefore not in @ xmath89 or @ xmath128 . ( 3@ xmath27 has no child . ) therefore , @ xmath217 does not pass through @ xmath8 . consider the path in @ xmath57 . if it is not in @ xmath9 , then @ xmath208 does not pass through @ xmath8 . if @ xmath41 is in @ xmath9 , then @ xmath218 has a child in passing through @ xmath8 and @ xmath27 . therefore , @ xmath8 is not visible . that @ xmath8 and @ xmath89 are both not visible in @ xmath27 means that @ xmath27 is nearly - visible . \ ( d ) in the case of ( c ) , @ xmath178 has a single node in @ xmath27 and @ xmath89 is the single node in @ xmath36 and not visible . therefore @ xmath36 must have an child in @ xmath27 . ( similarly , ( d ) @ xmath89 and its child in @ xmath36 are not visible , so that @ xmath27 is nearly -( . ) \ ( . ) this can be easily seen from the definition of the trivial path . let @ xmath219 be the trivial path from @ xmath89 to @ xmath177 . then , @ xmath177 is a visible parent node in @ xmath27 . it can have as many as three parent nodes that are not visible . consider @ xmath220 , where @ xmath221 is the set of all children of @ xmath177 and @ xmath222 is the set of all parent nodes that are not visible in @ xmath27 . @ xmath223 = @ xmath224 . define the graph of @ xmath225 as : @ xmath226 where @ xmath224 is used to represent @ xmath177 and the first edge of @ xmath89 which is a visible parent node if there is a non - trivial path from to @ xmath89 . then in case [ 2 : 3 ] , we let @ xmath78 be the trivial path whose first edge is the closest node to @ xmat##h73 and the @ xmath227 and the some @ xmath75 cross paths in @ xmath128 . we assign the weight of the cross path to the trivial path @ xmath90 in @ xmath128 , which the cross path intersects and gives it the weight of @ xmath90 . the weight of @ xmath90 is given by @ xmath100 . if the trivial path does not have a root node of the cross path in @ xmath197 , its weight is said to be 0 . any visible root node contributes to at least one unit of weight . by the definition of n - complete ##ness , any root node that is not visible must have a visible root node as its root , and by the definition of : [ 1 _ 1 ] ( 1 ) , any root node that is not visible in @ xmath27 must be in . @ xmath228 , @ xmath177 is the end ##point of the cross path , and it also contributes to at least one unit weight . hence , @ xmath229 . to do this , we must use a simple definition . see in : [[ : 1 ] , we use @ xmath116 to denote the trivial paths between @ xmath103 and @ xmath134 , @ xmath113 to denote the trivial paths between @ xmath103 for each vertex @ xmath103 of degree 2 in @ xmath128 . . square arrows and circles represent the edges and paths in @ xmath128 , and half - arrows and curves represent the other edges and paths . @ xmath230 is the left child of @ xmath103 in the trivial path @ xmath134 to @ xmath103 . @ xmath231 is the child of @ xmath103 in the trivial path @ xmath113 . the path from @ xmath114 to @ xmath112 is the trivial path in @ xmath112 . ( * * * ) the trivial path from @ xmath110 to @ xmath115 and @ xmath232 is the path between @ xmath103 and @ xmath115 , where @ xmath115 is in @ xmath134. ( * * * ) the single tree node @ xmath231 between @ xmath103 and @ xmath112 is also the parent of @ xmath230 . @ xmath27 [ fig5 ] , scaledwidth = 0 . 5 % ] [ p _ 1 ] let @ xmath130 be a trivial path defined by and let @ xmath233 be the cross path from @ xmath140 to @ xmath234 , where @ xmath234 is between @ xmath130 and @ xmath235 . in @ xmath236 . \ ( a ) the tree node @ xmath237 consists of either a single edge or two edges in @ xmath130 . if @ xmath237 has two edges , the parent node is not connected . \ ( b ) if there is cross path @ xmath238 between @ xmath103 and @ xmath234 and @ xmath130 and @ xmath238 is a tree node in @ xmath27 , then the cross - paths in the same cross path @ xmath##239 . \ ( a ) note that @ xmath233 is an intermediate node that is a single leaf in @ xmath27 . if there is a cross - link @ xmath240 from @ xmath241 to @ xmath242 such that @ xmath242 is in @ xmath239 , then @ xmath140 is not in @ xmath243 . note that @ xmath244 for @ xmath142 . without loss of detail , we can assume that @ xmath245 and @ xmath246 , that is @ xmath247 and @ xmath248 . \ ( b ) let @ xmath232 be a node between @ xmath103 and @ xmath115 in @ xmath134 ( see [ fig5 ] below ) and let @ xmath41 be a node in @ xmath27 . if @ xmath41 is not in @ xmath115 or @ xmath128 , the path @ xmath249 does not go to @ xmath232 . if @ xmat##h41 is a node in @ xmath115 in @ xmath128 . since @ xmath110 is not in @ xmath134 in @ xmath128 , the shortest path @ xmath250 does not cross @ xmath232 . by using [ lemma22 ] there is a path from @ xmath73 to @ xmath41 that crosses @ xmath232 . therefore , @ xmath232 is not visible . since @ xmath27 is np - complete , there is at least one node in @ xmath251 , where the shortest path is not visible . \ ( b ) . on the left , there is a path from @ xmath252 from @ xmath114 to @ xmath112 in @ xmath113 , where @ xmath112 is in @ xmath113 . \ ( c ) , @ xmath112 is a node of @ xmath103 . there is a shortest path @ xmath231 in @ xmath103 and @ xmath112 in @ xmath113 . wewe see that @ xmath103 is not contained in @ xmath27 . if @ xmath112 is a child of @ xmath103 , there is a node @ xmath231 in @ xmath133 such that @ xmath231 has a single child in @ xmath27 , @ xmath103 has # # ##s in @ xmath27 . by example [ lemma22 ] , @ xmath103 is not visible . if @ xmath113 is a node @ xmath231 in @ xmath103 and @ xmath112 in @ xmath27 , @ xmath253 would also be a node in @ xmath27 . however , as shown in example [ fig5 ] above , @ xmath230 and @ xmath231 are also not visible , so that @ xmath27 is self - contained . let @ xmath254 be the node removed from @ xmath230 in the process of moving @ xmath27 to @ xmath42 . since @ xmath255 , @@ xmath256 is below @ xmath112 and there is a path from @ xmath73 to @ xmath256 that avoids @ xmath103 . since @ xmath114 is in a lower position and there is no path between @ xmath103 and @ xmath230 above @ xmath134 , @ xmath89 is either below @ xmath230 or the path @ xmath135 does not pass @ xmath103 . since the two leaves @ xmath257 are above @ xmath103 and satisfy the conditions in table [ lemma22 ] , there is a path from @ xmath73 to @ xmath41 that avoids @ xmath103 for any leaf @ xmath41 above @ xmath230 nor @ xmath112 . for any leaf @ xmath41 above neither @ xmath230 nor @ xmath112 , it is also below @ xmath103 and the path @ xmath136 does not pass above @ xmath103 . therefore , @ xmath##103 is also not visible . the fact that @ xmath103 and @ xmath230 are both not visible implies that @ xmath27 is nearly - stable . this implies that there is no cross path in @ xmath113 . \ ( b ) if @ xmath112 is the child of @ xmath103 in @ xmath113 , the graph is closed . suppose that there is an empty node @ xmath231 in @ xmath103 and @ xmath112 in @ xmath113 . consider the case ( a ) , @ xmath231 is not visible . if @ xmath258 , then @ xmath110 and its child , @ xmath259 are both not visible , but @ xmath27 is nearly - stable . . , the square , triangle and circle are the only edges and vertices . the path from @ xmath110 to @ xmath115 is the shortest path starting at the point with no cross path in @ xmath103 [ fig6 ] , scaledwidth = 0 . 5 % ] [ [ _ 1 ]for each start node @ xmath103 of the @ xmath260 and @ xmath128 , \ ( a ) @ xmath261 and @ xmath262 . \ ( b ) if @ xmath263 , then @ xmath264 , where @ xmath265 . \ ( c ) if @ xmath266 and @ xmath119 , then @ xmath120 . similarly , if @ xmath267 is the degree - 3 weight of @ xmath103 then that @ xmath268 . then @ xmath269 . \ ( d ) if @ xmath270 , then @ xmath271 and @ xmath123 . \ ( e ) we already know that @ xmath261 . if there is a non - cross edge jumping over the start node of the cross path in @ xmath134 , then eqn . ( [ x _ def ] ) , the weight of @ xmath134 is of degree 3 . if there is a non - cross edge jumping over the start node @ xmath110 of the cross - path@ xmath272 . from the point @ xmath115 to @ xmath134 , by the fact ( d ) of theorem [ ns _ 2 ] , @ xmath272 is equal to the cross edge @ xmath273 . therefore , @ xmath115 has at least one cross parent , which is in @ xmath134 if necessary . by eqn . ( [ weight _ def ] ) , @ xmath261 . \ ( x ) = @ xmath274 . therefore , there is a cross edge @ xmath272 from @ xmath110 to @ xmath115 where @ xmath115 is in @ xmath134 . if there is a non - cross edge jumping over @ xmath110 , by eqn . ( [ weight _ def ] ) , @ xmath115 has two cross edges ( see [ fig6 ] below ) . if there is a non - cross edge jumping over @ xmath110 , by the fact ( d ) of theorem [ ns _ 2 ] , @ xmath272 is equal to the nonsince @ xmath273 , and \ eqn . ( [ ns _ def ] ) , @ xmath115 has a parent between @ xmath230 and @ xmath134 ( figure [ fig6 ] c ) . by the fact ( a ) of theorem [ ns _ 33 ] , there is no cross path that crosses @ xmath113 , or @ xmath275 . \ ( b ) between @ xmath266 and @ xmath119 . let @ xmath233 be the crossing path from @ xmath140 to @ xmath234 , with @ xmath234 crossing @ xmath276 . since @ xmath119 , by the fact ( a ) of theorem [ ns _ 33 ] , there is one crossing path between @ xmath103 and @ xmath234 for each @ xmath277 . therefore , for each @ xmath277 , either the parent of @ xmath234 and @ xmath233 is a single path and is there ( figure [ fig6 ] c ) , or there is anon - cross edge @ xmath278 jumps over @ xmath279 ( see [ fig6 ] below ) . by the fact ( a ) and ( b ) of theorem [ ns _ 33 ] , that @ xmath234 is the child of @ xmath103 and @ xmath130 or there is a tree node @ xmath238 between @ xmath103 and @ xmath234 and @ xmath130 for @ xmath265 . suppose that there is a tree node @ xmath238 between @ xmath103 and @ xmath234 in @ xmath130 , @ xmath265 . then @ xmath236 . if @ xmath240 is an edge node that is a child , by the fact ( c ) of theorem [ ns _ 33 ] , @ xmath280 . if there is a non - cross edge jumps over @ xmath241 , by the fact ( d ) of theorem [ ns _ 33 ] , that @ xmath281 , that the children of the non - cross edge are all in @ .##math103 and @ xmath234 this is impossible , since there is no @ xmath238 between @ xmath103 and @ xmath234 . hence , @ xmath280 . therefore , @ xmath282 . we have shown that for @ xmath283 , @ xmath140 is not between @ xmath103 and @ xmath242 . hence , @ xmath140 is not between @ xmath242 . there is a path from @ xmath73 to @ xmath140 that does not pass @ xmath103 . however , by the [ lemma22 ] , there is a path from @ xmath73 to @ xmath41 , passing through @ xmath103 for any leaf below neither @ xmath115 nor @ xmath112 . for any leaf @ xmath41 , neither @ xmath115 nor @ xmath112 , since it is not between @ xmath103 and @ xmath128 , @ xmath136 does not pass @ xmath103 . ., @ xmath103 is not visible . this also implies that @ xmath115 and @ xmath112 are children of @ xmath103 . hence @ xmath267 is the root node of @ xmath116 and @ xmath268 . we can assume that @ xmath116 consists of only one edge @ xmath284 and @ xmath27 . but to the contrary there are edges between @ xmath267 and @ xmath103 in @ xmath285 . we consider the child @ xmath204 ( @ xmath286 ) of @ xmath103 as the shortest path @ xmath285 . if @ xmath204 is a root node , that @ xmath103 is not visible and that @ xmath204 is also not visible , a contradiction . hence @ xmath204 must be the root node of @ xmath27 . we consider the following two cases . * = * * . @ xmath204 is equal to @ xmath140 and equal to the left child of the root node of @ x##math233 for example @ xmath287 . without loss of detail , we can use @ xmath247 ( see [ fig7 ] a and b ) . this means that there is no non - cross path taken from the cross path @ xmath272 and there is no path from @ xmath288 to @ xmath272 . when @ xmath289 , let @ xmath290 be the node taken from @ xmath288 in the first place . since @ xmath291 is a neighbor of @ xmath288 , if @ xmath291 is below @ xmath204 , it will be below @ xmath112 . when @ xmath292 , @ xmath110 is above @ xmath112 if it is above @ xmath204 . similarly , @ xmath114 is below @ xmath115 and is above @ xmath288 if it is above @ xmath204 . the set of all nodes @ xmath293 and @ xmath204 and all the conditions of the [ ]##mma22 ] , so there is path from @ xmath73 to @ xmath41 that avoids @ xmath204 for each of @ xmath41 , @ xmath288 and @ xmath112 . if @ xmath41 is above neither @ xmath288 nor @ xmath112 , it is not below @ xmath204 , and @ xmath136 does not pass to @ xmath204 . therefore , @ xmath204 is not below . * * 2 * . @ xmath204 is neither @ xmath140 nor the other half of the shortest path of @ xmath233 for each @ xmath283 ( see [ fig7 ] below ) . in this case , for each @ xmath283 , @ xmath234 is not below @ xmath242 and there is a path from @ xmath73 to @ xmath140 that avoids @ xmath204 . using # [ lemma22 ] for the case of each @ xmath294 and @ xmath204 , we see thatthere is a path from @ xmath73 to @ xmath41 that avoids @ xmath204 for any leaf @ xmath41 , @ xmath115 or @ xmath112 . similarly , for any leaf @ xmath41 from above @ xmath115 , @ xmath112 , @ xmath208 avoids @ xmath204 . therefore , @ xmath204 must be not visible . that @ xmath204 and @ xmath103 are two distinct edges and not visible means that @ xmath27 is non - visible . now assuming that the child @ xmath285 is not an edge @ xmath284 , we can say that @ xmath269 . or on the edge @ xmath295 . therefore , the child @ xmath296 of @ xmath267 and @ xmath297 must be a single edge ( see [ fig7 ] above ) . moreover , the pair of edges @ xmath298 and @ xmath267 satisfy the conditions of figure [ lemma22 ] , namely thatfind a path from @ xmath73 to @ xmath41 that does not pass through @ xmath267 for any leaf @ xmath41 or @ xmath267 to @ xmath128 . for any leaf @ xmath41 from below @ xmath267 , the cross path @ xmath136 does not pass through @ xmath267 . therefore , @ xmath267 is not connected . that @ xmath267 and @ xmath103 are not connected . that @ xmath27 is non - complete . . \ ( 2 ) if @ xmath270 , then @ xmath103 is an instance of the layer - 1 tree in @ xmath128 . since @ xmath27 is complete , there does not exist any cross paths @ xmath299 from @ xmath89 to @ xmath177 , and that @ xmath300 and @ xmath301 for @ xmath145 . for @ xmath147 . if the nodes of @ xmath134 and @ xmath113 .let and , and if @ xmath279 is the internal node of the cross path @ xmath302 that leaves @ xmath106 for @ xmath303 , then @ xmath110 leaving @ xmath114 is a node in @ xmath78 . from the statement of equation ( 2 ) , we see that @ xmath103 and its internal node @ xmath78 are simply not identical , . . . . the path from @ xmath279 to @ xmath304 is a cross path starting at @ xmath304 in a similar way @ xmath106 leaves @ xmath103 for @ xmath108 . ( * a * ) @ xmath110 is an internal node in @ xmath116 . ( * b * ) @ xmath204 is the second child of the first internal node of the cross path from @ xmath110 to @ xmath115 . ( * c * ) neither @ xmath110 nor @ xmath114 is identical to @ xmath204 and has a second child with @ xmath##204 . ( * * * ) @ xmath267 is the parent of @ xmath103 and has a single child @ xmath296 as the only child . square arrows and circles represent the edges and paths in @ xmath128 , square dot arrows represent paths in @ xmath49 that were removed to transform @ xmath42 , and square dot arrows and curves represent the edges and paths that were removed to transform @ xmath42 to @ xmath128 . [ fig7 ] , scaledwidth = 0 . 5 % ] let @ xmath27 be a np - complete graph with @ xmath0 ##27 . 2 , @ xmath305 let @ xmath150 be the set of all edges of degree 1 in @ xmath128 , and then @ xmath306 for each @ xmath307 , we define @ xmath159 to be the starting point of the internal algorithm @ xmath160 that produces @ xmath9 . the statements [ p _ 1 ] ( c ) and ( d ) , that @ xmath308 produces @ xmath309 . the, there are at least two trivial paths @ xmath310 and @ xmath311 in @ xmath163 and that @ xmath312 , and there are also one trivial paths , a v - 1 path , in @ xmath128 ; for both @ xmath310 and @ xmath311 , if @ xmath313 and @ xmath314 are in @ xmath315 , then @ xmath316 . taken together , the above properties imply that @ xmath317 . since @ xmath147 , @ xmath318 \ \ & = & | v _ 1 | + 2 | v _ 2 | + 3 | v _ 3 | + 4 | v _ 4 | \ \ & \ leq & 3 | v _ 0 | + 1 | v _ 1 | + 2 | v _ 2 | + 2 | v _ 3 | + 3 | v _ 4 | \ \ & \ leq & 3 ( | v _ 0 | + | v _ 1 | + | v _ 2 | + | v _ 3 | + | v _ 4 | ) \ \ & = & 3 ( v - 1) . \ int { a } \ ] ] the stable - child network shown in fig [ fig8 ] only has as many nodes @ xmath3 as ##s . in this case , we shall show that a stable - child network can have @ xmath3 connectivity if at all . we shall compare the stable - child network to spanning tree ##s , and then to a spanning tree with the same nodes , and the link into a again . if a is not connected : ( * b * ) @ xmath45 and a child @ xmath319 have a common parent . ( * c * ) @ xmath45 has a child @ xmath320 and a child @ xmath55 and @ xmath320 such that @ xmath55 and @ xmath320 have a common parent @ xmath89 . ( * c * ) neither ( * b * ) nor ( * c * ) is visible . ( * e * ) , ( * c * ) and ( * e * ) appear at the same location [ fig8 ] , scaledwidth = 0 . 5 % ] [ fig _ 8 ] . @ xmath##27 is a similar - looking node . there is a set of nodes @ xmath49 such that ( 1 ) @ xmath50 is a member of a tree visible network with the same parent as @ xmath27 , and ( 2 ) @ xmath49 has exactly one visible edge for a tree node if it is not visible in @ xmath27 . for each tree node @ xmath45 that is not visible in @ xmath27 , its unique child must be a different tree node . also , since each node has a unique parent , the nodes must have a unique child other than @ xmath45 and are both a different node . to insert @ xmath27 into a tree visible network , we must remove one or more edges from each node if it is not visible . for each tree node @ xmath45 that is not visible , we consider the following two cases . if @ xmath45 and its unique child @ xmath319 have a unique child @ xmath320 ( see [ fig8 ] below ) , then @ xmath321 is visible . if @ xmath45 andthe child @ xmath319 does not have a common sibling , but @ xmath45 has a common sibling @ xmath55 so that the child @ xmath89 of the common sibling @ xmath320 of @ xmath45 and @ xmath55 is the common sibling of @ xmath55 ( figure [ fig8 ] c ) , @ xmath322 and @ xmath323 and is removed at the same time . when this happens ( figure [ fig8 ] c ) , we can select an additional sibling of @ xmath45 to remove . the edge removed by the above algorithm is called _ sc - edges _ . an sc - edge jumps from a tree node to a leaf node . an sc - edge is _ hidden _ if the leaf is a different tree node ; it is _ hidden _ otherwise . note that a hidden sc - edge is hidden only when the statement given in figure [ fig8 ] c is true . similarly , a concealed sc - edge takes away the previously hidden sc - edge that was hidden at the same time . it is not easy to see that the sc - edges that are hidden when we retic##ulation that are connected are connected . let @ xmath49 be the network of sc - trees . first , we only removed an outgoing edge for each tree node and did not delete the outgoing edge for each tree node , so the entire network @ xmath50 is visible . second , @ xmath50 has the same size as @ xmath27 . the reasons for this are that ( i ) we did not remove an outgoing edge of each reticulation node , and ( ii ) for each tree node @ xmath103 , if an outgoing edge of a is visible , the same outgoing edge is a tree node and it has also not been removed . first , we show that @ xmath50 is a subdivision of a sc - tree node . since we only deleted an outgoing edge for each tree node if it was not visible , all the other tree nodes are connected . @ xmath50 is not visible . we can also show that there are no two - way networks from a single tree node to a single reticulation node in which each tree node is of size 1 , so that @ xmath50 is a subdivision of a single reticulationsee below . but to the contrary there are two independently visible edges @ xmath259 and @ xmath324 in @ xmath8 and @ xmath9 such that their respective edges are all of degree 2 . if neither @ xmath259 nor @ xmath324 is a single edge , then the outgoing edges of @ xmath8 in @ xmath259 and @ xmath324 are also independently visible , so that @ xmath27 is a vertex - directed graph . thus , either @ xmath259 or @ xmath324 is a single edge from @ xmath8 and @ xmath9 . without loss of detail , we can assume that @ xmath324 is connected to the edge @ xmath175 . according to the same algorithm which we used to find the edges in @ xmath49 , if the outgoing path of a path is visible , the path in @ xmath50 is visible in @ xmath27 . this means that @ xmath50 does not have a path consisting of two or more degree - 2 edges that are independently visible in @ xmath27. . , @ xmath259 has only one outgoing edge @ xmath177 . if @ xmath177 is a tree node in @ xmath27 , then , we removed an outgoing edge of @ xmath177 according to either the second or third condition . in the first case , we removed @ xmath325 at the same time . in the second case , @ xmath47 does not exist in @ xmath27 . this is true . when @ xmath177 is a tree node , we removed an outgoing edge of 0 . therefore , the edge @ xmath47 does not exist in @ xmath27 in every other case , by definition . we have shown that @ xmath50 is a subdivision of a binary network . let @ xmath326 be the subnetwork created by the removal of the edge in @ xmath49 . @ xmath42 is a subdivision of a complete binary network . by definition [ a _ tree ] , there exists a set of leaves @ xmath197 such that ( 1 ) @ xmath327 is a subtree of @ xmath27 with the same sizeand ( b ) if the internal nodes of a node in @ xmath197 are of degree 3 . finally , we use @ xmath328 to define the trivial path in @ xmath128 , where @ xmath78 is the trivial path associated with @ xmath28 . as in the previous example , a path in @ xmath197 is called a non - cross path if the start and end nodes are visible in @ xmath188 for all @ xmath277 ; it is called a trivial path if . [ 1 _ 1 ] let @ xmath36 be a node in @ xmath197 . \ ( a ) every internal node of @ xmath36 is not visible in @ xmath27 . \ ( b ) if @ xmath36 is a non - cross path , it is not an edge . \ ( c ) if @ xmath36 is a cross path and terminates at a node @ xmath177 in the trivial path @ xmath188 , every edge between the internal nodes of @ xmath188 and @ xmath177 in @ xmath128 is not visible in @ x##math27 . \ ( a ) if @ xmath36 is a cross path and there is a non - cross path @ xmath178 takes from it , then either @ xmath36 is an edge or the end node of @ xmath36 is the start of the end node of @ xmath178 in @ xmath128 . \ ( a ) and ( b ) are respectively the consequences of the statements ( a ) and ( b ) of the [ 1 _ 1 ] . \ ( b ) let @ xmath204 be the start of the end node of @ xmath188 and @ xmath177 in @ xmath128 . for any leaf @ xmath41 that is not below @ xmath177 in @ xmath128 , @ xmath249 is a path that does not pass @ xmath177 and hence @ xmath204 . for any leaf @ xmath41 above @ xmath177 in @ xmath128 , the path @ xmath329 passes @ xmath204 , hence @ xmath89 is the end node of@ xmath36 is a different way starting from @ xmath188 . however , @ xmath204 is not visible in @ xmath27 . \ ( a ) \ ( b ) , @ xmath178 is removing an edge @ xmath47 from @ xmath42 . let @ xmath36 start from the vertex @ xmath89 . if neither @ xmath330 nor @ xmath36 have a single edge , the two edges of @ xmath89 from @ xmath36 and @ xmath331 are also not visible , so that @ xmath27 is sc - edge . let @ xmath45 be a vertex of and not visible in @ xmath27 . therefore , a single sc - edge @ xmath332 is removed from @ xmath45 to remove @ xmath42 from @ xmath27 . we define the cost @ xmath333 of @ xmath45 to be : @ xmath334 implies that @ xmath335 . we also define the cost of the shortest path @ xmath219 from @ xmath##89 to @ xmath177 as follows : @ xmath336 we can assign the weight of @ xmath225 to the cross path @ xmath90 to which @ xmath177 belongs and give it the weight of @ xmath90 , then @ xmath100 . if there is no cross path in @ xmath90 , the weight of @ xmath90 is equal to + 1 . # for non - trivial paths , we assume that @ xmath337 for each internal node @ xmath103 with degree - 3 in @ xmath128 , we can use @ xmath134 and @ xmath338 to denote the trivial paths and @ xmath103 and @ xmath116 to denote the complex paths in @ xmath103 . [ # _ 1 ] for each internal node @ xmath103 of degree 4 in @ xmath128 , \ ( a ) @ xmath339 , @ xmath142 . \ ( b ) @ xmath340 . \ ( c ) if @ xmath266 and @ xmath341 , then @xmath271 . then , let @ xmath267 denote the start node of @ xmath116 and @ xmath268 . then @ xmath342 . \ ( b ) if @ xmath270 , then @ xmath271 and @ xmath343 . \ ( c ) we can also prove that @ xmath344 . let @ xmath272 denote the shortest path starting from the node @ xmath115 to @ xmath134 . let @ xmath110 denote the start node of @ xmath272 , the shortest node starting from @ xmath134 . prove that @ xmath345 . if there is no non - cross edge jumping over @ xmath110 , then there are at most two elements in @ xmath346 , and each element will have jumps with probability at most . therefore , by eqn . ( [ scformula ] ) , @ xmath347 . if there is no non - cross edge @ xmath183 jumping over @ xmath110 . then the rule ( 1 ) of the [ x _ 1 ], @ xmath348 is taken as a vertex . therefore , by the definition ( c ) of \ [ 1 _ 2 ] ( 3 ) , either @ xmath272 is an edge , or @ xmath349 is an edge in @ xmath128 . if @ xmath272 is an edge , then @ xmath350 . if @ xmath349 is an edge , @ xmath351 . we imply that @ xmath352 . hence , by eqn . ( [ scformula ] ) , @ xmath353 . we assume that , if the cross of @ xmath115 in @ xmath128 is not a single edge in @ xmath27 , then @ xmath354 , and then @ xmath355 . this holds even if there is a non - self - crossing in @ xmath177 . \ ( d ) if @ xmath356 and @ xmath357 , we assume that the cross of @ xmath302 ends at the vertex @ xmath115 and @ xmath106 ends at @ xmat##h279 for @ xmath108 . in the definition ( a ) of the [ n _ 1 ] , an initial node in @ xmath358 and @ xmath359 is always present . if there is a node in @ xmath103 and @ xmath304 for instance @ xmath360 , then the two children of @ xmath103 are not contained in @ xmath27 , so that @ xmath27 is one - sided . then @ xmath103 is the parent of either @ xmath115 or @ xmath112 . without loss of detail , we can say that @ xmath103 is the parent of @ xmath115 and @ xmath128 . see the notation at the end of the proof of ( b ) , @ xmath355 and not @ xmath361 . \ ( c ) states that @ xmath266 and @ xmath267 are the parent nodes of @ xmath116 and that @ xmath268 . if @ xmath341 , \ ( d ) , the parent of @ x##math134 and @ xmath113 are both not zero . however , there is a zero edge @ xmath302 starting at a node @ xmath304 in @ xmath106 and ending at a node @ xmath279 , the shortest is different from @ xmath106 for in @ xmath362 . we can see that @ xmath279 is ( i ) in @ xmath363 , and ( ii ) neither below @ xmath116 nor above @ xmath103 for @ xmath364 and @ xmath224 . without loss of detail , we use @ xmath364 . * = * * . @ xmath110 is in @ xmath359 ( see [ fig9 ] below ) . if there is a non - zero edge @ xmath183 adjacent to @ xmath110 , @ xmath111 is either in @ xmath365 or @ xmath111 is in @ xmath112 for @ xmath113 . the former means that @ xmath111 is not zero , whereas the latternote that @ xmath112 is not visible . this implies that if @ xmath111 and @ xmath112 are both in @ xmath42 . since @ xmath110 is an internal node of @ xmath103 and @ xmath112 in @ xmath128 , then @ xmath103 is the parent of @ xmath115 and @ xmath128 . under the conditions ( b ) and ( c ) of condition [ 1 _ 2 ] , an internal node in @ xmath272 or @ xmath365 is not visible . if , @ xmath366 or @ xmath367 is an edge . if , the internal nodes of @ xmath110 are not visible , then @ xmath27 is two - way node . if @ xmath366 is an edge in @ xmath27 , then @ xmath368 and then @ xmath343 , a node . if @ xmath367 is an edge , then @ xmath369 . since @ xmath110 is not an edge ,in the notation at the end of the section of ( 1 ) , @ xmath370 . therefore , @ xmath343 . this is true . * case 2 * . @ xmath110 is a node in the path @ xmath116 . without loss of detail , we can assume @ xmath110 is higher than @ xmath114 if @ xmath114 is not above @ xmath116 . we assume that @ xmath103 and all the internal nodes in @ xmath371 are directly below . let @ xmath8 be above @ xmath103 or an internal node in @ xmath371 . if @ xmath114 is below @ xmath372 , the case is equivalent to case 2 . now there are two cases to consider : either @ xmath114 is below @ xmath115 ( figure [ fig9 ] b ) , or @ xmath114 is directly below @ xmath110 ( figure [ fig9 ] c ) . in both cases , the # ##s of @ xmath373 is below the path @ xmath8, and by the fact of theorem [ lemma22 ] , that @ xmath8 is not visible with respect to any leaf @ xmath41 , either @ xmath115 or @ xmath112 . for any leaf @ xmath41 located in @ xmath115 or @ xmath112 , the path @ xmath208 intersects @ xmath8 . therefore @ xmath8 is not visible in @ xmath27 . here are the results from this proof . first , there is a non - visible path @ xmath183 relative to @ xmath110 , therefore @ xmath111 is not visible . second , the intersection of @ xmath110 and @ xmath116 is not visible , and therefore the shortest path @ xmath272 is not an edge . so by the fact ( a ) of theorem [ sc _ 2 ] , the two children of @ xmath110 are also not visible in @ xmath27 . and ( b ) of theorem [ sc _ 3 ] , either @ xmath374 or @ xmath375 is an edge . @xmath128 . if @ xmath103 is the parent of @ xmath115 and @ xmath128 , then @ xmath376 according to eqn . ( [ scformula ] ) . then ( a ) , @ xmath343 . if @ xmath103 is the parent of @ xmath112 , @ xmath369 and @ xmath370 according to the statement at the end of the section of ( b ) . taken together , these statements imply that @ xmath343 , which implies the fact that @ xmath341 . * . : * . @ xmath110 is above @ xmath112 and @ xmath114 is above @ xmath115 ( see [ fig9 ] below ) . this statement is unique since there is no truth in @ xmath27 , and @ xmath27 is not . to sum up , @ xmath341 implies that either ( i ) or ( ii ) is true . so in both cases , if we let @ xmath8 be below @ xmath103 .each internal node in @ xmath116 , the child of all @ xmath294 is visible @ xmath8 and satisfy the conditions of theorem [ lemma22 ] . however , @ xmath103 and each internal node of @ xmath116 are not visible . there are three consequences from this example . first , @ xmath271 because there is no cross path that ends at @ xmath116 . ( suppose the cross path leaves @ xmath116 at a point that is not visible in @ xmath27 . ) second , the child of @ xmath267 in @ xmath268 is not visible . third , @ xmath377 if there is no cross path that ends at @ xmath297 . suppose there is no cross path @ xmath378 from @ xmath379 to @ xmath380 with @ xmath380 in @ xmath297 . because ( 1 ) of theorem [ c _ 2 ] , each internal node in @ xmath381 is not visible . suppose the child of @ xmath267 in @xmath285 is not visible . hence , @ xmath382 is an ancestor of @ xmath128 . therefore , by the notation in the middle of section of ( a ) , @ xmath342 . ( b ) if @ xmath270 , then @ xmath103 is an ancestor of any class - 1 node in @ xmath128 . since @ xmath27 is visible , there does not exist a link between @ xmath383 except that @ xmath384 for @ xmath145 and @ xmath385 . hence , @ xmath147 . if @ xmath341 , then , any node in @ xmath78 is not visible except @ xmath27 , as in ( b ) . this means that @ xmath78 is the node in @ xmath28 and @ xmath28 is visible with respect to any node in @ xmath27 . . ( * a * ) @ xmath110 is both @ xmath103 and @ xmath112 . ( * b * ) @ xmath110consider the trivial path @ xmath116 , @ xmath103 , and @ xmath114 is below @ xmath115 . ( * c * ) @ xmath110 is below @ xmath116 , and @ xmath114 is also below @ xmath115 . ( * c * ) @ xmath110 is below @ xmath114 and @ xmath114 is also below @ xmath115 . this means : in case [ [ fig9 ] , scaledwidth = 0 . 5 % ] let @ xmath27 be a forward - looking path with @ xmath0 ##27 . here , @ xmath386 and @ xmath150 are the locations of the @ xmath151 internal nodes of node 1 and @ xmath128 . hence @ xmath387 , @ [ x _ 1 ] ( 0 ) , @ xmath388 . hence , @ xmath389 and hence @ xmath390 . let @ xmath159 be the internal node of the trivial path between @ xmath9 and @ xmath12##8 . by proposition [ sc _ 3 ] ( b ) and ( c ) , if @ xmath391 , then @ xmath392 for all @ xmath393 . by proposition [ sc _ 3 ] ( d ) , by the inequality @ xmath162 , at least two nodes in @ xmath394 are mapped to the same node in @ xmath164 , and only one node can be mapped to @ xmath395 . thus , @ xmath396 since @ xmath147 , the following inequality states that @ xmath397 \ \ & = & \ sum _ { i = 0 } ^ { 10 } & | v _ 1 | \ \ & \ leq & | v _ 1 | + 2 | v _ 2 | + 3 | v _ 3 | + 4 | v _ 4 | + 5 \ sum _ { i = 0 } ^ { 10 } | v _ 1 | + | v _ 2 | + 4 | v _ 9 | + 5 | v _ { 10 } | ) \ \ & \ leq & | v _ 1 | + 2 | v _ 2 | + 3 | v _ 9 | + 4 |v _ 1 | + 2 \ sum _ { i = 5 } ^ { 10 } | v _ 1 | + 3 | v _ 0 | + 3 \ sum _ { i = 5 } ^ 2 | v _ 1 | \ \ & = & 7 | v _ 0 | + 4 | v _ 1 | + 5 | v _ 2 | + 6 | v _ 1 | + 7 | v _ 1 | + 8 \ sum _ { i = 5 } ^ { 10 } | v _ 1 | \ \ & \ leq & 1 \ sum _ { i = 5 } ^ { 10 } | v _ i | \ \ & = & 7 ( 1 - 7 ) . \ begin { 1 } \ ] ] we have obtained the tight upper bounds for the sizes of stable , stable - stable , and stable - binary networks . since the number of rooted tree nodes is equal to the number of nodes and the number of # ##s in a binary network , we can publish our results in the [ table1 ] . without ambiguity , these upper bounds provide insight to the study of topological and topological properties of the network as defined by the theorem . . the tight upper bounds for the sizes of binary networks with @xmath0 can search by this method . the example for searching in trees is given by bordewich and semple ( 2015 ) . [ table1 ] [ type = " < , ^ , ^ " , header = " : " , ] gambette a , gunawan adm , labarre a , vialette a , zhang y ( 2015 ) , a node in a search tree in tree form , in proc . of the ieee intl conf . j . of comput . ( recomb ) , pp . 96107 , warsaw , poland .