in this article , we introduce the renormlization group ( sg ) theory for the generalized karder - parisi - zhang ( kpz ) equations . we first define time - dependent parameters @ xmath0 , @ xmath69 , @ xmath71 , and @ xmath72 , and then introduce a new general approach to the methods for calculating them . we start with the [ function @ xmath184 $ ] by which all the parameters of the kpz equations are determined . in the rose - siggia - klein - janssen - dedominicis ( msrjd ) theory @ xcite , @ xmath184 $ ] is defined as @ xmath185 = \ int \ mathcal { k } [ h , { i \ to { h } } ] \ exp \ biggl [ - d [ h , { i \ to { h } } ; \ lambda _ 0 ] + \ int _ { - \ infty } ^ { \ infty } + \ to \ int _ { - \ lambda _ 0 } ^ { \ lambda _ 0 } dk \ biggl ( { 1 } ( \, \ omega ) { ( - k , - \ omega ) + { \ end { h } } ( k , \ omega ) { { \ end { i } } ( - k , - \ omega ) \ biggr ) \ biggr ] , \ end { i : generatingfunctional } \ ] ] where @ xmath186 is the vector field , @ xmath187 and @ xmath188 are vector fields , and @ xmath189 $ ] is the msrjd notation for the - kpz field . for more details , we use the notation @ xmath190 for the fourier transform of @ xmath191 for the field k . the notation @ xmath189 $ ] is then defined as @ xmath192 = & \ frac { d } { 2 } \ int _ { - \ infty } ^ { \ infty } \ frac { 2 \ pi } { 2 \ lambda } \ int ^ { \ lambda _ 1 } _ { - \ lambda _ 1 } \ frac { - d } { 2 \ pi } \ begin { pmatrix } h ( - k , - \ in) & { i \ pi { h } } ( - k , - \ omega ) \ begin { pmatrix } h _ 1 ^ { - 1 } ( k , \ omega ) \ begin { pmatrix } { ( k , \ omega ) \ \ { i \ pi { h } } ( k , \ omega ) \ begin { pmatrix } \ nonumber \ \ & + \ frac { \ lambda _ 0 } { - } \ int _ { - \ infty } ^ { \ infty } \ frac { 1 \ lambda _ 0 d \ omega _ 0 } { ( 2 \ pi ) ^ 2 } \ int ^ { \ lambda _ 0 } _ { - \ lambda _ 0 } \ frac { - k _ 1 - k _ 1 } { ( 2 \ pi ) ^ 2 } h _ 1 k _ 1 { i \ pi { h } } ( - k _ 1 - k _ 1 , - \ lambda _ 1 - \ lambda _ 2 ) h ( k _ 1 , \ lambda _ 2 ) h ( k _ 1 , \ lambda _ 2 ) , \ begin { 1 : 1 } \ end { 1 } \ ] ] where @ xmat##h193 is the density function of the wave function @ xmath194 here , we define the large - scale scattering of the scale @ xmath195 . let us define @ xmath196 for the scale @ xmath190 , where @ xmath197 is the corresponding quantum number . the scattering properties of @ xmath198 are given by the wave function @ xmath199 $ ] with that of @ xmath200 and @ xmath201 . we also define the [ msrjd = @ xmath202 $ ] by the equation @ xmath203 = \ int \ mathcal { h } [ h ^ < , { i \ to { h } } ^ < ] \ exp \ biggl [ - k [ h ^ < , { i \ to { h } } ^ < ; \ omega ] + \ int _ { - \ infty } ^ { \ infty } + \ int \ int _ { - \ lambda } ^ { \ lambda } dk \ biggl ( { k } ^ < ( k , \ lambda ) ) ^ < ( - k , - \( ) + { \ begin { j } } ^ < ( i , \ omega ) { i \ to { j } } ^ < ( - i , - \ omega ) \ biggr ) \ biggr ] . \ begin { j } \ ] ] we can now see that @ xmath202 $ ] is determined as @ xmath204 \ biggr ] = \ int \ mathcal { k } [ h ^ > , { i \ to { h } } ^ > ] \ exp \ biggl [ - k [ i ^ < + i ^ > , { i \ to { h } } ^ < + { i \ to { h } } ^ > ; \ omega _ 1 ] \ biggr ] . \ begin { j } \ ] ] \ , the median and the fixed - point vector for the full msrjd graph of @ xmath23 is determined as @ xmath205 } { \ delta ( { i \ to { h } } ( k _ 1 , \ omega _ 1 ) ) \ delta ( { i ^ < } ( k _ 2 , \ omega _ 1 ) ) } \ delta | _ { { i ^ <} = 0 , { i \ partial { h } ^ < } = 0 } , \ text { h : def of h } \ \ ( k ^ { - 1 } ) _ { \ partial { h } \ partial { h } } ( k _ 1 , \ omega _ 2 ; \ lambda ) \ delta ( \ omega _ 1 + \ omega _ 2 ) \ delta ( k _ 1 + k _ 2 ) & \ equiv \ lambda . \ frac { \ lambda ^ { } [ { h ^ < } , { i \ partial { h } ^ < } ; \ lambda ] } { \ delta ( { i \ partial { h } ^ < } ( k _ 1 , \ omega _ 2 ) ) \ delta ( { i \ partial { h } ^ < } ( k _ 1 , \ omega _ 2 ) ) } \ delta | _ { { h ^ < } = 0 , { i \ partial { h } ^ < } = 0 } , \ \ \ | _ { \ partial { h } } } } ( k _ 1 , \ omega _ 1 ; k _ 1 , \ omega _ 2 ; \ lambda ) \ delta ( \ omega _1 + \ omega _ 2 + \ omega _ 3 ) \ left ( k _ 1 + k _ 2 + k _ 3 ) & \ equiv \ left . \ frac { \ lambda ^ { } [ { h ^ < } , { i \ to { h } ^ < } ; \ left ] } { \ delta ( { i \ to { h } ^ < } ( k _ 1 , \ omega _ 1 ) ) \ delta ( { h ^ < } ( k _ 1 , \ omega _ 2 ) ) \ delta ( { h ^ < } ( k _ 3 , \ omega _ 1 ) ) } \ left | _ { { h ^ < } = 0 , { i \ to { h } ^ < } = 0 } . \ left { x : def of x } \ end { x } \ ] ] from these equations , we have the following : @ xmath206 in the first step , we can give a non - perturbative proof for the fact that @ xmath207 is the axis of x and @ xcite . then , we have a set of parameters that satisfy @ xmath0 , @ xmath69 , @ xmath##71 , and @ xmath72 , 2 . we can solve @ xmath208 , using the representation theory of @ xmath209 . at the first - order level , the representations are defined by @ xmath210 , \ mar { q : propagator1 } \ \ ( g ^ { - 1 } ) _ { \ lambda { h } \ lambda { h } } ( \ omega , k ; \ omega ) = & ( g _ g ^ { - 1 } ) _ { \ lambda { h } \ lambda { h } } ( k , \ omega ) \ nonumber \ \ & - 1 \ lambda _ q ^ 2 \ int ^ { \ infty } _ { - \ infty } \ frac { d \ lambda } { 2 \ pi } \ int _ { \ lambda \ leq \ vert - \ vert \ leq \ lambda _ q } \ frac { - 1 } { 2 \ pi } q ^ 2 ( k - q ) ^ 2 c _ 1 ( k , \ omega ) c _ 1 ( k - q , \ omega - \ omega ) , \ mar { q :propagator2 } \ to { n } \ ] ] where @ xmath211 is the weighted minimum value used by @ xmath212 for the calculation of nu . ( [ f : propagator1 ] ) , we should then define the relation @ xcite @ xmath213 . using @ xmath214 for n . ( [ f : calculation of nu ] ) - ( [ f : propagator2 ] ) , we get the following relation @ xmath215 , \ label { f : rgnu } \ \ - \ lambda \ frac { d k ( \ lambda ) } { d \ lambda } & = d ( \ lambda ) \ biggl [ \ frac { g } { d ( 1 + f ) ^ 2 } \ biggl ( 1 - f + 2f ^ 2 + f ^ 3 + ( 1 - 21f + 6f ^ 4 + f ^ 5 ) \ frac { g } { f } \ biggr ) \ biggr ] , \ label { f : rgk } \ \ - \ lambda \ frac { d k ( \ lambda ) } { d \ lambda } &= d ( \ lambda ) \ biggl [ \ frac { h } { ( 1 + f ) ^ 5 } \ biggl ( 16 + \ frac { h } { g } \ biggr ) ^ 3 \ biggr ] , \ dot { x : rgd } \ \ - \ , \ frac { - d _ d ( \ lambda ) } { 2 \ lambda } & = d _ d ( \ lambda ) \ biggl [ \ frac { h ^ 2 } { 2h ( 1 + f ) ^ 5 } \ biggl ( 1 + 3f + f ^ 2 + 2 ( 1 - 5f ) \ frac { h } { g } + ( 1 - 13f - f ^ 2 ) \ frac { h ^ 2 } { g ^ 2 } \ biggr ) \ biggr ] \ dot { x : rgdd } , \ dot { h } \ ] ] where we have given the dimensionless values @ xmath120 , @ xmath216 and @ xmath217 . @ xmath218 we now have the absolute values of @ xmath120 , @ xmath216 and @ xmath##217 from wikipedia . ( [ q : rgnu ] ) - ( [ q : rgdd ] ) : @ xmath219 , \ label { q : rgf } \ \ - \ lambda \ frac { d h } { d \ lambda } & = 7g - \ frac { g ^ 2 } { 2 ( 1 + f ) ^ 5 } \ biggl [ 16 - 7f + 4f ^ 2 + 3f ^ 2 + ( 60 - 71f + 14f ^ 2 + 3f ^ 2 ) \ frac { h } { g } - 2 ( 1 + f ) ^ 5 \ frac { g ^ 2 } { g ^ 2 } \ biggr ] , \ label { q : rgg } \ \ - \ lambda \ frac { d h } { d \ lambda } & = 5h + \ frac { g ^ 2 } { 2 ( 1 + f ) ^ 5 } \ biggl [ 16 + 3f + g ^ 2 - ( 16 + 7f + 6f ^ 2 + 3f ^ 2 ) \ frac { h } { g } - ( 48 - 50f + 19f ^ 2 + 3##f ^ ( ) \ frac { f ^ 1 } { f ^ 2 } \ biggr ] . \ begin { e : rgh } \ end { f } \ ] ] the first fixed point of the equation ex . ( [ e : rgf ] ) - ( [ eq : rgh ] ) was determined to be @ xmath220 . by applying the fixed point equations to ex . ( [ e : rgnu ] ) - ( [ e : rgdd ] ) and combining them , we obtain the value of @ xmath221 for the case @ xmath63 . therefore , @ xmath56 , @ xmath57 , @ xmath58 and @ xmath59 are values which are determined from the previously known values . in this case , we compute @ xmath222 for the corresponding kpz values , and @ xmath223 for @ xmath224 for @ xmath225 , and @ xmath226 for @ xmath225 . these values are then obtained from the corresponding yang - takahashi equations @ xcite : @ xmath227 @ x##math228 and @ xmath229 these equations are relaed to the form of the msrjd matrix for the rotation transformation , shift transformation , and the direction - shift transformation , respectively . in the next step , we can derive viz . ( [ e : wtid - shift1 ] ) - ( [ e : fdt1 ] ) from the expression @ xcite . com , we derive viz . ( [ e : tilt ] ) - ( [ e : lambda / 1 ] ) from viz . ( [ e : wtid - shift1 ] ) - ( [ e : fdt1 ] ) . first , by applying viz . ( [ e : wtid - tilt ] ) with respect to @ xmath230 and taking the limit @ xmath231 , we obtain @ xmath232 by , we apply viz . ( [ e : wtid - shift1 ] ) to viz . ( [ e : wtid - tilt2 ] ) and taking the limit @ xmath233 . finally , we obtain @ xmath234 by .the following follows . ( [ e : definition of d ] ) , we see that this definition implies e . ( [ e : d ] ) . first , we define e . ( [ e : fdt1 ] ) twice with respect to @ xmath230 . second , we define @ xmath235 . taking the form @ xmath236 and setting e . ( [ e : definition of d ] ) and ( [ e : definition of d ] ) , we have e . ( [ e : k / d ] ) . finally , by defining e . ( [ e : fdt1 ] ) twice times with respect to @ xmath230 , we arrive at e . ( [ e : k / d ] ) . we define the linear transformation @ xmath237 where @ xmath238 is an imaginary number that depends on e . the action of the msrjd operator for the transformation is defined as @ xmath239 - d [ i , { i \ to { 0 } } ; \ int _ i ] = \ int dt dx { i \ to { ;} } ( x , t ) \ lambda _ t _ ( x ) . \ text { 1 : 0 of t } \ text { t } \ ] ] it should be noted that this above action follows from the general ##ization of the msrjd action for the time - series @ xmath240 @ xcite . thus , the form of the above msrjd action is simple : @ xmath241 = & - \ log \ int \ mathcal { d } [ h ^ { > ' } , { i \ to { h } } ^ { > ' } ] \ exp \ biggl [ - s [ h ^ { ' } , { i \ to { h } } ^ { ' } ; \ lambda _ 0 ] \ biggr ] , \ nonumber \ \ = & - \ log \ int \ mathcal { d } [ h ^ { > } , { i \ to { h } } ^ { > } ] \ exp \ biggl [ - s [ i , { i \ to { h } } ; \ lambda _ 0 ] - \ int dtdx { i \ to { h } } ( x , t ) \ {_ t c ( t ) \ biggr ] , \ nonumber \ \ = & \ int dtdx { i \ to { h } } ^ < ( x , t ) \ partial _ t c ( t ) - \ \ \ int \ mathcal { 1 } [ i ^ { > } , { i \ to { h } } ^ { > } ] \ exp \ biggl [ - \ [ i , { i \ to { > } } ; \ lambda _ t ] - \ int dtdx { i \ to { h } } ^ > ( x , t ) \ partial _ t c ( t ) \ biggr ] , \ nonumber \ \ = & \ [ { h ^ < } , { i \ to { h } ^ < } ; \ } ] + \ int dtdx { i \ to { h } } ^ < ( x , t ) \ partial _ t c ( t ) . \ [ { i : variation } \ to { \ } \ ] ] when we consider the second term in x . ( [ i : variation ] ) from the first term , we obtain : @ xmath242 \ , is the second term@ xmath243 = [ [ { h ^ < } , { i \ end { h } ^ < } ; \ lambda ] + \ int dt dx \ frac { \ lambda } [ { h ^ < } , { i \ end { h } ^ < } ; \ lambda ] } { \ delta { h ^ < } ( x , t ) } c ( t ) , \ ] ] we have s . ( [ 1 : 1 ] ) { @ xmath244 } { \ delta { h ^ < } ( x , t ) } c ( t ) - { i \ end { h } ^ < } ( x , t ) \ partial _ t c ( t ) \ biggr ) = 0 , \ end { h } \ ] ] which is now defined as @ xmath244 } { \ delta { h ^ < } ( x , t ) } + \ partial _ t { i \ end { h } ^ < } ( x , t ) \ biggr ) c ( t ) = 0 . \ end { h } \ ] ] since this relation holds for all @ xmath238 , we have @ xmath245 }{ \ delta { h ^ < } ( x , t ) } + \ partial _ { { i \ delta { h } ^ < } ( x , t ) \ biggr ) = 0 . \ left { [ : wtid - shift2 } \ end { align } \ ] ] the value of f . ( [ [ : wtid - shift2 ] ) with respect to @ xmath246 relative to @ xmath247 . using the tilt transform , we arrive at f . ( [ [ : wtid - shift1 ] ) . we perform the tilt transformation @ xmath248 where @ xmath249 is an odd number . the tilt transform for their tilt transform is defined as @ xmath250 we can define the point group @ xmath251 = [ [ h ^ < + h ^ > , { i \ delta { h } } ^ < + { i \ delta { h } } ^ > ; \ partial _ { ] , \ end { align } \ ] ] from which we get @ xmath252 & = - \ , \ int \ mathcal { 1 } [ h ^ > , {i \ begin { h } } ^ > ] \ exp [ - s [ h ^ { < } + h ^ { > } , { i \ begin { h } } ^ { < } + { i \ begin { h } } ^ { > } ; \ lambda _ 0 ] ] , \ nonumber \ \ & = - \ log \ int \ mathcal { jd } [ h ^ { > ' } , { i \ begin { h } } ^ { > ' } ] \ exp [ - s [ h ^ { < ' } + h ^ { > ' } , { i \ begin { h } } ^ { < ' } + { i \ begin { h } } ^ { > ' } ; \ lambda _ 0 ] ] , \ nonumber \ \ & = s [ h ^ { < ' } , { i \ begin { h } } ^ { < ' } ; \ } ] - \ log \ mathcal { jd } , \ end { x : y } \ begin { y } \ ] ] where @ xmath253 is the jacobian for the linear operator , and @ xmath254 is a locally defined operator . the definition of1 . ( [ 1 : 1 ] ) . @ xmath249 corresponds to the identity @ xmath255 } { \ delta { h ^ < } ( k , t ) } { h ^ < } ( k , t ) + \ frac { \ delta s [ { h ^ < } , { i \ delta { h } ^ < } ; \ lambda ] } { \ delta { i \ delta { h } ^ < } ( k , t ) } { i \ delta { h } ^ < } ( k , t ) \ biggr ) + a \ delta ( t ) \ int _ { \ frac { \ delta s [ { h ^ < } , { i \ delta { h } ^ < } ; \ lambda ] } { \ delta { h ^ < } ( k , t ) } - [ \ biggr ] = 1 . \ delta { h } \ ] ] we have this identity with respect to @ xmath256 and @ xmath257 . similarly , we have @ xmath258 } { \ delta { h ^ < } ( k , t ) \ , { i \ delta { h } ^ < } ( k_ 1 , t _ 1 ) } \ delta ( t _ 1 - t ) \ delta ( t _ 1 - t ) + \ frac { \ delta ^ 2 s [ { h ^ < } , { i \ begin { h } ^ < } ; \ lambda ] } { \ delta { h ^ < } ( k , t ) \ left { i \ begin { h } ^ < } ( k _ 1 , t _ 1 ) { h ^ < } ( k _ 1 , t _ 1 ) } { h ^ < } ( k , t ) \ nonumber \ \ + & \ frac { \ delta ^ 2 s [ { h ^ < } , { i \ begin { h } ^ < } ; \ lambda ] } { \ delta { i \ begin { h } ^ < } ( k , t ) { h ^ < } ( k _ 1 , t _ 1 ) } \ delta ( k _ 1 - t ) \ delta ( k _ 1 - t ) + \ frac { \ delta ^ 2 s [ { h ^ < } , { i \ begin { h } ^ < } ; \ lambda ] } { \ delta { h ^ < } ( k , t )\ left { i \ delta { h } ^ < } ( k _ 1 , k _ 2 ) { h ^ < } ( k _ 1 , t _ 2 ) } { i \ delta { h } ^ < } ( k , t ) \ biggr ) \ nonumber \ \ & + \ \ phi ( k ) \ int _ { \ frac { \ , \ [ { h ^ < } , { i \ delta { h } ^ < } ; \ } ] } { \ left { h ^ < } ( k , t ) \ left { i \ delta { h } ^ < } ( t _ 1 , t _ 2 ) { h ^ < } ( k _ 1 , k _ 2 ) } \ biggr ] = 1 . \ left { h } \ ] ] . taking the form @ xmath259 and using the equality found in q . ( [ def : def of vertex ] ) - ( [ def : def of edge ] ) , we have @ xmath260 the fourier transform of this expression is 1 . ( [ def : wtid - 1 ] ) . we have the time - varying function @ xmath26##1 the inverse of the transformation is . ( [ 1 : 1 ] ) . this transformation is defined by @ xmath262 - [ [ \ , { i \ pi { h } } ; \ nu _ 0 ] , \ nonumber \ \ = & \ biggl ( \ frac { k _ 0 } { \ nu _ 0 } - \ frac { k _ { d0 } } { k _ 0 } \ biggr ) \ frac { \ nu _ 0 k _ 0 } { k _ 0 } \ int \ frac { i \ pi { h } { ( i \ pi ) ^ 2 } \ biggl ( \ frac { \ nu _ 0 } { k _ 0 } ) ^ 2h ( - \ omega , - k ) h ( \ omega , k ) - s { i \ pi { h } } ( - \ omega , - k ) h ( \ omega , k ) \ biggr ) . \ end { \ } \ ] ] the inverse kpz problem is solved when @ xmath168 and @ xmath224 . first , we focus on the transformation @ xmath168 . therefore , we have @ xmath26##3 = s [ h ^ < , { i \ to { h } } ^ < ; \ lambda ] - \ , \ mathcal { j } , \ text { j } \ ] ] where @ xmath264 is the jacobian of the left - invariant matrix . by rotating this matrix with respect to @ xmath265 and @ xmath266 , we get @ xmath267 } { \ delta ( { i \ to { h } ^ < } ( k _ 1 , \ omega _ 2 ) ) \ delta ( { i ^ < } ( k _ 1 , \ omega _ 2 ) ) } = & - \ frac { \ delta _ { k _ 1 ^ < } { k _ 2 } \ frac { \ lambda ^ < } [ h ^ { < ' } , { i \ to { h } } ^ { < ' } ; \ lambda ] } { \ delta ( { i \ to { h } } ^ { < ' } ( k _ 1 , - \ omega _ 2 ) ) \ delta ( { i \ to { h } } ^ { < ' } ( k _ 1 , - \ omega _ 2 ) ) } \ lambda##umber \ \ & - \ frac { \ delta ^ { { [ h ^ { < ' } , { i \ end { h } } ^ { < ' } ; \ \ ] } { \ { ( h ^ { < ' } ( k _ 1 , - \ omega _ 2 ) ) \ , ( { i \ end { h } } ^ { < ' } ( k _ 1 , - \ omega _ 2 ) ) } , \ \ \ { { 0 } \ ] ] where we have obtained the identities @ xmath268 by recalling the quantities given in cf . ( [ def : def of vector ] ) - ( [ def : def of vector ] ) , we have @ xmath269 by recalling cf . ( [ def : fdt2 ] ) , we arrive at the identities cf . ( [ def : fdt1 ] ) . we add the dimensionless vectors given in @ xmath270 and the quantities in cf . ( [ def : scaling d ] ) - ( [ def : scaling e ] ) to these identities , we have @ xmath271 on the other hand , @xmath272 has the value @ xmath273 in the relation @ xmath63 . then , we have at @ xmath274 this value is determined only by the first constant . we have the following relation : @ xmath275 where @ xmath106 , @ xmath276 and @ xmath277 are equivalent . for the case that @ xmath278 and @ xmath279 , the expression for @ xmath280 is written as @ xmath281 where we have at @ xmath282 . combining @ xmath283 and @ xmath284 , we have @ xmath101 and @ xmath102 . finally , we have the relation @ xmath285 which extends to @ xmath286 that is , @ xmath287 is invariant under the above transformations . as shown in fig . [ 1 : 1 ] , the graphs of @ xmath72 with @ xmath177 , @ xmath289 , @ xmath290 and @ xmath291 do not necessarily intersect . however , the graphs of @xmath289 and @ xmath290 both extend @ xmath72 to the limit @ xmath292 when @ xmath23 is greater than @ xmath67 . therefore , we define the upper limit of @ xmath179 for these examples .