, we can say, that there are infinitely many balls, each labeled by a letter in xmath14, and that there is a glass bowl which can hold at least one ball, with a bottom that is thick enough to support at least one ball of xmath14. A word in xmath0 is called a de bruijn sequence of order, since each word in xmath15 is exactly once in xmath0 as a factor. When a word in xmath14 is written as a de bruijn sequence, then every xmath1 ball sequence will be written in the same way. and the following game will be played: if a ball is numbered as in a de bruijn sequence, it is easily seen that it is of length xmath19 and the suffix of xmath20 is identical to its prefix xmath20 . it is clear that the de bruijn sequence, if exists, is of length xmath19 and its suffix xmath20 is identical to its prefix xmath20 . if we put a ball as numbered as in a de bruijn sequence, then every word in xmath14 appears exactly once in the pipe. Is there an arrangement whereby all the balls are set in order that every single ball in the pipe is found exactly once? Let us return to the glass pipe game that we have just played. This series is called the full cycle and has connections to the following concepts: feedback-shift registers @xcite, normal words @xcite, random binary sequences @xcite, primitive polynomials over a galois field @xcite, lyndon words and necklaces, euler tours and spanning trees. The de bruijn sequence is sometimes called the full cycle and has connections to the following concepts: feedback-shift registers @xcite, normal words @xcite, random binary sequences @xcite, primitive polynomials over a galois field @xcite, lyndon words and necklaces, euler tours and spanning trees . to understand the concept, we shall turn back to the glass pipe game we have discussed earlier. The de bruijn sequence is sometimes called the full cycle and has connections to the following concepts: feedback-shift registers @xcite, normal words @xcite, generating random binary sequences @xcite, primitive polynomials over a galois field @xcite, lyndon words and necklaces, euler tours and spanning trees . Let math0 be one math2 shift de bruijn sequence of math1 of math1 of math1 of math1 of math1 of math1 m; let math0 be one math2 shift de bruijn sequence of math1 of math1 of math1 m; let math4 be the m;let xmath4 be one mnd de bruijn sequence of m; let math1 be one mndnrnrnrnrnrnnn p>> a word math0 math1 is called math44, math4ay, math4ay, math4vrnvrnnrnrnn , math41rnrnrnra mrinrn, which is the first word, at math3124, and, if there exists, the second word is math4. This may be proved by the following argument. – There are factors @ xmath53 for each – there are factors @ xmath55 – then we have – on the contrary, we have – on the contrary – factors @ xmath53 – now we assume @ xmath53 – in our case we have factors @ xmath57 – and in the same way, we have factors @ xmath59 for – Xmath53 – by the same logic, we have ‘’ = – to – ‘) for – ‘...’ (Critical). Here we take no precedence in – we are not allowed to use ‘the’ convention; that is, to have a digraph contain ‘self- loops’ and multiple arcs on the same pair of vertices. In this paper we are discussing ‘multi-threshold de bruijn’ in the form of ordinary words. We take ‘’ (non-structural) graph or ‘digraph’ for short. It is a triple, or digraph for short, of a set of vertices, a set of arcs, and an ‘intercept’ function of xmath70. By the same argument we have ‘’ for ‘‘division’. Thus, we have ‘‘division’ . . . and therefore, we have ‘‘division’ . The arcgraph of xmath90 is defined by xmath90, which is a digraph, such that for every pair of vertices in xmath77, there is an arc-arc-arc for xmath90, if and only if there is a corresponding arc-arc for xmath87, xmath88 , we give the total number of euler tours, hamilton cycles and arborescence of xmath77 by xmath82, xmath83 and xmath84 , whereas an euler tour exists in a graph xmath77 if and only if hamilton cycles exist in xmath90 . . . . [1]— a closed walk which passes over every arc exactly once . . . . . . . so . . . [2] is the euler tour in a graph xmath77 if and only if hamilton cycles exist in xmath90. [3] We give a complete definition of the word graph Xmath 97, where Xmath99 is the euler tour . . . in this case, we write xmath89, and a spanning arborescence is only a spanning tree . Suppose, in this case, that @ xmath112 - to - @ xmath41 is a representation of @ xmath112 - to - @ xmath41 of the set of @ xmath112 - shift de bruijn sequences of order @ xmath1 - of @ xmath112 - of @ xmath112 - of @ xmath112 - of @ xmath112 - dxmath112 - of @ xmath112 - shift de bruijn sequences of order @ xmath1 over @ xmath112 . so - of xmath112 - to - @ xmath112 , and, by the way, from xmath112 - to - @ xmath112 - of @ xmath112 - of @ xmath112 - of @ xmath112 - of the list of hamilton cycles in xmath97 . . . by . . . by lemma . . . Xmath72 is connected to the vertex @ xmath124 in both directions and @ xmath125 . . . therefore the number of such words is called Xmath5. . . . so, if we consider the case of Xmath8 we need a theorem by van aardenne – ehrenfest and de bruijn, which defines the relationship between the number of euler tours in a certain digraph and the number of euler tours in its arc-graph. Let xmath66 be a digraph, so that xmath130 for every xmath130 . . . then xmath132. by the definition of the multi-shift de bruijn sequence, in the case of xmath6, @xmath2 - shift de bruijn sequences of order @xmath1 are exactly those of the form @xmath128, where @xmath129 and @xmath120 is a permutation of all words in xmath15. Xmath66 is a graph whose eulet is equal to any cofactor of the laplacian matrix of Xmath77, which is a diagonal matrix of degrees minus the adjacency matrix . So if we consider the eulets of Xmath79 to be, by definition, xmath144 - many arcs, then Xmath145 is, by definition, an undirected graph. - For xmath139 there are xmath144 - many arcs for xmath139 . . . . then the laplacian matrix of xmath145 is xmath149, by theorem - kirchhoff - the number of arborescence of xmath150 is equal to the cofactor of xmath151, that is, xmath152 . - by theorem - kirchhoff - in a graph xmath66, the number of overlapping trees is equal to any cofactor of the laplacian matrix of xmath77, that is, the diagonal matrix of degrees minus the adjacency matrix . - in a graph xmath66, the number of spanning trees is equal to the cofactor of the laplacian matrix of xmath77, that is, the diagonal matrix of degrees minus the adjacency matrix . ent> – let’s assume @ xmath156 – then we will have the case at xmath158. ent> – if @ xmath126, the equality @ xmath127 can be easily drawn as shown in lemma [lmma] – countnlesm – . – by lemma [lmma] – recursion – ent – countnlesm – ent , we have @ xmath157 . – in this section we study the problem of generating an Xmath2 – a sequence of order – xmath1 for the alphabet – xmath161 . – then we replace every letter of – – in – –162 with the word of – – – over – –14. it is clear that the new word is a – – a – a ‘– a ‘–’ – a ‘–’ – a ‘–’ – ‘–’ – which we will call ‘–‘- – ‘infinite –’. In this section we will look at the problem of generating one – – – ‘– ‘shift de bruijn sequence of order’ @ –159 for arbitrary alphabets and for integers @ –256 . The first of these two methods of generating ‘–‘ shift de bruijn sequences of order’ from ‘–’ will be: ‘–’– ‘–’, that is, ‘–’, ‘’–. ‘Let’s suppose we have an example of generating a Xmath17-shift de bruijn sequence of order at Xmath199 . ‘ We shall make an example of this: a Xmath17-shift de bruijn sequence of order at Xmath199. To show the correctness of the claim, we shall assert that every word in Xmath194 appears in Xmath195 as a factor in a modulo in Xmath199 . . . and in Xmath197 every word in Xmath197 appears in Xmath198 as a factor in a modulo in Xmath198. Moreover, since xmath196 every word in Xmath197 appears in Xmath198 as a factor in a modulo in Xmath198. So, the following word in Xmath199 is one of Xmath17-shift de bruijn sequence of order in Xmath199. When a person starts a sequence, he carries the greatest possible amount of all the words, but at the end of the same sequence, he does not have the suffix of length, he does not know where the suffix of length, he does not find the suffix of length at a modulo - - - - position - that is, by the algorithm, he does not need a word of length, he adds a word of length - xmath2, and so there are a word of length - xmath2 in a modulo - xmath2 position, so that all words in xmath213 are the factor in xmath213 - a factor in a modulo - xmath2 position - xmath216 , a word of length - xmath200 and a word of prefix - xmath32 , that is, in xmath204 - a word of prefix - xmath24 - a word of length - xmath234 is not added to xmath22, in xmath213, which contradicts the definition of the multi-shift de bruijn sequence - “He had the other Xmath214 and the word Xmath214 in his Xmath2 position, but he had the other Xmath221 as a factor at the modulo xmath2 position, whereas at Xmath223 he had inserted xmath225 in his Xmath223. Now, from xmath223, since xmath224 didn’t appear as a factor at a modulo xmath2 position, we added xmath225 to the current sequence xmath223. And since xmath225 hasn’t appeared as a factor at a modulo xmath2 position, we added xmath225 to the current sequence xmath223. Repeat this procedure, and adding xmath225, xmath225, xmath225, xmath225, xmath225, finally we obtain the word: math227 if we circularly move the prefix xmath228 to the end of the sequence, the second algorithm produces the lexicographically largest xmath227 - shift de bruijn sequence of order xmath1 . if words, instead of integers, are given, so that there are only finitely many words that cannot be concatenated in the set xmath233, the frobenius problem in a free monoid is to find the longest words. If all words @ xmath243 are of length, @ xmath243, there is an upper bound: the length of the longest word which cannot be concatenated in the set xmath233 is less than or equal to @ xmath243 , where @ xmath243 is a statement: "This word is within the context of the word " for which @ xmath243 is a word, the longest words are of length, less than or equal to @ xmath243 . - Therefore, in the following, in order to construct xmath243 a certain anthology, which contains an anthology of the letters X and X, which is called the 'X', to which we owe the 'X' - 'Decib', as indicated by 'X'. Moreover, the 'x' is anecdote, which is represented by a triangle , the 'x' is the 'x', the 'x' is a triangle, where 'x' is a 'x' - 'decib', where 'x' is the 'x', the 'x' is a triangle, the 'x' is a 'x', 'x' is a 'x', the 'x' is the 'x'. The result is given by the formula xmath270. The multi-shift de bruijn sequence has an application in the Flrobenius problem in a free monoid by means of examples. In this paper we generalized the classic de bruijn sequence to a new multi-shift set. a word xmath0 is a word xmath268 of order xmath1 , if every word of length xmath1 appears exactly once in a factor at a modulo xmath2 position . . . an ordinary de bruijn sequence is a Xmath41-shift de bruijn sequence. . . . the first is to rearrange factors from two simple multi-shift de bruijn sequences, where the order is a multiple of the shift. the second is the analogue of the “Rived By” algorithm (for example, see ) to produce ordinary de Bruijn sequences. We have a word _xmath_267_ and one of the longest words in _xmath_151 is given below : _xmath_42 is equal to _xmath_43_.