It is true that this, as the steiner-tree problem, is a particularly well-known steiner-tree problem. In steiner-trees, every pair of nodes – some as terminals – is required. Consequently, each pair of nodes – at xmath14 – has its own connection requirements, and the aim is to find a minimum-cost subgraph, which is > =    for every node – at xmath14. Then, given an integer from xmath7, it is possible to find the minimum-cost subgraph that is either    xmath7-edge or     vertex connected. For math10 this is the classic minimum-cost spanning tree (mst). A number of these problems are special cases of the survivable network design problem (sndp) : in sndp each pair of nodes specifies a certain connectivity requirement math15, and the goal is to find a minimum-cost subgraph which has as a minimum-cost paths for each pair math16 disjointed paths. Given the intractability of these connectivity problems, a large number of supplementary techniques and results have been developed. For example, if we take the same integer math7 math7 10, we can ask the minimum-cost spanning subgraph, that is, math8 8= edge or math8 = vertex connected . (refutable examples are given below). The profit maximisation problem is equivalent to the problem of minimizing the cost/length of a path, subject to the requirement that it be contained in at least @xmath0 vertices. Hence, we apply the notation xmath0 xmath1 to this problem. xcite» observed the natural generalisation of the problem from xmath0 to higher connectivity. The authors of xcite, in an independent work of ours, formulated a different approximation for the Xmath0 - xmath1 problem, which yields an Xmath20 approximation. This problem has attracted considerable attention in the approximation literature, and has led to several new ideas and applications of the Xmath1 algorithm. The steiner tree problem is analyzed in the context of higher connectivity. This problem is aimed at finding a minimum-cost subgraph of the given graph, Xmath0 - xmath2 , that is, at least @ xmath0 vertices and @ xmath8 - edge connected. More recently, and in an independent work, the authors of xcite developed a different algorithm for xmath0 - xmath1ec, yielding an xmath20 approximation. however, the algorithm and proof in xcite are incorrect. We have come up with a generalization of the xmath0 - mst problem for all the xmath23. The xmath0 - mst problem is defined as follows: given an integer xmath0 and a graph xmath2 containing the edge costs, we find the minimum cost - cost - of the subgraph containing a subset of xmath0 vertices. We also consider the 'terminal' version of the problem, where the subgraph must contain the terminals from a set of terminals in a given set of terminals. We are aware of no reduction that reduces the 'device xmath0' problem with a set of terminals to the 'device xmath' problem, even if the 'device xmath' problem is met with at xmath30 . we can however, but note that this reduction does not apply to the 'device xmath' problem. In this paper, we consider the vertex - connectable version of the problem, where the subgraph has to contain at least 'devices xmath0 of a set of terminals from a given set of terminals. Note, however, that this reduction does not apply to the 'device xmath' problem. Then, given a graph @xmath2 with edge costs and weights on the sides of the graph @xmath3 , we define the ratio of the cost of the edges in @xmath6 to the total weight of the edges in @xmath6 . Moreover, it can be found in polynomial time. the above theorem and the corollary — cor — cycle — can be found because the problem of finding a minimum density non-trivial cycle is as follows. if you consider the graph in question, given the cost of the edges and the weight of the terminals, then you can find a minimum density non-trivial cycle, a cycle containing only one terminal, so that the density of @ xmath35 is at most the density of @ xmath2. In this case, however, we have no proof. . . . . Note that theorem [theory] and the corollary, [theory] are of interest, because we seek a cycle with at least_ two terminals . . . note that a cycle containing only one terminal is found by the well-known min-mean cycle algorithm for directed graphs in xcite. The formulation of the sub-problem of xmath0-xmath1vc is to seek a sub-problem of the minimum density. An approximation for the dens--@xmath1vc problem (where xmath32 is the number of terminals) can be made somewhat simple by applying a bucketing and scaling trick to a linear relaxation for the problem. We thereby draw inspiration from the algorithmic ideas that have given rise to poly-logarithmic approximations for the xmath0-xmath1-steiner-facility problem . . . . To describe our approach to the rooted version of @xmath0-xmath1-vc, we define a closely related problem. for a subgraph @xmath6 containing @xmath39, let a total of @xmath40 be the number of terminals connected to @xmath39 in @xmath6 . The density of @xmath6 is simply the ratio of the cost of @xmath6 to @xmath40 . so the dens-$____ density of @xmath6 is simply the ratio of the cost of @xmath6 to @xmath40 . so, we are forced to use several alternative and problem-specific techniques . There is a enumeration of the work of Xcite, and this has been inspired by the work of the work of Lau et al., in Xcite on the xmath0-xmath1-ec problem, and in Xcite on the directed orienteering problem. a process for overcoming this problem is a systematic pruning of the subgraph xmath6 added at the last iteration, to reach only the number of terminals in the subgraph xmath6 . it requires special care. to overcome this problem, one may try to prune off the subgraph xmath6 added in the last iteration to only have the number of terminals at all. for the xmath0 - mst problem, xmath6 is a tree, and pruning it is very easy. to make a slightly modified cycle- merging algorithm and a more complex and less trivial analysis, we obtain an improved xmath31 approximation. We remark that this yields a rather straightforward xmath20 approximation for xmath0 - mst and could have been discovered much earlier than the more naive and cleverly analyzed by xcite . this is a slightly modified cycle- merging algorithm with a more sophisticated and trivial analysis to achieve an improved xmath31 approximation. If we do not add to the problem of the minimum-density (non- trivial) simple cycle problem, we will return to the topic of the minimum-density a finite non-economous cycle, which we will do by theorem —the cycle —and the following two applications —do they take a different approach, employing the sophisticated idea of “no” — where n=0 @ xmath49 = 0. they use the approach we are taking now, and use the “success-plus” technique in order to find a “n”—connected subgraph at least at least @ xmath6 edges. a graph such as we have shown above with edge costs and terminal weights a, to determine the density of a subgraph at least @ xmath6 is the sum of the costs of edges in @ xmath6 divided by the weights of terminals in @ xmath6 . in the truncation procedure they employ a different approach; they employ the sophisticated idea of no—where zero @ xmath49 is the sum of the weights of terminals in @ xmath6 . . . . in order to be straightforward, we shall use the more restricted version . . . however, we shall stick to the less granular version. As a matter of fact, in our rooted @ xmath0 - xmath1vc problem, the goal is to find a minimum cost subgraph on at least xmath0 terminals . . . for simplicity of exposition, we shall stick to the more restricted version . . The solution to the unrooted problem is obtained by adding two minimum-cost paths to the surface of the surface of the surface. (In the optimal solution, since the two paths in the surface are not a complete solution, the cost of these additional paths cannot exceed a cost of a factor of two.) Let xmath51 be the cost of an optimal solution to the surface of the surface of the surface of the form, in which xmath5 is the number of terminals in the given form. The following detail is shown in section xmath5; and the aforementioned Lem, Lem, lem, the following. The following lem, Lp, is described below. For the surface of dens xmath6 (there is an xmath37 approximation based on the natural lp, which will give the minimisation of the density of the connection problem, due to fleischer, jain, and williamson xcite), and certain standard techniques. Let xmath5 be the cost of the optimal solution to the surface of dens xmath6 (within the optimal solution the cost of these added paths cannot be more than xmath51 .. ) Let xmath54 be the cost of the optimal solution to the surface of dens xmath6. The graph, according to the Lem–vekv principle, contains the solution to the dens– @xmath1vc problem of density at most @xmath62. This solution, however, is to be found in the $xmath58 step; and this is to be proved in the section ‘Subsequent’. Therefore, we only have to bound the cost of the graph – ‘xmath58’ added in the pruning step; we prove the following theorem in section ‘Subsequent’. in this case, we shall shave off the cost of the graph – ‘xmath6’ in order to find a graph with the necessary number of terminals; this is the ‘upgrade’ step. This simple count-line argument represents the following lemma: if every augmenting step we add a graph of density of at most – xmath64 (and where – xmath59 is the number of additional terminals needed), then the total cost of all the augmenting steps is at most – xmath65 . a simple clog-like argument for a simple problem of yawn: ‘In this case, we prune yawn to find a graph with the required number of terminals; this is the enhancing step.’ So a graph of at most – xmath64 always has density at most – xmath66 . . . and a graph of a certain density at most – xmath67. , we are after all going to prove a lemma [lem: densv] that there is a densv problem with xmath75 in it, and a theorem (thm: avekv) in which we find a graph of xmath6 of minimum density, in which every terminal of xmath6 is two, and its value is at most xmath72 . and thus the total cost of our solution is at xmath74. We also prove in section (sub-section) pruning a graph at xmath6 and find a graph at xmath58 with xmath59 terminals and at most xmath72 (so that the cost of the pruning step is @ xmath75 . before this step is proved, we develop some tools in section (sub-section) pruning; chief among these tools is theorem . (this density is defined by the cost of @ xmath6 divided by the number of terminals it contains, not including @ xmath39 .) , this explains the fact that the dens - xmath1vc problem is defined in the following way: given a graph @ xmath5, a set of terminals @ xmath77, a root @ xmath77, find a subgraph @ xmath6 of minimum density, in which every terminal of @ xmath6 is 2 - connected to @ xmath39 , thus, the total cost of our solution is @ xmath74 . . . . Here, the real problem is to solve an integral solution of density, where at least @ xmath89 , where @ xmath89 is the cost of an optimal solution to dens - @ xmath1 , as if @ xmath83 were the edge. . . . If @ xmath78 is chosen, then the variable @ xmath84 will indicate whether the edge of @ xmath85 is used by the solution. . . . The linear system * lp-dense - dens - has an exponential number of variables, but is constrained by a polynomial number of arbitrary constraints. But it can be solved in a polynomial time . . . It is not hard to see that an optimal solution to * lp-dense - dens - has cost at least the density of * lp-dense - @ xmath90 , where @ xmath90 is the cost of an optimal solution to * lp-dense - @ xmath89 . . . The first task in the search is to find an optimal fractional solution to the fractional solution of lp - dens. In the following operation, the authors describe a linear program, Xmath105, for the calculation of a minimum cost subgraph in which a given set of terminals is 2 - connected to the root, and show that this linear program has an integrality gap of 2 . To prove our claim about the cost of the subgraph of lp - dens, in which every terminal of lp - dens is 2 - connected to lp - dens, take into account that the equation of lp - dens is given a factor of 2 . so that the resulting algorithm for dens - lp - dens is: a. Find a set of terminals - lp - dens, such that lp - dens - and a set of terminals - lp - dens , as the equation of lp - dens - will be found a more optimal solution of lp - dens . 2 . find a subgraph - lp - dens, where every terminal of lp - dens is 2 - connected to lp - dens, and show that this linear program has an integrality gap of 2 . And so the following section shows that if the cycle Xmath35 contains an ear with a density less than Xmath110, it can be used to find a cycle with a lower density. First, we prove the theorem (the cycle) that a two-sided graph with cost and terminal weights contains a simple, non- trivial cycle, with density no less than the average density of the graph. The latter is obtained by two methods of finding a cycle with a density of less than the one we have just found at xmath2: the first is described in section [subsection], and the second is more complicated, but the running time is not polynomial. In this section, we give a fully polynomial algorithm for the non- trivial cycle of a table. Here, in addition to a calculation, we show that if a cycle in question has an ear which is less than xmath110, we can make use of this ear to find a cycle in which density is less than xmath110. , if xmath115 is a member of xmath115, xmath118 is a member of xmath116, Xmath113, and Xmath6 , let xmath119 be the sum of the cost of the edges of xmath115, xmath113 and xmath122. xmath126 is a member of xmath125, and so xmath115 is a member of xmath120. if xmath6 is a member of xmath127, xmath128 is the member of xmath128, then Xmath129 is the member of xmath127, and Xmath129 is the member of xmath129. . . . . given a cycle of xmath35 in a graph of xmath1 and xmath1 with a single vertex , let xmath2 be a simple non-silly cycle. if xmath6 is a member of xmath127, then xmath128 is a member of xmath128. . . . . [2] Let xmath6 be an arbitrary member of xmath127, and let xmath129 . And suppose that deleting a vertex @ xmath50 separates @ xmath131 from @ xmath133 , a simple non- trivial cycle does exist, for @ xmath2 is a connected component of @ xmath127 , and therefore deleting @ xmath50 does not separate @ xmath131 from @ xmath133 . . . but if @ xmath134, @ xmath28 and @ xmath131 are in the same component of @ xmath135, because @ xmath28 is two connected components of @ xmath127 in @ xmath58 , then deleting @ xmath50, doesn’t separate @ xmath131 from @ xmath133 . . . now we show that, given any two connected graphs, we can find a non- trivial cycle of density no greater than that of @ xmath2. Let @ xmath2 be a graph formed by resolving the given cycle @ xmath35 to a single vertex @ xmath28 . . . On the first side, if xmath is composed of at least one terminal, then recursively find a non- trivial cycle in xmath in xmath such that xmath142 . Then, if xmath has exactly one terminal, find any two vertices disjoint with the edges of xmath from xmath50 to distinct vertices in the cycle of xmath35. If xmath has 2 or more terminals, then find a non- trivial cycle in xmath that is not @ xmath142 . . . if xmath does not contain 2 or more terminals, then find any 2 or 3 disjoint paths with the edges of xmath6 from xmath50 to the same vertices in the cycle of xmath35. The density of this ear is less than the density of xmath110; again, we use lemma [ lem: goodear] to obtain a cycle in xmath2 with the desired properties. “Think about it — there is an optimal solution to the dens-_____________________________________________________________________________________________________, which is a satisfactory solution to the dens-__________________________________________________________________________________________________________ of density at the most ____________________________________________(16] theorem _lemma __demi-equivalence_, _lemma _____ dens_________, ______________ ____________ (discussion_em: equivalence_), therefore a _____________________ We shall start with some definitions: Let xmath35 be a cycle in a graph of xmath2 and let xmath42 be the graph formed by deleting xmath35 from xmath2; and let xmath150 be the connected components of xmath42; we shall call them 'leaves' of xmath35. If a ring is only a ring, it will be an ear of xmath35, but a ring of xmath151 may be more complicated. From the definition of an earring, for any pair of leaves of xmath151 there is a path, whose inner vertices are all in xmath151. It is clear that the segments divide the edge set of xmath35. Having omitted a segment, we refer to deleting the edges of xmath35. In this section, we introduce a strongly polynomial time algorithm, which, given a two-point graph of xmath5, with the costs and terminal weights of edge and bottom, finds a non- trivial cycle of density that is at least twice that of xmath2 . . . . if the origin is an earring, it is the first, not the last . . . . The arc of an earring is the subgraph of @xmath35, which can be traversed by a clockwise direction from its first earring @ xmath156 to its last earring @ xmath157. The length of this arc is @xmath158 . . . note that if an arc contains the origin, it must be the first vertex of the arc. (xmath5 ) . . . . figure [Fig. 1] illustrates several of these definitions. . . . . circle (2 cm) (at 0 , 0 ) @ xmath155 . . . at (38 , 2 . . ) @ xmath160 . . . . 0 , 0 . . “Send!” (Adult) “R”—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— “Section 2. “Restraint 2.” (Pronounced “Restraint”); “Connoisseur 2.” (Imperial 1). “Connoisseur 2” (Optional) ; “Connoisseur 2” (Optional) ; “Connoisseur 2” (Original) ; “Connoisseur 2” (Original 2”). “Connoisseur 2” (Order 1). “Connoisseur 2” (Order 2”) (Order 2; or, in fact, 2 cm)—“Connoisseur 2”; “Connoisseur 2” (or, in fact, “Centiisseur 2”); “Connoisseur 2” (as though “draft”), “Connoisseur”, – “Baihe” (or, in other words, the “grave”) (meaning that the sphere is the sphere that is the “envelope”; that the “envelope” means, “the space, that is, the area around,” and that it is the “envelope” that forms the “envelope” (i.e., the sphere is not the circular domain”), or, at least, the opposite. That is, at the sphere of a circle of a circle of a single metre, of a circle of a single meter; (at sphere of a circle of a single metre), or (gross, sphere of a circle of a circle of two meters) – a circle of three meters, – a circle of two meters (i.e., at sphere of a circle of a radius——________________________________________________________——____________________________——_________________________________________________—————————————————————————————————————————————————————————————————————————————————————— ‘ . . . ’ - ‘ . . ’ ’ ; ‘ . . . ’ – ‘ 0 , 1 . . ’ – ‘ xmath168. ’ – ‘ ‘ . . . ’ – ‘ ‘ . . ’ – ‘ ‘ . . ’ – ‘ . . ’ – ‘ . . ’ – ‘ . . ’ – ‘ ’ – ‘ . . ’ – ‘ . . .’ – ‘ ‘ . . .’ ‘ ‘ ‘ . . . ’ – ‘ ‘ . . .’ ‘ . . .’ ‘ ‘ . . .’ ‘ ‘ . . .’ ‘ ‘ . . .’ ‘ . . . ‘ . . We must show that each segment in the critical arc is safe. Remember that a segment in xmath 13 is safe if the graph in xmath153 is two-sided. . . . (that is, if xmath172 or xmath174 are two-sided. . . . ) Let xmath156 and xmath157 (i.e., if xmath155 and xmath157 are the same earring in xmath58, it is easy to find two-sided paths between them in xmath153. . . . . let xmath156 be the clasp of xmath166, and let xmath157 be the clasp of xmath166. . . . . we consider three cases: both xmath156 and xmath157 are clasps of earrings in xmath169; one is, but not both, or neither . . . figure . . . earringproof . Figure . . . The first thing we have is to follow the critical arc clockwise from xmath157 to xmath164 (the last key in the critical arc) from xmath164 to xmath164 (thus the last key in the critical arc) from xmath164 to xmath164, from xmath164 to xmath165, and again, to the critical arc, from xmath164 to xmath164. Now let xmath156 be a clasp of xmath166, and xmath157 be a clasp of xmath167. And let xmath178 be a clasp of xmath166, and xmath178 be a clasp of xmath167. let xmath178 be a clasp of xmath166, and xmath178 be a clasp of xmath167 . so that we have two axe-twin paths from xmath156 to xmath157 . so that . . . internal vertices of this path are all in xmath182 or in xmath35, but not part of the critical arc (since each of xmath178 and xmath179 are outside the critical arc) . . . The first route is from xmath157 to xmath164, through the critical arc, and then from xmath164 to xmath156 through xmath166, the second route is from xmath157 to xmath179 through xmath167, and the third route is from xmath179 to xmath156 clockwise through xmath35. let xmath2 be a graph with xmath32 terminals and density Xmath146. We describe a polynomial time method for finding a cycle in xmath2 of density less than xmath136. theorem (thm: cycle): let xmath2 be a graph with xmath32 terminals and density Xmath146. We describe a polynomial time method for finding a cycle in xmath2 that is less than xmath137 . . . then the two paths are interlocked. The first path is from xmath157 to xmath164, then from xmath164 to xmath156, and from xmath179 to xmath156 clockwise through xmath35. The second path, from xmath35 to xmath155, is not in the critical arc, but has index greater than xmath175 . if xmath35 contains at least two terminals, then we are done. if xmath35 contains at least two terminals, then we are done. By the Law, 'Are the Bases Earring-proof', every segment in the arc of xmath35 is safe. Suppose xmath35 has at least two terminals, there must be at least one earring of xmath35. Since xmath35 contains at least two terminals, there must be at least one earring of xmath35. Let Xmath28 be the origin of this cycle, and Xmath6 be the origin of the cycle. as Xmath28 is the only terminal of xmath35, Xmath13 is not an internal vertex of xmath2 . this proves a natural algorithm for solving the problem. Since xmath28 is the only terminal of xmath35, Xmath13 contains no terminals, and therefore the graph Xmath188 is 2 connected and contains all xmath32 terminals of xmath2. Therefore, given a graph that _is_ minimum - density non- trivial is equivalent to finding minimum - density cycle, and so can be solved in polynomial time. To simplify the equation, let xmath32 be the number of terminals in xmath2 and xmath189 be the number of perpendicular points; xmath190 is the density of xmath2 . b) the main phase of the algorithm proceeds by maintaining a set of 2 connected subgraphs that we call clusters, and repeatedly finding low density cycles which merge clusters of similar weight to form larger clusters (the weight of a cluster at xmath136, denoted by xmath197, is (the number of perpendicular points) the number of terminals. the system stops when most terminals are in large clusters. We now describe the algorithm for merging clusters , see the next page. To simplify it, let xmath144 be the quantity xmath195. Here xmath136 is the weight of the cluster at xmath190, and the weight of xmath198 is (about) the weight of the cluster. (the weight of a cluster at xmath190 is (about) the number of terminals that it contains , for each terminal there are two xmath190 connections, each of which is 2xmath190 in total cost; xmath190 is the density of xmath199 . We say a cluster is large if it has weight at least at xmath100, and small if it is not. When (@ xmath199) we add a dummy terminal to xmath199, a weight of xmath199, we add dummy edges of cost 0 to two (arbitrary) distinct vertices of xmath136 , we let xmath200 be the small clusters that contain a dummy terminal or an edge of xmath35 . . . (note that the terminals in xmath200 belong to a subset of xmath201 . . .) , in iteration xmath95, the terminals correspond to the clusters of tier xmath95 . . . therefore, at any stage of the algorithm, all currently small clusters are edge-disjoint. . . . on the other hand, all large clusters are frozen; even if a large cluster is frozen, it is still frozen; nevertheless, large clusters, on the other hand, are frozen; even if a large cluster is frozen; even if a large cluster is frozen, it is still frozen; if a large cluster is frozen, it is still frozen; and if a large cluster is frozen, it is frozen; even if a large cluster is frozen, it is frozen; and so, at any stage of the analysis, all the small clusters are divided into two parts: . . . because we always use low density to merge clusters, an analysis similar to that of xcite and xcite shows that all clusters have density at least at least at xmath205. The only structural change in xmath2 is that new vertices are added as terminals, and they are added with edges to two distinct vertices of xmath2 . we did this first, but it did not suffice to prove theorem . . . . we proved by a series of claims that, together, show that when the algorithm terminates, most terminals are in large clusters, and all clusters are 2 - connected. in this way, the xmath95th iteration terminates, when no good cycles can be found using the remaining tiers of xmath95 . in this way, we may find some terminals that correspond to clusters which have not been merged to form clusters of higher tiers. In fact, the only structural changes in xmath2 are made when new vertices are added as terminals; they are added with edges to two distinct vertices of xmath2 ., which preserves the oblongity of 2 . The group of clusters formed by mergers are all @xmath1-connected. (b) allow a cluster formed by combining a cycle @xmath35 with a cluster of @xmath200. (c) assume that the intersections of each line of the circle of @xmath35 are two-connected and converge in each case. (d) assume that each line of @xmath35 contains two vertices of each line of @xmath213, and that each line of @xmath21 is two-connected. It is further a fact that the intersections of each line of @xmath35 may be a singleton vertex (as in tier 0), but such a vertex does not affect the 2nd link. * The circle of @xmath210 is convergent at xmath219. – because there are two or three levels in this pyramid, we have shown that most terminals reach large clusters, all of which are 2–connected, but we have not argued about the density of these clusters. Let xmath202 be the clusters that have been merged in order to form xmath202, and so to proceed with the cycle xmath35 that merged them; each xmath211 was a small cluster, of weight at most xmath0 . The next pyramid says that if we can find a large cluster of good density, we can find a solution to the problem of xmath0-xmath1vc. The previous pyramid shows that the weight of such clusters in any tier is at most xmath219; since there are xmath220 tiers, the total number of terminals not in large clusters is less than xmath221 . Let xmath200 be the clusters merged to form xmath202 in order to enclose the cycle xmath35 that merged them. Each xmath211 was a small cluster, weighed at most xmath0 . . . Let @ Xmath232 be an arbitrary vertex of @ Xmath223; let a cut be made in the vertex @ xmath131, and it will be impossible to separate xmath232 from xmath229. In this case, the signs are not impossible, because a xmath231 branch in the chain is not possible. Moreover, we present two xmath234 and xmath235 paths in the chain, from xmath232 to xmath28 and xmath229 respectively; but deleting xmath131 will not separate xmath232 from xmath229, which is a contradiction. This belt is, for example, shown as a spiral of xmath232, if we assume that the branch from xmath131 is a dividing line of xmath290. The path between xmath234 and xmath235 is easily obtained; let xmath211 be the cluster of xmath232. The paths from xmath230 to xmath28 and xmath229 are easy to find; let xmath211 be the cluster of xmath232 . The circuit (xmath232) is a piece of arbitrary geometry of xmath223; suppose a cut-off-branched-terminal (xmath131), which, when deleted, separates xmath232 from xmath23, it is not in the same group as xmath232 in xmath233. At first, let's present the following formula for calculating density: for each cluster of the cluster formed by combining two cycles, the density of each cluster of the cluster is at most @xmath205 , then we need to see that each cluster has, by its acts, a density of @xmath205 . in this case, @xmath234 is formed by the overlapping of edges of @xmath35, which is followed by the overlapping of a path from @xmath235 to xmath28, and - in the latter, we take advantage of the fact that smaller clusters merged together. [To prove this assumption, we take the form of the number of vertices of the cluster, and in this case , the edges of @xmath235 are formed in the same way , but we shall pay separately for these edges, but we may also calculate this cost. Let Xmath248 be the set of clusters that have been merged with a cycle in xmath35 to form @xmath202. let Xmath249 be the set of clusters of tier at xmath95, and let Xmath250 be the set of clusters in xmath248 of tier at xmath95, let Xmath249 be the set of clusters in xmath248 of tier at xmath95. We prove this claim by inducing the number of vertices in a cluster. Once an edge is in a large cluster, we can no longer use the edge-dispersion argument , since small clusters are edge-dispersion-inducing, the average density In the meantime, because the network of cells in Xmath25 was an exceptionally slender connection, and since the network of cells in Xmath25 must have been formed before Xmath95 (every cell formed prior to Xmath95 is a strictly greater slender connection), then we can use induction to prove that the cost of edges in Xmath25 is at least at least @ xmath253. , therefore, the total cost of edges in Xmath25 is at most @ xmath255. then we can use the strong connection of @ xmath35 to the problem of @ xmath35, that is, the density of xmath35 is at most @ xmath254 . . . for the purpose of more careful analysis, let @ xmath202 be anarbitrary large cluster. Since we have only xmath220 tiers, the previous lemma assumes that the cost of xmath249 is at most @ xmath254 . and we can use this fact together with the lema - the segment - to find the solution to the rooted @ xmath0--@ xmath1--problem of cost at most @ xmath257. The leaves of the trees correspond to vertices of xmath2; all have costs of 0 . . . and we now define the last stage clusters of xmath202: they are the clusters formed during iteration Xmath95, which became part of xmath202 . we have now defined the final stage clusters of xmath202: they are the clusters formed during iteration Xmath95, which have become part of xmath202. (we now classify xmath202 itself in the list of final stage clusters; even though xmath202 was formed during iteration Xmath95, it may be made up of other final stage clusters . for instance, during iteration Xmath95 we merge several tiers xmath95 into one tier xmath136, and if a cycle xmath35 contains an edge of xmath136, then xmath136 will merge with other tiers of xmath35 . ) The last tier is the 'last' tier . . . (we put xmath202 itself in the list of final tiers; even though xmath202 was formed in iteration xmath95 of dyas, it may contain other final tiers . . . , if in iteration Xmath262 four clusters of this tier merged to form Xmath264 , subsequently, in iteration Xmath95, clusters of xmath6 and xmath265 are combined to form Xmath266 , note that the cost of this cycle is only calculated by the weight of xmath267 and xmath263 , i.e. since xmath266 shares the same edge with this cycle, all three clusters are combined to form Xmath202 . ,  a  at 1 .5 . 5 .5 , 265 . 5 5 .5 , 5  5  5 5 5 .5 5 5 5 .5 .5 , 5 5 .5 5 6 , 5 5 5 5 5 5 5 .5 5 5 5 .5 .5 5 5 5 5 5 6 .5 5 6 5 .5 5 .5 .5 5 5 .5 5 .5 .5 . 5 .5 the line ends at a point at a point in a row. (c) c – d – c – d – d – d – c – d – c – d – c – d – d – c – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d, d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – d – To specify the total cost of @xmath202, we must find the sum of the costs of the vertices of @xmath260 that constitute the corresponding cluster. In order to account for the weight of @xmath260 the weight of @xmath132 , @xmath132 is at least the sum of the weights of the lower tiers of @xmath95 , (note that the lower tiers of @xmath95 must have been formed before the second iteration of @xmath95 and so it cannot be the lower tier of @xmath132 , but the weight of @xmath132 is not the weight of @xmath132. In order to denote the total final cost of @xmath132 , we must denote that the sum of the costs of vertices of @xmath132 associated with the final cluster is at most @xmath144 times the sum of the weights of the last tier of @xmath133 . (note that the last tier of @xmath133 must be formed prior to iteration of @xmath95 and therefore it cannot be itself a final tier.) Let @ xmath274 (replaced @ xmath275) be a last cluster of @ xmath272 (replaced @ xmath273) containing @ xmath85. This means that if the two clusters are similar, no edge is a last edge of both @ xmath272 and @ xmath275. As a last cluster, both @ xmath274 and @ xmath275 are formed before iteration @ xmath95. But until iteration @ xmath95, neither of them is a big cluster, and two small clusters cannot share a single edge without a merged cluster. Therefore, @ xmath274 and @ xmath275 must be merged, so that they cannot belong to separate large clusters, giving the desired contradiction. ' There is a last density of a large cluster, that is the ratio of its last cost to its weight. ' - our final density, which is the ratio of its last cost to its weight, is the sum of the last costs of all the large clusters: for any one @ xmath95, each edge is a last edge of at least one large cluster of type @ xmath95. a) theorem (thm: big-cluster) and lemma (thm: r) together make it possible to find an answer to the rooted problem of density of xmath0 and xmath1vc of cost at most xmath197. The solution of the problem of xmath202 is to be found at most xmath270. a) theorems (thm: good-cluster) and lemma (thm: segment) imply that one can find a solution to the rooted problem of xmath0 and xmath1vc of cost at most xmath191 . . . and lemma , lem: segment, all together suggest that we can find a solution to the rooted problem of xmath0 and xmath1vc, which has a rootscore of 2 , and we can find an algorithm for the solution of the rooted problem xmath0 and xmath285 . . . if not, can we obtain an approximation for the easier xmath0 and xmath1ec problem?